export declare class PlatformPayment {
    /**
    * The capture\'s merchant reference included in the transfer.
    */
    'modificationMerchantReference'?: string;
    /**
    * The capture reference included in the transfer.
    */
    'modificationPspReference'?: string;
    /**
    * The payment\'s merchant reference included in the transfer.
    */
    'paymentMerchantReference'?: string;
    /**
    * The type of the related split.
    */
    'platformPaymentType'?: PlatformPayment.PlatformPaymentTypeEnum;
    /**
    * The payment reference included in the transfer.
    */
    'pspPaymentReference'?: string;
    /**
    * **platformPayment**
    */
    'type'?: PlatformPayment.TypeEnum;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace PlatformPayment {
    enum PlatformPaymentTypeEnum {
        AcquiringFees = "AcquiringFees",
        AdyenCommission = "AdyenCommission",
        AdyenFees = "AdyenFees",
        AdyenMarkup = "AdyenMarkup",
        BalanceAccount = "BalanceAccount",
        Commission = "Commission",
        Default = "Default",
        Interchange = "Interchange",
        PaymentFee = "PaymentFee",
        Remainder = "Remainder",
        SchemeFee = "SchemeFee",
        TopUp = "TopUp",
        Vat = "VAT"
    }
    enum TypeEnum {
        PlatformPayment = "platformPayment"
    }
}
