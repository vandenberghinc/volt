import Service from "../../service";
import Client from "../../client";
import { ReturnTransferRequest } from "../../typings/transfers/models";
import { ReturnTransferResponse } from "../../typings/transfers/models";
import { Transfer } from "../../typings/transfers/models";
import { TransferInfo } from "../../typings/transfers/models";
import { IRequest } from "../../typings/requestOptions";
export declare class TransfersApi extends Service {
    private readonly API_BASEPATH;
    private baseUrl;
    constructor(client: Client);
    /**
    * @summary Transfer funds
    * @param wWWAuthenticate {@link string } Header for authenticating through SCA
    * @param transferInfo {@link TransferInfo }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link Transfer }
    */
    transferFunds(transferInfo: TransferInfo, requestOptions?: IRequest.Options): Promise<Transfer>;
    /**
    * @summary Return a transfer
    * @param id {@link string } The unique identifier of the transfer to be returned.
    * @param returnTransferRequest {@link ReturnTransferRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link ReturnTransferResponse }
    */
    returnTransfer(id: string, returnTransferRequest: ReturnTransferRequest, requestOptions?: IRequest.Options): Promise<ReturnTransferResponse>;
}
