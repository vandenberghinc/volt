declare const FrameElement_base: {
    new (): {
        [x: string]: any;
        __is_velement: boolean;
        rendered: boolean;
        element_type: string;
        base_element_type: string;
        remove_focus: any;
        _v_children: any[];
        _element_display: string;
        _is_connected: boolean;
        _on_append_callback?: Function;
        _assign_to_parent_as?: string;
        _parent?: any;
        _side_by_side_basis?: number;
        _animate_timeout?: ReturnType<typeof setTimeout>;
        _disabled: boolean;
        _timeouts: Record<string, any>;
        _on_window_resize_timer: any;
        _abs_parent: any;
        _pseudo_stylesheets: Record<string, any>;
        _on_resize_rule_evals: Record<string, any>;
        _observing_on_resize: boolean;
        _observing_on_render: boolean;
        _on_resize_callbacks: ((element: any) => void)[];
        _on_render_callbacks: ((element: any) => void)[];
        _on_theme_updates: ((element: any) => void)[];
        _on_mouse_leave_callback: (element: any, event: MouseEvent) => void;
        _on_mouse_enter_callback: (element: any, event: MouseEvent) => void;
        _on_shortcut_time: number;
        _on_shortcut_key: string;
        _on_shortcut_keycode: number;
        _on_keypress_set: boolean;
        _on_enter_callback?: ((element: any, event: KeyboardEvent) => void) | undefined;
        _on_escape_callback?: ((element: any, event: KeyboardEvent) => void) | undefined;
        _on_appear_callbacks: Record<string, any>[];
        _context_menu?: import("./context_menu").ContextMenuElement;
        _media_queries: {
            [key: string]: {
                list: MediaQueryList;
                callback: (query: MediaQueryList) => void;
            };
        };
        connectedCallback(): void;
        clone(clone_children?: boolean): any;
        pad_numeric(value: number | string | null, padding?: string): string;
        pad_percentage(value: number, padding?: string): string;
        edit_filter_wrapper(filter: string | null, type: string, to?: string | null): string;
        toggle_filter_wrapper(filter: string | null, type: string, to?: string | null): string;
        _convert_px_to_number_type(value: any, def?: number | null): any;
        _try_parse_float(value: any, def?: number | null): any;
        append(...children: any[]): any;
        zstack_append(...children: any[]): any;
        append_to(parent: any): any;
        append_children_to(parent: any, on_append_callback?: Function): any;
        remove_child(child: any): any;
        remove_children(): any;
        child(index: number): any;
        get(index: number): any | undefined;
        text(): string;
        text(value: string): any;
        width(): string | number;
        width(value: string | number, check_attribute?: boolean): any;
        fixed_width(): string | number;
        fixed_width(value: string | number): any;
        height(): string | number;
        height(value: string | number, check_attribute?: boolean): any;
        fixed_height(): string | number;
        fixed_height(value: string | number): any;
        min_height(): string | number;
        min_height(value: string | number): any;
        min_width(): string | number;
        min_width(value: string | number): any;
        width_by_columns(columns: number): any;
        offset_width(): number;
        offset_height(): number;
        client_width(): number;
        client_height(): number;
        x(): number;
        y(): number;
        frame(width: string | number, height: string | number): any;
        min_frame(width: string | number, height: string | number): any;
        max_frame(width: string | number, height: string | number): any;
        fixed_frame(width: string | number, height: string | number): any;
        get_frame_while_hidden(): {
            width: number;
            height: number;
        };
        padding(): string;
        padding(value: string | number): any;
        padding(top_bottom: string | number, left_right: string | number): any;
        padding(top: string | number, right: string | number, bottom: string | number, left: string | number): any;
        padding_bottom(): number;
        padding_bottom(value: string | number): any;
        padding_left(): number;
        padding_left(value: string | number): any;
        padding_right(): number;
        padding_right(value: string | number): any;
        padding_top(): number;
        padding_top(value: string | number): any;
        margin(): string | undefined;
        margin(value: string | number): any;
        margin(value: string | number, value2: string | number): any;
        margin(value: string | number, value2: string | number, value3: string | number, value4: string | number): any;
        margin_bottom(): number;
        margin_bottom(value: string | number): any;
        margin_left(): number;
        margin_left(value: string | number): any;
        margin_right(): number;
        margin_right(value: string | number): any;
        margin_top(): number;
        margin_top(value: string | number): any;
        position(): string | undefined;
        position(value: number | string): any;
        position(top?: number | string, right?: number | string, bottom?: number | string, left?: number | string): any;
        stretch(value: boolean): any;
        wrap(value: boolean | string): any;
        z_index(value: number): any;
        side_by_side(options: {
            columns?: number;
            hspacing?: number;
            vspacing?: number;
            stretch?: boolean;
            hide_dividers?: boolean;
        }): any;
        side_by_side_basis(): number | undefined;
        side_by_side_basis(basis: number | false): any;
        ellipsis_overflow(): boolean;
        ellipsis_overflow(to: boolean, after_lines?: number | null): any;
        align(): string;
        align(value: string): any;
        leading(): any;
        center(): any;
        trailing(): any;
        align_vertical(): string;
        align_vertical(value: string): any;
        leading_vertical(): any;
        center_vertical(only_on_no_overflow?: boolean): any;
        trailing_vertical(): any;
        align_text(value: string): any;
        text_leading(): any;
        text_center(): any;
        text_trailing(): any;
        align_height(): any;
        text_wrap(): string;
        text_wrap(value: string): any;
        line_clamp(): string;
        line_clamp(value: string): any;
        box_orient(): string;
        box_orient(value: string): any;
        color(): string;
        color(value: string | import("./gradient").GradientType): any;
        border(): string;
        border(value: string): any;
        border(width: string | number, color: string): any;
        border(width: string | number, style: string, color: string): any;
        border_top(): string;
        border_top(value: string | number): any;
        border_top(width: string | number, color: string): any;
        border_top(width: string | number, style: string, color: string): any;
        border_bottom(): string;
        border_bottom(value: string): any;
        border_bottom(width: string | number, color: string): any;
        border_bottom(width: string | number, style: string, color: string): any;
        border_right(): string;
        border_right(value: string): any;
        border_right(width: string | number, color: string): any;
        border_right(width: string | number, style: string, color: string): any;
        border_left(): string;
        border_left(value: string): any;
        border_left(width: string | number, color: string): any;
        border_left(width: string | number, style: string, color: string): any;
        shadow(): string;
        shadow(value: number): any;
        shadow(value1: number, value2: number, value3: number, value4: string): any;
        drop_shadow(): string;
        drop_shadow(value: number): any;
        drop_shadow(value1: number, value2: number, value3: number, value4: string): any;
        greyscale(): string;
        greyscale(value: number): any;
        opacity(): number;
        opacity(value: number): any;
        toggle_opacity(value: number): any;
        blur(): string;
        blur(value: number): any;
        toggle_blur(value?: number): any;
        background_blur(): string;
        background_blur(value: number | null): any;
        toggle_background_blur(value?: number): any;
        brightness(): string;
        brightness(value: number): any;
        toggle_brightness(value?: number): any;
        background_brightness(): string;
        background_brightness(value: number): any;
        toggle_background_brightness(value?: number): any;
        rotate(): string;
        rotate(value: number | string): any;
        delay(value: string | number): any;
        duration(value: string | number): any;
        background(): string;
        background(value: string): any;
        scale_font_size(scale?: number): any;
        display(): string;
        display(value: string): any;
        hide(): any;
        show(): any;
        is_hidden(): boolean;
        is_visible(): boolean;
        toggle_visibility(): any;
        inner_html(): string;
        inner_html(value: string): any;
        outer_html(): string;
        outer_html(value: string): any;
        styles(): Record<string, string>;
        styles(css_attr: Record<string, any>): any;
        attr(key: string): null | string;
        attr(key: string, value: string | number | null): any;
        attrs(html_attr: Record<string, string | number | boolean>): any;
        event(key: string): any;
        event(key: string, value: any): any;
        events(html_events: {
            [key: string]: EventListener;
        }): any;
        class(): string;
        class(value: string): any;
        toggle_class(name: string): any;
        remove_class(name: string): any;
        remove_classes(): any;
        hover_brightness(): boolean;
        hover_brightness(mouse_down_brightness: boolean | number, mouse_over_brightness: number): any;
        text_width(): number;
        text_width(text: string): number;
        frame_mode(frame_mode: import("./frame_modes").FrameNodesType): any;
        frame_mode(frame_modes: import("./frame_modes").FrameModesType, frame_mode: import("./frame_modes").FrameNodesType): any;
        media(media_query: string, true_handler?: (element: any) => void, false_handler?: ((element: any) => void)): any;
        remove_media(media_query: string): any;
        remove_medias(): any;
        remove_all_media(): any;
        default_animate(...args: any[]): any;
        animate(options: {
            keyframes: Array<any>;
            delay: number;
            duration: number;
            repeat?: boolean;
            persistent?: boolean;
            on_finish?: ((element: any) => void) | null;
            easing?: string;
        }): any;
        stop_animation(): any;
        slide_out(options: {
            direction: string;
            distance: number;
            duration: number;
            opacity?: boolean;
            easing?: string;
            hide?: boolean;
            remove?: boolean;
            display?: string;
            _slide_in?: boolean;
        }): Promise<void>;
        slide_in({ direction, distance, duration, opacity, easing, display, }: {
            direction?: string;
            distance?: number;
            duration?: number;
            opacity?: boolean;
            easing?: string;
            display?: string;
        }): Promise<any>;
        dropdown_animation({ distance, duration, opacity_duration, total_duration, delay, start_delay, easing, }?: {
            distance?: string;
            duration?: number;
            opacity_duration?: number;
            total_duration?: number;
            delay?: number;
            start_delay?: number;
            easing?: string;
        }): Promise<void>;
        increment_number_animation({ start, end, duration, total_duration, delay, prefix, suffix, }?: {
            start?: number;
            end?: number;
            duration?: number;
            total_duration?: number;
            delay?: number;
            prefix?: string;
            suffix?: string;
        }): Promise<void>;
        on_event(id: string, callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_event(id: string, callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_events(id: string): any;
        timeout(delay: number, callback: (instance: any) => void, options?: {
            id?: string;
            debounce?: boolean;
        } | null): any;
        clear_timeout(id: string | number): any;
        disable(): any;
        enable(): any;
        on_click(): null | Function;
        on_click(simulate_href: string | null, callback: Function): any;
        on_click(callback?: Function): any;
        on_click_redirect(url: string): any;
        on_scroll(): (EventListener | null);
        on_scroll(opts_or_callback: Function | {
            callback: (element: any, event: Event) => void;
            delay?: number;
        }): any;
        on_window_resize(): null | Function;
        on_window_resize(opts: Function | {
            callback?: Function;
            once?: boolean;
            delay?: number;
        }): any;
        on_attachment_drop(options: {
            callback: (args: {
                name: string;
                path: string;
                is_dir: boolean;
                data: any;
                compressed: boolean;
                file: File;
                size: number;
            }) => void;
            read?: boolean;
            compress?: boolean;
            on_start?: (event: DragEvent) => void;
        }): any;
        on_appear(callback: (element: any, options: {
            scroll_direction: string;
        }) => void): any;
        on_appear(options: {
            callback: (element: any, options: {
                scroll_direction: string;
            }) => void;
            repeat?: boolean;
            threshold?: number | null;
        }): any;
        on_disappear(callback_or_opts?: {
            callback?: (element: any) => void;
            repeat?: boolean;
        } | ((element: any) => void) | undefined): any;
        on_enter(callback: (element: any, event: KeyboardEvent) => void): any;
        on_escape(callback: (element: any, event: KeyboardEvent) => void): any;
        on_theme_update(): ((element: any) => void)[];
        on_theme_update(callback: (element: any) => void): any;
        remove_on_theme_update(callback: (element: any) => void): any;
        remove_on_theme_updates(): any;
        on_render(): ((element: any) => void)[];
        on_render(callback: (element: any) => void): any;
        remove_on_render(callback: (element: any) => void): any;
        remove_on_renders(): any;
        is_rendered(): boolean;
        on_load(callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_load(callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_loads(): any;
        on_resize(): ((element: any) => void)[];
        on_resize(callback: (element: any) => void): any;
        remove_on_resize(callback: (element: any) => void): any;
        remove_on_resizes(): any;
        on_resize_rule(evaluation: (element: any) => boolean, on_true?: ((element: any) => void) | undefined, on_false?: ((element: any) => void) | undefined): any;
        on_shortcut(shortcuts?: {
            match?: (event: KeyboardEvent, key: string, shortcut: any) => boolean;
            key?: string;
            keys?: string[];
            keycode?: number;
            keycodes?: number[];
            or?: boolean;
            duration?: number;
            shift?: boolean;
            alt?: boolean;
            ctrl?: boolean;
            allow_other_modifiers?: boolean;
            callback: (element: any, event: KeyboardEvent) => void;
        }[]): any;
        on_context_menu(): import("./context_menu").ContextMenuElement | Function | undefined;
        on_context_menu(callback: Function | import("./context_menu").ContextMenuElement | any[]): any;
        on_mouse_enter(): (element: any, event: MouseEvent) => void;
        on_mouse_enter(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_leave(): (element: any, event: MouseEvent) => void;
        on_mouse_leave(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_over_out(mouse_over: (element: any, event: MouseEvent) => void, mouse_out: (element: any, event: MouseEvent) => void): any;
        first_child(): Node | null;
        last_child(): ChildNode | null;
        iterate(start: number | ((child: any, index: number) => any), end?: number, handler?: (child: any, index: number) => any): any;
        iterate_nodes(start: number | ((node: any, index: number) => any), end?: number, handler?: (node: any, index: number) => any): any;
        set_default(Type?: any): any;
        assign(name: string, value: any): any;
        extend(obj: object): any;
        select(overwrite?: boolean): any;
        is_scrollable(): boolean;
        is_scrollable_x(): boolean;
        is_scrollable_y(): boolean;
        wait_till_children_rendered(timeout?: number): Promise<void>;
        pseudo(type: string, node: any): any;
        remove_pseudo(node: any): any;
        remove_pseudos(): any;
        pseudo_on_hover(type: string, node: any, set_defaults?: boolean): any;
        parent(): HTMLElement | any | null;
        parent(value: any): any;
        abs_parent(): any;
        abs_parent(value: any): any;
        assign_to_parent_as(name: string): any;
        get_y_offset_from_parent(parent: HTMLElement): number | null;
        absolute_y_offset(): number;
        absolute_x_offset(): number;
        exec(callback: (element: any) => void): any;
        is_child(target: any): boolean;
        is_nested_child(target: any, stop_node?: any): boolean;
        toString(): string;
        accent_color(): string;
        accent_color(value: string): any;
        align_content(): string;
        align_content(value: string): any;
        align_items(): string;
        align_items(value: string): any;
        align_self(): string;
        align_self(value: string): any;
        all(): string;
        all(value: string): any;
        animation(): string;
        animation(value: string): any;
        animation_delay(): string;
        animation_delay(value: string | number): any;
        animation_direction(): string;
        animation_direction(value: string): any;
        animation_duration(): string;
        animation_duration(value: string | number): any;
        animation_fill_mode(): string;
        animation_fill_mode(value: string): any;
        animation_iteration_count(): string;
        animation_iteration_count(value: string | number): any;
        animation_name(): string;
        animation_name(value: string): any;
        animation_play_state(): string;
        animation_play_state(value: string): any;
        animation_timing_function(): string;
        animation_timing_function(value: string): any;
        aspect_ratio(): string;
        aspect_ratio(value: string): any;
        backdrop_filter(): string;
        backdrop_filter(value: string): any;
        backface_visibility(): string;
        backface_visibility(value: string): any;
        background_attachment(): string;
        background_attachment(value: string): any;
        background_blend_mode(): string;
        background_blend_mode(value: string): any;
        background_clip(): string;
        background_clip(value: string): any;
        background_color(): string;
        background_color(value: string): any;
        background_image(): string;
        background_image(value: string): any;
        background_origin(): string;
        background_origin(value: string): any;
        background_position(): string;
        background_position(value: string): any;
        background_position_x(): string;
        background_position_x(value: string | number): any;
        background_position_y(): string;
        background_position_y(value: string | number): any;
        background_repeat(): string;
        background_repeat(value: string): any;
        background_size(): string;
        background_size(value: string | number): any;
        block_size(): string;
        block_size(value: string | number): any;
        border_block(): string;
        border_block(value: string): string | any;
        border_block_color(): string;
        border_block_color(value: string): any;
        border_block_end_color(): string;
        border_block_end_color(value: string): any;
        border_block_end_style(): string;
        border_block_end_style(value: string): any;
        border_block_end_width(): string;
        border_block_end_width(value: string | number): any;
        border_block_start_color(): string;
        border_block_start_color(value: string): any;
        border_block_start_style(): string;
        border_block_start_style(value: string): any;
        border_block_start_width(): string;
        border_block_start_width(value: string | number): any;
        border_block_style(): string;
        border_block_style(value: string): any;
        border_block_width(): string;
        border_block_width(value: string | number): any;
        border_bottom_color(): string;
        border_bottom_color(value: string): any;
        border_bottom_left_radius(): string;
        border_bottom_left_radius(value: string | number): any;
        border_bottom_right_radius(): string;
        border_bottom_right_radius(value: string | number): any;
        border_bottom_style(): string;
        border_bottom_style(value: string): any;
        border_bottom_width(): string;
        border_bottom_width(value: string | number): any;
        border_collapse(): string;
        border_collapse(value: string): any;
        border_color(): string;
        border_color(value: string): any;
        border_image(): string;
        border_image(value: string): any;
        border_image_outset(): string;
        border_image_outset(value: string | number): any;
        border_image_repeat(): string;
        border_image_repeat(value: string): any;
        border_image_slice(): string;
        border_image_slice(value: string | number): any;
        border_image_source(): string;
        border_image_source(value: string): any;
        border_image_width(): string;
        border_image_width(value: string | number): any;
        border_inline(): string;
        border_inline(value: string | number): any;
        border_inline_color(): string;
        border_inline_color(value: string): any;
        border_inline_end_color(): string;
        border_inline_end_color(value: string): any;
        border_inline_end_style(): string;
        border_inline_end_style(value: string): any;
        border_inline_end_width(): string;
        border_inline_end_width(value: string | number): any;
        border_inline_start_color(): string;
        border_inline_start_color(value: string): any;
        border_inline_start_style(): string;
        border_inline_start_style(value: string): any;
        border_inline_start_width(): string;
        border_inline_start_width(value: string | number): any;
        border_inline_style(): string;
        border_inline_style(value: string): any;
        border_inline_width(): string;
        border_inline_width(value: string | number): any;
        border_left_color(): string;
        border_left_color(value: string): any;
        border_left_style(): string;
        border_left_style(value: string): any;
        border_left_width(): string;
        border_left_width(value: string | number): any;
        border_radius(): string;
        border_radius(value: string | number): any;
        border_right_color(): string;
        border_right_color(value: string): any;
        border_right_style(): string;
        border_right_style(value: string): any;
        border_right_width(): string;
        border_right_width(value: string | number): any;
        border_spacing(): string;
        border_spacing(value: string | number): any;
        border_style(): string;
        border_style(value: string): any;
        border_top_color(): string;
        border_top_color(value: string): any;
        border_top_left_radius(): string;
        border_top_left_radius(value: string | number): any;
        border_top_right_radius(): string;
        border_top_right_radius(value: string | number): any;
        border_top_style(): string;
        border_top_style(value: string): any;
        border_top_width(): string;
        border_top_width(value: string | number): any;
        border_width(): string;
        border_width(value: string | number): any;
        bottom(): string;
        bottom(value: string | number): any;
        box_decoration_break(): string;
        box_decoration_break(value: string): any;
        box_reflect(): string;
        box_reflect(value: string): any;
        box_shadow(): string;
        box_shadow(value: string): any;
        box_sizing(): string;
        box_sizing(value: string): any;
        break_after(): string | any;
        break_after(value: string): any;
        break_before(): string;
        break_before(value: string): any;
        break_inside(): string;
        break_inside(value: string): any;
        caption_side(): string;
        caption_side(value: string): any;
        caret_color(): string;
        caret_color(value: string): any;
        clear(): string;
        clear(value: string): any;
        clip(): string;
        clip(value: string): any;
        column_count(): null | number;
        column_count(value: string | number): any;
        column_fill(): string;
        column_fill(value: string): any;
        column_gap(): string;
        column_gap(value: string | number): any;
        column_rule(): string;
        column_rule(value: string): any;
        column_rule_color(): string;
        column_rule_color(value: string): any;
        column_rule_style(): string;
        column_rule_style(value: string): any;
        column_rule_width(): string;
        column_rule_width(value: string | number): any;
        column_span(): null | number;
        column_span(value: number): any;
        column_width(): string;
        column_width(value: string | number): any;
        columns(): string;
        columns(value: string | number): any;
        content(): string;
        content(value: string | number): any;
        counter_increment(): string;
        counter_increment(value: string | number): any;
        counter_reset(): string;
        counter_reset(value: string): any;
        cursor(): string;
        cursor(value: string): any;
        direction(): string;
        direction(value: string): any;
        empty_cells(): string;
        empty_cells(value: string): any;
        filter(): string;
        filter(value: string): any;
        flex(): string;
        flex(value: string): any;
        flex_basis(): string;
        flex_basis(value: string | number): any;
        flex_direction(): string;
        flex_direction(value: string): any;
        flex_flow(): string;
        flex_flow(value: string): any;
        flex_grow(): null | number;
        flex_grow(value: string | number): any;
        flex_shrink(): null | number;
        flex_shrink(value: string | number): any;
        flex_wrap(): string;
        flex_wrap(value: string): any;
        float(): string;
        float(value: string): any;
        font(): string;
        font(value: string): any;
        font_family(): string;
        font_family(value: string): string | any;
        font_feature_settings(): string;
        font_feature_settings(value: string): any;
        font_kerning(): string;
        font_kerning(value: string): any;
        font_language_override(): string;
        font_language_override(value: string): any;
        font_size(): string;
        font_size(value: string | number): any;
        font_size_adjust(): string;
        font_size_adjust(value: string): any;
        font_stretch(): string;
        font_stretch(value: string): any;
        font_style(): string;
        font_style(value: string): any;
        font_synthesis(): string;
        font_synthesis(value: string): any;
        font_variant(): string;
        font_variant(value: string): any;
        font_variant_alternates(): string;
        font_variant_alternates(value: string): any;
        font_variant_caps(): string;
        font_variant_caps(value: string): any;
        font_variant_east_asian(): string;
        font_variant_east_asian(value: string): any;
        font_variant_ligatures(): string;
        font_variant_ligatures(value: string): any;
        font_variant_numeric(): string;
        font_variant_numeric(value: string): any;
        font_variant_position(): string;
        font_variant_position(value: string): any;
        font_weight(): string;
        font_weight(value: string | number): any;
        gap(): string;
        gap(value: string | number): any;
        grid(): string;
        grid(value: string): any;
        grid_area(): string;
        grid_area(value: string): any;
        grid_auto_columns(): string;
        grid_auto_columns(value: string | number): any;
        grid_auto_flow(): string;
        grid_auto_flow(value: string): any;
        grid_auto_rows(): string;
        grid_auto_rows(value: string | number): any;
        grid_column(): string;
        grid_column(value: string): any;
        grid_column_end(): string;
        grid_column_end(value: string | number): any;
        grid_column_gap(): string;
        grid_column_gap(value: string | number): any;
        grid_column_start(): string;
        grid_column_start(value: string | number): any;
        grid_gap(): string;
        grid_gap(value: string | number): any;
        grid_row(): string;
        grid_row(value: string): any;
        grid_row_end(): string;
        grid_row_end(value: string): any;
        grid_row_gap(): string;
        grid_row_gap(value: string | number): any;
        grid_row_start(): string;
        grid_row_start(value: string | number): any;
        grid_template(): string;
        grid_template(value: string): any;
        grid_template_areas(): string;
        grid_template_areas(value: string): any;
        grid_template_columns(): string;
        grid_template_columns(value: string): any;
        grid_template_rows(): string;
        grid_template_rows(value: string | number): any;
        hanging_punctuation(): string;
        hanging_punctuation(value: string): any;
        hyphens(): string;
        hyphens(value: string): string | any;
        image_rendering(): string;
        image_rendering(value: string): any;
        inline_size(): string;
        inline_size(value: string | number): any;
        inset(): string;
        inset(value: string | number): any;
        inset_block(): string | undefined;
        inset_block(value: string | number): any;
        inset_block_end(): string;
        inset_block_end(value: string | number): any;
        inset_block_start(): string;
        inset_block_start(value: string | number): any;
        inset_inline(): string;
        inset_inline(value: string | number): any;
        inset_inline_end(): string;
        inset_inline_end(value: string | number): any;
        inset_inline_start(): string;
        inset_inline_start(value: string | number): any;
        isolation(): string;
        isolation(value: string): any;
        justify_content(): string;
        justify_content(value: string): any;
        justify_items(): string;
        justify_items(value: string): any;
        justify_self(): string;
        justify_self(value: string): any;
        left(): string;
        left(value: string | number): any;
        letter_spacing(): string;
        letter_spacing(value: string | number): any;
        line_break(): string;
        line_break(value: string): any;
        line_height(): string;
        line_height(value: string | number): any;
        list_style(): string;
        list_style(value: string): any;
        list_style_image(): string;
        list_style_image(value: string): any;
        list_style_position(): string;
        list_style_position(value: string): any;
        list_style_type(): string;
        list_style_type(value: string): any;
        margin_block(): string;
        margin_block(value: string | number): any;
        margin_block_end(): string;
        margin_block_end(value: string | number): any;
        margin_block_start(): string;
        margin_block_start(value: string | number): any;
        margin_inline(): string;
        margin_inline(value: string | number): any;
        margin_inline_end(): string;
        margin_inline_end(value: string | number): any;
        margin_inline_start(): string;
        margin_inline_start(value: string | number): any;
        mask(): string;
        mask(value: string): any;
        mask_clip(): string;
        mask_clip(value: string): any;
        mask_composite(): string;
        mask_composite(value: string): any;
        mask_image(): string;
        mask_image(value: string): any;
        mask_mode(): string;
        mask_mode(value: string): any;
        mask_origin(): string;
        mask_origin(value: string): any;
        mask_position(): string;
        mask_position(value: string): any;
        mask_repeat(): string;
        mask_repeat(value: string): any;
        mask_size(): string;
        mask_size(value: string | number): any;
        mask_type(): string;
        mask_type(value: string): any;
        max_height(): number | string;
        max_height(value: string | number): any;
        max_width(): number | string;
        max_width(value: string | number): any;
        max_block_size(): string;
        max_block_size(value: string | number): any;
        max_inline_size(): string | number;
        max_inline_size(value: string | number): any;
        min_block_size(): null | number;
        min_block_size(value: number): any;
        min_inline_size(): string;
        min_inline_size(value: string | number): any;
        mix_blend_mode(): string;
        mix_blend_mode(value: string): any;
        object_fit(): string;
        object_fit(value: string): any;
        object_position(): string;
        object_position(value: string): any;
        offset(): string;
        offset(value: string | number): any;
        offset_anchor(): string;
        offset_anchor(value: string): any;
        offset_distance(): string;
        offset_distance(value: string | number): any;
        offset_path(): string;
        offset_path(value: string): any;
        offset_rotate(): string;
        offset_rotate(value: string | number): any;
        order(): string;
        order(value: string | number): any;
        orphans(): null | number;
        orphans(value: number): any;
        outline(): string;
        outline(value: string): any;
        outline_color(): string;
        outline_color(value: string): any;
        outline_offset(): string;
        outline_offset(value: string | number): any;
        outline_style(): string;
        outline_style(value: string): any;
        outline_width(): string;
        outline_width(value: string | number): any;
        overflow(): string;
        overflow(value: string): any;
        overflow_anchor(): string;
        overflow_anchor(value: string): any;
        overflow_wrap(): string;
        overflow_wrap(value: string): any;
        overflow_x(): string;
        overflow_x(value: string): any;
        overflow_y(): string;
        overflow_y(value: string): any;
        overscroll_behavior(): string;
        overscroll_behavior(value: string): any;
        overscroll_behavior_block(): string;
        overscroll_behavior_block(value: string): any;
        overscroll_behavior_inline(): string;
        overscroll_behavior_inline(value: string): any;
        overscroll_behavior_x(): string;
        overscroll_behavior_x(value: string): any;
        overscroll_behavior_y(): string;
        overscroll_behavior_y(value: string): any;
        padding_block(): string | undefined;
        padding_block(value: string | number): any;
        padding_block_end(): string;
        padding_block_end(value: string | number): any;
        padding_block_start(): string;
        padding_block_start(value: string | number): any;
        padding_inline(): string;
        padding_inline(value: string | number): any;
        padding_inline_end(): string;
        padding_inline_end(value: string | number): any;
        padding_inline_start(): string;
        padding_inline_start(value: string | number): any;
        page_break_after(): string;
        page_break_after(value: string): any;
        page_break_before(): string;
        page_break_before(value: string): any;
        page_break_inside(): string;
        page_break_inside(value: string): any;
        paint_order(): string;
        paint_order(value: string): any;
        perspective(): string;
        perspective(value: string | number): any;
        perspective_origin(): string;
        perspective_origin(value: string): any;
        place_content(): string;
        place_content(value: string): any;
        place_items(): string;
        place_items(value: string): any;
        place_self(): string;
        place_self(value: string): any;
        pointer_events(): string;
        pointer_events(value: string): any;
        quotes(): string;
        quotes(value: string): any;
        resize(): string;
        resize(value: string): any;
        right(): string;
        right(value: number | string): any;
        row_gap(): string;
        row_gap(value: string | number): any;
        scale(): null | number;
        scale(value: number): any;
        scroll_behavior(): string;
        scroll_behavior(value: string): any;
        scroll_margin(): string;
        scroll_margin(value: string | number): any;
        scroll_margin_block(): string;
        scroll_margin_block(value: string | number): any;
        scroll_margin_block_end(): string;
        scroll_margin_block_end(value: string | number): any;
        scroll_margin_block_start(): string;
        scroll_margin_block_start(value: string | number): any;
        scroll_margin_bottom(): string;
        scroll_margin_bottom(value: string | number): any;
        scroll_margin_inline(): string;
        scroll_margin_inline(value: string | number): any;
        scroll_margin_inline_end(): string;
        scroll_margin_inline_end(value: string | number): any;
        scroll_margin_inline_start(): string;
        scroll_margin_inline_start(value: string): any;
        scroll_margin_left(): string;
        scroll_margin_left(value: string | number): any;
        scroll_margin_right(): string;
        scroll_margin_right(value: string | number): any;
        scroll_margin_top(): string;
        scroll_margin_top(value: string | number): any;
        scroll_padding(): string;
        scroll_padding(value: string | number): any;
        scroll_padding_block(): string;
        scroll_padding_block(value: string | number): any;
        scroll_padding_block_end(): string;
        scroll_padding_block_end(value: string | number): any;
        scroll_padding_block_start(): string;
        scroll_padding_block_start(value: string | number): any;
        scroll_padding_bottom(): string;
        scroll_padding_bottom(value: string | number): any;
        scroll_padding_inline(): string;
        scroll_padding_inline(value: string | number): any;
        scroll_padding_inline_end(): string;
        scroll_padding_inline_end(value: string | number): any;
        scroll_padding_inline_start(): string;
        scroll_padding_inline_start(value: string | number): any;
        scroll_padding_left(): string;
        scroll_padding_left(value: string | number): any;
        scroll_padding_right(): string;
        scroll_padding_right(value: string | number): any;
        scroll_padding_top(): string;
        scroll_padding_top(value: string | number): any;
        scroll_snap_align(): string;
        scroll_snap_align(value: string): any;
        scroll_snap_stop(): string;
        scroll_snap_stop(value: string): any;
        scroll_snap_type(): string;
        scroll_snap_type(value: string): any;
        scrollbar_color(): string;
        scrollbar_color(value: string): any;
        tab_size(): string;
        tab_size(value: string | number): any;
        table_layout(): string;
        table_layout(value: string): any;
        text_align(): string;
        text_align(value: string): any;
        text_align_last(): string;
        text_align_last(value: string): any;
        text_combine_upright(): string;
        text_combine_upright(value: string): any;
        text_decoration(): string;
        text_decoration(value: string): any;
        text_decoration_color(): string;
        text_decoration_color(value: string): any;
        text_decoration_line(): string;
        text_decoration_line(value: string): any;
        text_decoration_style(): string;
        text_decoration_style(value: string): any;
        text_decoration_thickness(): string;
        text_decoration_thickness(value: string | number): any;
        text_emphasis(): string;
        text_emphasis(value: string): any;
        text_indent(): string;
        text_indent(value: string | number): any;
        text_justify(): string;
        text_justify(value: string): any;
        text_orientation(): string;
        text_orientation(value: string): any;
        text_overflow(): string;
        text_overflow(value: string): any;
        text_shadow(): string;
        text_shadow(value: string): any;
        text_transform(): string;
        text_transform(value: string): any;
        text_underline_position(): string;
        text_underline_position(value: string): any;
        top(): string;
        top(value: string | number): any;
        transform(): string;
        transform(value: string): any;
        transform_origin(): string;
        transform_origin(value: string): any;
        transform_style(): string;
        transform_style(value: string): any;
        transition(): string;
        transition(value: string): any;
        transition_delay(): string;
        transition_delay(value: string | number): any;
        transition_duration(): string | undefined;
        transition_duration(value: string | number): any;
        transition_property(): string;
        transition_property(value: string): any;
        transition_timing_function(): string;
        transition_timing_function(value: string): any;
        translate(): string;
        translate(value: string | number): any;
        unicode_bidi(): string;
        unicode_bidi(value: string): any;
        user_select(): string;
        user_select(value: string): any;
        visibility(): string;
        visibility(value: string): any;
        white_space(): string;
        white_space(value: string): any;
        widows(): string;
        widows(value: string | number): any;
        word_break(): string;
        word_break(value: string): any;
        word_spacing(): string;
        word_spacing(value: string | number): any;
        word_wrap(): string;
        word_wrap(value: string): any;
        writing_mode(): string;
        writing_mode(value: string): any;
        focusable(): boolean;
        focusable(value: boolean): any;
        alt(): string;
        alt(value: string): any;
        readonly(): boolean;
        readonly(value: boolean): any;
        download(): string;
        download(value: string): any;
        accept(): string;
        accept(value: string): any;
        accept_charset(): string;
        accept_charset(value: string): any;
        action(): string;
        action(value: string): any;
        async(): boolean;
        async(value: boolean): any;
        auto_complete(): string;
        auto_complete(value: string): any;
        auto_focus(): string;
        auto_focus(value: string): any;
        auto_play(): boolean;
        auto_play(value: boolean): any;
        charset(): string;
        charset(value: string): any;
        checked(): boolean;
        checked(value: boolean): any;
        cite(): string;
        cite(value: string): any;
        cols(): null | number;
        cols(value: number): any;
        colspan(): null | number;
        colspan(value: number): any;
        content_editable(): boolean;
        content_editable(value: boolean): any;
        controls(): boolean;
        controls(value: boolean): any;
        coords(): string;
        coords(value: string): any;
        data(): string;
        data(value: string | number): any;
        datetime(): string;
        datetime(value: string | number): any;
        default(): string;
        default(value: string | number): any;
        defer(): string;
        defer(value: string): any;
        dir(): string;
        dir(value: string): any;
        dirname(): string;
        dirname(value: string): any;
        disabled(): boolean;
        disabled(value: boolean): any;
        draggable(): boolean;
        draggable(value: boolean): any;
        enctype(): string;
        enctype(value: string): any;
        for(): string;
        for(value: string): any;
        form(): string;
        form(value: string): any;
        form_action(): string;
        form_action(value: string): any;
        headers(): string;
        headers(value: string): any;
        high(): string;
        high(value: string | number): any;
        href(): string;
        href(value: string): any;
        href_lang(): string;
        href_lang(value: string): any;
        http_equiv(): string;
        http_equiv(value: string | number): any;
        id(): string;
        id(value: string): any;
        is_map(): boolean;
        is_map(value: boolean): any;
        kind(): string;
        kind(value: string): any;
        label(): string;
        label(value: string): any;
        lang(): string;
        lang(value: string): any;
        list(): string;
        list(value: string): any;
        loop(): boolean;
        loop(value: boolean): any;
        low(): string;
        low(value: string | number): any;
        max(): string;
        max(value: string | number): any;
        max_length(): null | number;
        max_length(value: number): any;
        method(): string;
        method(value: string): any;
        min(): string;
        min(value: string | number): any;
        multiple(): string;
        multiple(value: string | boolean): any;
        muted(): boolean;
        muted(value: boolean): any;
        no_validate(): boolean;
        no_validate(value: boolean): any;
        open(): boolean;
        open(value: boolean): any;
        optimum(): null | number;
        optimum(value: number): any;
        pattern(): string;
        pattern(value: string): any;
        placeholder(): string;
        placeholder(value: string): any;
        poster(): string;
        poster(value: string): any;
        preload(): string;
        preload(value: string): any;
        rel(): string;
        rel(value: string): any;
        required(): boolean;
        required(value: boolean): any;
        reversed(): boolean;
        reversed(value: boolean): any;
        rows(): null | number;
        rows(value: number): any;
        row_span(): null | number;
        row_span(value: number): any;
        sandbox(): string;
        sandbox(value: string): any;
        scope(): string;
        scope(value: string): any;
        selected(): boolean;
        selected(value: boolean): any;
        shape(): string;
        shape(value: string): any;
        size(): null | number;
        size(value: number): any;
        sizes(): string;
        sizes(value: string | number): any;
        span(): null | number;
        span(value: number): any;
        spell_check(): boolean;
        spell_check(value: boolean): any;
        src(): string;
        src(value: string): any;
        src_doc(): string;
        src_doc(value: string): any;
        src_lang(): string;
        src_lang(value: string): any;
        rrsrc_set(): string;
        rrsrc_set(value: string): any;
        start(): null | number;
        start(value: number): any;
        step(): null | number;
        step(value: number): any;
        tab_index(): null | number;
        tab_index(value: number): any;
        target(): string;
        target(value: string): any;
        title(): string;
        title(value: string): any;
        type(): string;
        type(value: string): any;
        use_map(): string;
        use_map(value: string): any;
        value(): string;
        value(value: string | number): any;
        on_blur(): Function | null;
        on_blur(callback: (element: any, event: Event) => void): any;
        on_change(): Function | null;
        on_change(callback: (element: any, event: Event) => void): any;
        on_focus(): Function | null;
        on_focus(callback: (element: any, event: Event) => void): any;
        on_input(): Function | null;
        on_input(callback: (element: any, event: Event) => void): any;
        on_before_input(): Function | null;
        on_before_input(callback: (element: any, event: Event) => void): any;
        on_invalid(): Function | null;
        on_invalid(callback: (element: any, event: Event) => void): any;
        on_reset(): Function | null;
        on_reset(callback: (element: any, event: Event) => void): any;
        on_select(): Function | null;
        on_select(callback: (element: any, event: Event) => void): any;
        on_submit(): Function | null;
        on_submit(callback: (element: any, event: Event) => void): any;
        on_key_down(): Function | null;
        on_key_down(callback: (element: any, event: KeyboardEvent) => void): any;
        on_key_press(): Function | null;
        on_key_press(callback: (element: any, event: KeyboardEvent) => void): any;
        on_key_up(): Function | null;
        on_key_up(callback: (element: any, event: KeyboardEvent) => void): any;
        on_dbl_click(): Function | null;
        on_dbl_click(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_down(): Function | null;
        on_mouse_down(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_move(): Function | null;
        on_mouse_move(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_out(): Function | null;
        on_mouse_out(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_over(): Function | null;
        on_mouse_over(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_up(): Function | null;
        on_mouse_up(callback: (element: any, event: MouseEvent) => void): any;
        on_wheel(): Function | null;
        on_wheel(callback: (element: any, event: WheelEvent) => void): any;
        on_drag(): Function | null;
        on_drag(callback: (element: any, event: DragEvent) => void): any;
        on_drag_end(): Function | null;
        on_drag_end(callback: (element: any, event: DragEvent) => void): any;
        on_drag_enter(): Function | null;
        on_drag_enter(callback: (element: any, event: DragEvent) => void): any;
        on_drag_leave(): Function | null;
        on_drag_leave(callback: (element: any, event: DragEvent) => void): any;
        on_drag_over(): Function | null;
        on_drag_over(callback: (element: any, event: DragEvent) => void): any;
        on_drag_start(): Function | null;
        on_drag_start(callback: (element: any, event: DragEvent) => void): any;
        on_drop(): Function | null;
        on_drop(callback: (element: any, event: Event) => void): any;
        on_copy(): Function | null;
        on_copy(callback: (element: any, event: Event) => void): any;
        on_cut(): Function | null;
        on_cut(callback: (element: any, event: Event) => void): any;
        on_paste(): Function | null;
        on_paste(callback: (element: any, event: Event) => void): any;
        on_abort(): Function | null;
        on_abort(callback: (element: any, event: Event) => void): any;
        on_canplay(): Function | null;
        on_canplay(callback: (element: any, event: Event) => void): any;
        on_canplay_through(): Function | null;
        on_canplay_through(callback: (element: any, event: Event) => void): any;
        on_cue_change(): Function | null;
        on_cue_change(callback: (element: any, event: Event) => void): any;
        on_duration_change(): Function | null;
        on_duration_change(callback: (element: any, event: Event) => void): any;
        on_emptied(): Function | null;
        on_emptied(callback: (element: any, event: Event) => void): any;
        on_ended(): Function | null;
        on_ended(callback: (element: any, event: Event) => void): any;
        on_error(): Function | null;
        on_error(callback: (element: any, error: string | Event) => void): any;
        on_loaded_data(): Function | null;
        on_loaded_data(callback: (element: any, event: Event) => void): any;
        on_loaded_metadata(): Function | null;
        on_loaded_metadata(callback: (element: any, event: Event) => void): any;
        on_load_start(): Function | null;
        on_load_start(callback: (element: any, event: Event) => void): any;
        on_pause(): Function | null;
        on_pause(callback: (element: any, event: Event) => void): any;
        on_play(): Function | null;
        on_play(callback: (element: any, event: Event) => void): any;
        on_playing(): Function | null;
        on_playing(callback: (element: any, time: any) => void): any;
        on_progress(): Function | null;
        on_progress(callback: ((element: any, event: Event) => void) | null): any;
        on_rate_change(): Function | null;
        on_rate_change(callback: (element: any, event: Event) => void): any;
        on_seeked(): Function | null;
        on_seeked(callback: (element: any, time: any) => void): any;
        on_seeking(): Function | null;
        on_seeking(callback: (element: any, time: any) => void): any;
        on_stalled(): Function | null;
        on_stalled(callback: (element: any, event: Event) => void): any;
        on_suspend(): Function | null;
        on_suspend(callback: Function): any;
        on_time_update(): Function | null;
        on_time_update(callback: (element: any, event: Event) => void): any;
        on_volume_change(): Function | null;
        on_volume_change(callback: (element: any, event: Event) => void): any;
        on_waiting(): Function | null;
        on_waiting(callback: (element: any, time: any) => void): any;
        on_toggle(): Function | null;
        on_toggle(callback: (element: any, event: Event) => void): any;
    };
    [x: string]: any;
    element_tag: string;
    default_style: Record<string, any>;
    default_attributes: Record<string, any>;
    default_events: Record<string, any>;
};
export declare class FrameElement extends FrameElement_base {
    constructor(...children: any[]);
}
export declare const Frame: (...args: any[]) => any;
declare const VStackElement_base: {
    new (): {
        [x: string]: any;
        __is_velement: boolean;
        rendered: boolean;
        element_type: string;
        base_element_type: string;
        remove_focus: any;
        _v_children: any[];
        _element_display: string;
        _is_connected: boolean;
        _on_append_callback?: Function;
        _assign_to_parent_as?: string;
        _parent?: any;
        _side_by_side_basis?: number;
        _animate_timeout?: ReturnType<typeof setTimeout>;
        _disabled: boolean;
        _timeouts: Record<string, any>;
        _on_window_resize_timer: any;
        _abs_parent: any;
        _pseudo_stylesheets: Record<string, any>;
        _on_resize_rule_evals: Record<string, any>;
        _observing_on_resize: boolean;
        _observing_on_render: boolean;
        _on_resize_callbacks: ((element: any) => void)[];
        _on_render_callbacks: ((element: any) => void)[];
        _on_theme_updates: ((element: any) => void)[];
        _on_mouse_leave_callback: (element: any, event: MouseEvent) => void;
        _on_mouse_enter_callback: (element: any, event: MouseEvent) => void;
        _on_shortcut_time: number;
        _on_shortcut_key: string;
        _on_shortcut_keycode: number;
        _on_keypress_set: boolean;
        _on_enter_callback?: ((element: any, event: KeyboardEvent) => void) | undefined;
        _on_escape_callback?: ((element: any, event: KeyboardEvent) => void) | undefined;
        _on_appear_callbacks: Record<string, any>[];
        _context_menu?: import("./context_menu").ContextMenuElement;
        _media_queries: {
            [key: string]: {
                list: MediaQueryList;
                callback: (query: MediaQueryList) => void;
            };
        };
        connectedCallback(): void;
        clone(clone_children?: boolean): any;
        pad_numeric(value: number | string | null, padding?: string): string;
        pad_percentage(value: number, padding?: string): string;
        edit_filter_wrapper(filter: string | null, type: string, to?: string | null): string;
        toggle_filter_wrapper(filter: string | null, type: string, to?: string | null): string;
        _convert_px_to_number_type(value: any, def?: number | null): any;
        _try_parse_float(value: any, def?: number | null): any;
        append(...children: any[]): any;
        zstack_append(...children: any[]): any;
        append_to(parent: any): any;
        append_children_to(parent: any, on_append_callback?: Function): any;
        remove_child(child: any): any;
        remove_children(): any;
        child(index: number): any;
        get(index: number): any | undefined;
        text(): string;
        text(value: string): any;
        width(): string | number;
        width(value: string | number, check_attribute?: boolean): any;
        fixed_width(): string | number;
        fixed_width(value: string | number): any;
        height(): string | number;
        height(value: string | number, check_attribute?: boolean): any;
        fixed_height(): string | number;
        fixed_height(value: string | number): any;
        min_height(): string | number;
        min_height(value: string | number): any;
        min_width(): string | number;
        min_width(value: string | number): any;
        width_by_columns(columns: number): any;
        offset_width(): number;
        offset_height(): number;
        client_width(): number;
        client_height(): number;
        x(): number;
        y(): number;
        frame(width: string | number, height: string | number): any;
        min_frame(width: string | number, height: string | number): any;
        max_frame(width: string | number, height: string | number): any;
        fixed_frame(width: string | number, height: string | number): any;
        get_frame_while_hidden(): {
            width: number;
            height: number;
        };
        padding(): string;
        padding(value: string | number): any;
        padding(top_bottom: string | number, left_right: string | number): any;
        padding(top: string | number, right: string | number, bottom: string | number, left: string | number): any;
        padding_bottom(): number;
        padding_bottom(value: string | number): any;
        padding_left(): number;
        padding_left(value: string | number): any;
        padding_right(): number;
        padding_right(value: string | number): any;
        padding_top(): number;
        padding_top(value: string | number): any;
        margin(): string | undefined;
        margin(value: string | number): any;
        margin(value: string | number, value2: string | number): any;
        margin(value: string | number, value2: string | number, value3: string | number, value4: string | number): any;
        margin_bottom(): number;
        margin_bottom(value: string | number): any;
        margin_left(): number;
        margin_left(value: string | number): any;
        margin_right(): number;
        margin_right(value: string | number): any;
        margin_top(): number;
        margin_top(value: string | number): any;
        position(): string | undefined;
        position(value: number | string): any;
        position(top?: number | string, right?: number | string, bottom?: number | string, left?: number | string): any;
        stretch(value: boolean): any;
        wrap(value: boolean | string): any;
        z_index(value: number): any;
        side_by_side(options: {
            columns?: number;
            hspacing?: number;
            vspacing?: number;
            stretch?: boolean;
            hide_dividers?: boolean;
        }): any;
        side_by_side_basis(): number | undefined;
        side_by_side_basis(basis: number | false): any;
        ellipsis_overflow(): boolean;
        ellipsis_overflow(to: boolean, after_lines?: number | null): any;
        align(): string;
        align(value: string): any;
        leading(): any;
        center(): any;
        trailing(): any;
        align_vertical(): string;
        align_vertical(value: string): any;
        leading_vertical(): any;
        center_vertical(only_on_no_overflow?: boolean): any;
        trailing_vertical(): any;
        align_text(value: string): any;
        text_leading(): any;
        text_center(): any;
        text_trailing(): any;
        align_height(): any;
        text_wrap(): string;
        text_wrap(value: string): any;
        line_clamp(): string;
        line_clamp(value: string): any;
        box_orient(): string;
        box_orient(value: string): any;
        color(): string;
        color(value: string | import("./gradient").GradientType): any;
        border(): string;
        border(value: string): any;
        border(width: string | number, color: string): any;
        border(width: string | number, style: string, color: string): any;
        border_top(): string;
        border_top(value: string | number): any;
        border_top(width: string | number, color: string): any;
        border_top(width: string | number, style: string, color: string): any;
        border_bottom(): string;
        border_bottom(value: string): any;
        border_bottom(width: string | number, color: string): any;
        border_bottom(width: string | number, style: string, color: string): any;
        border_right(): string;
        border_right(value: string): any;
        border_right(width: string | number, color: string): any;
        border_right(width: string | number, style: string, color: string): any;
        border_left(): string;
        border_left(value: string): any;
        border_left(width: string | number, color: string): any;
        border_left(width: string | number, style: string, color: string): any;
        shadow(): string;
        shadow(value: number): any;
        shadow(value1: number, value2: number, value3: number, value4: string): any;
        drop_shadow(): string;
        drop_shadow(value: number): any;
        drop_shadow(value1: number, value2: number, value3: number, value4: string): any;
        greyscale(): string;
        greyscale(value: number): any;
        opacity(): number;
        opacity(value: number): any;
        toggle_opacity(value: number): any;
        blur(): string;
        blur(value: number): any;
        toggle_blur(value?: number): any;
        background_blur(): string;
        background_blur(value: number | null): any;
        toggle_background_blur(value?: number): any;
        brightness(): string;
        brightness(value: number): any;
        toggle_brightness(value?: number): any;
        background_brightness(): string;
        background_brightness(value: number): any;
        toggle_background_brightness(value?: number): any;
        rotate(): string;
        rotate(value: number | string): any;
        delay(value: string | number): any;
        duration(value: string | number): any;
        background(): string;
        background(value: string): any;
        scale_font_size(scale?: number): any;
        display(): string;
        display(value: string): any;
        hide(): any;
        show(): any;
        is_hidden(): boolean;
        is_visible(): boolean;
        toggle_visibility(): any;
        inner_html(): string;
        inner_html(value: string): any;
        outer_html(): string;
        outer_html(value: string): any;
        styles(): Record<string, string>;
        styles(css_attr: Record<string, any>): any;
        attr(key: string): null | string;
        attr(key: string, value: string | number | null): any;
        attrs(html_attr: Record<string, string | number | boolean>): any;
        event(key: string): any;
        event(key: string, value: any): any;
        events(html_events: {
            [key: string]: EventListener;
        }): any;
        class(): string;
        class(value: string): any;
        toggle_class(name: string): any;
        remove_class(name: string): any;
        remove_classes(): any;
        hover_brightness(): boolean;
        hover_brightness(mouse_down_brightness: boolean | number, mouse_over_brightness: number): any;
        text_width(): number;
        text_width(text: string): number;
        frame_mode(frame_mode: import("./frame_modes").FrameNodesType): any;
        frame_mode(frame_modes: import("./frame_modes").FrameModesType, frame_mode: import("./frame_modes").FrameNodesType): any;
        media(media_query: string, true_handler?: (element: any) => void, false_handler?: ((element: any) => void)): any;
        remove_media(media_query: string): any;
        remove_medias(): any;
        remove_all_media(): any;
        default_animate(...args: any[]): any;
        animate(options: {
            keyframes: Array<any>;
            delay: number;
            duration: number;
            repeat?: boolean;
            persistent?: boolean;
            on_finish?: ((element: any) => void) | null;
            easing?: string;
        }): any;
        stop_animation(): any;
        slide_out(options: {
            direction: string;
            distance: number;
            duration: number;
            opacity?: boolean;
            easing?: string;
            hide?: boolean;
            remove?: boolean;
            display?: string;
            _slide_in?: boolean;
        }): Promise<void>;
        slide_in({ direction, distance, duration, opacity, easing, display, }: {
            direction?: string;
            distance?: number;
            duration?: number;
            opacity?: boolean;
            easing?: string;
            display?: string;
        }): Promise<any>;
        dropdown_animation({ distance, duration, opacity_duration, total_duration, delay, start_delay, easing, }?: {
            distance?: string;
            duration?: number;
            opacity_duration?: number;
            total_duration?: number;
            delay?: number;
            start_delay?: number;
            easing?: string;
        }): Promise<void>;
        increment_number_animation({ start, end, duration, total_duration, delay, prefix, suffix, }?: {
            start?: number;
            end?: number;
            duration?: number;
            total_duration?: number;
            delay?: number;
            prefix?: string;
            suffix?: string;
        }): Promise<void>;
        on_event(id: string, callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_event(id: string, callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_events(id: string): any;
        timeout(delay: number, callback: (instance: any) => void, options?: {
            id?: string;
            debounce?: boolean;
        } | null): any;
        clear_timeout(id: string | number): any;
        disable(): any;
        enable(): any;
        on_click(): null | Function;
        on_click(simulate_href: string | null, callback: Function): any;
        on_click(callback?: Function): any;
        on_click_redirect(url: string): any;
        on_scroll(): (EventListener | null);
        on_scroll(opts_or_callback: Function | {
            callback: (element: any, event: Event) => void;
            delay?: number;
        }): any;
        on_window_resize(): null | Function;
        on_window_resize(opts: Function | {
            callback?: Function;
            once?: boolean;
            delay?: number;
        }): any;
        on_attachment_drop(options: {
            callback: (args: {
                name: string;
                path: string;
                is_dir: boolean;
                data: any;
                compressed: boolean;
                file: File;
                size: number;
            }) => void;
            read?: boolean;
            compress?: boolean;
            on_start?: (event: DragEvent) => void;
        }): any;
        on_appear(callback: (element: any, options: {
            scroll_direction: string;
        }) => void): any;
        on_appear(options: {
            callback: (element: any, options: {
                scroll_direction: string;
            }) => void;
            repeat?: boolean;
            threshold?: number | null;
        }): any;
        on_disappear(callback_or_opts?: {
            callback?: (element: any) => void;
            repeat?: boolean;
        } | ((element: any) => void) | undefined): any;
        on_enter(callback: (element: any, event: KeyboardEvent) => void): any;
        on_escape(callback: (element: any, event: KeyboardEvent) => void): any;
        on_theme_update(): ((element: any) => void)[];
        on_theme_update(callback: (element: any) => void): any;
        remove_on_theme_update(callback: (element: any) => void): any;
        remove_on_theme_updates(): any;
        on_render(): ((element: any) => void)[];
        on_render(callback: (element: any) => void): any;
        remove_on_render(callback: (element: any) => void): any;
        remove_on_renders(): any;
        is_rendered(): boolean;
        on_load(callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_load(callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_loads(): any;
        on_resize(): ((element: any) => void)[];
        on_resize(callback: (element: any) => void): any;
        remove_on_resize(callback: (element: any) => void): any;
        remove_on_resizes(): any;
        on_resize_rule(evaluation: (element: any) => boolean, on_true?: ((element: any) => void) | undefined, on_false?: ((element: any) => void) | undefined): any;
        on_shortcut(shortcuts?: {
            match?: (event: KeyboardEvent, key: string, shortcut: any) => boolean;
            key?: string;
            keys?: string[];
            keycode?: number;
            keycodes?: number[];
            or?: boolean;
            duration?: number;
            shift?: boolean;
            alt?: boolean;
            ctrl?: boolean;
            allow_other_modifiers?: boolean;
            callback: (element: any, event: KeyboardEvent) => void;
        }[]): any;
        on_context_menu(): import("./context_menu").ContextMenuElement | Function | undefined;
        on_context_menu(callback: Function | import("./context_menu").ContextMenuElement | any[]): any;
        on_mouse_enter(): (element: any, event: MouseEvent) => void;
        on_mouse_enter(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_leave(): (element: any, event: MouseEvent) => void;
        on_mouse_leave(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_over_out(mouse_over: (element: any, event: MouseEvent) => void, mouse_out: (element: any, event: MouseEvent) => void): any;
        first_child(): Node | null;
        last_child(): ChildNode | null;
        iterate(start: number | ((child: any, index: number) => any), end?: number, handler?: (child: any, index: number) => any): any;
        iterate_nodes(start: number | ((node: any, index: number) => any), end?: number, handler?: (node: any, index: number) => any): any;
        set_default(Type?: any): any;
        assign(name: string, value: any): any;
        extend(obj: object): any;
        select(overwrite?: boolean): any;
        is_scrollable(): boolean;
        is_scrollable_x(): boolean;
        is_scrollable_y(): boolean;
        wait_till_children_rendered(timeout?: number): Promise<void>;
        pseudo(type: string, node: any): any;
        remove_pseudo(node: any): any;
        remove_pseudos(): any;
        pseudo_on_hover(type: string, node: any, set_defaults?: boolean): any;
        parent(): HTMLElement | any | null;
        parent(value: any): any;
        abs_parent(): any;
        abs_parent(value: any): any;
        assign_to_parent_as(name: string): any;
        get_y_offset_from_parent(parent: HTMLElement): number | null;
        absolute_y_offset(): number;
        absolute_x_offset(): number;
        exec(callback: (element: any) => void): any;
        is_child(target: any): boolean;
        is_nested_child(target: any, stop_node?: any): boolean;
        toString(): string;
        accent_color(): string;
        accent_color(value: string): any;
        align_content(): string;
        align_content(value: string): any;
        align_items(): string;
        align_items(value: string): any;
        align_self(): string;
        align_self(value: string): any;
        all(): string;
        all(value: string): any;
        animation(): string;
        animation(value: string): any;
        animation_delay(): string;
        animation_delay(value: string | number): any;
        animation_direction(): string;
        animation_direction(value: string): any;
        animation_duration(): string;
        animation_duration(value: string | number): any;
        animation_fill_mode(): string;
        animation_fill_mode(value: string): any;
        animation_iteration_count(): string;
        animation_iteration_count(value: string | number): any;
        animation_name(): string;
        animation_name(value: string): any;
        animation_play_state(): string;
        animation_play_state(value: string): any;
        animation_timing_function(): string;
        animation_timing_function(value: string): any;
        aspect_ratio(): string;
        aspect_ratio(value: string): any;
        backdrop_filter(): string;
        backdrop_filter(value: string): any;
        backface_visibility(): string;
        backface_visibility(value: string): any;
        background_attachment(): string;
        background_attachment(value: string): any;
        background_blend_mode(): string;
        background_blend_mode(value: string): any;
        background_clip(): string;
        background_clip(value: string): any;
        background_color(): string;
        background_color(value: string): any;
        background_image(): string;
        background_image(value: string): any;
        background_origin(): string;
        background_origin(value: string): any;
        background_position(): string;
        background_position(value: string): any;
        background_position_x(): string;
        background_position_x(value: string | number): any;
        background_position_y(): string;
        background_position_y(value: string | number): any;
        background_repeat(): string;
        background_repeat(value: string): any;
        background_size(): string;
        background_size(value: string | number): any;
        block_size(): string;
        block_size(value: string | number): any;
        border_block(): string;
        border_block(value: string): string | any;
        border_block_color(): string;
        border_block_color(value: string): any;
        border_block_end_color(): string;
        border_block_end_color(value: string): any;
        border_block_end_style(): string;
        border_block_end_style(value: string): any;
        border_block_end_width(): string;
        border_block_end_width(value: string | number): any;
        border_block_start_color(): string;
        border_block_start_color(value: string): any;
        border_block_start_style(): string;
        border_block_start_style(value: string): any;
        border_block_start_width(): string;
        border_block_start_width(value: string | number): any;
        border_block_style(): string;
        border_block_style(value: string): any;
        border_block_width(): string;
        border_block_width(value: string | number): any;
        border_bottom_color(): string;
        border_bottom_color(value: string): any;
        border_bottom_left_radius(): string;
        border_bottom_left_radius(value: string | number): any;
        border_bottom_right_radius(): string;
        border_bottom_right_radius(value: string | number): any;
        border_bottom_style(): string;
        border_bottom_style(value: string): any;
        border_bottom_width(): string;
        border_bottom_width(value: string | number): any;
        border_collapse(): string;
        border_collapse(value: string): any;
        border_color(): string;
        border_color(value: string): any;
        border_image(): string;
        border_image(value: string): any;
        border_image_outset(): string;
        border_image_outset(value: string | number): any;
        border_image_repeat(): string;
        border_image_repeat(value: string): any;
        border_image_slice(): string;
        border_image_slice(value: string | number): any;
        border_image_source(): string;
        border_image_source(value: string): any;
        border_image_width(): string;
        border_image_width(value: string | number): any;
        border_inline(): string;
        border_inline(value: string | number): any;
        border_inline_color(): string;
        border_inline_color(value: string): any;
        border_inline_end_color(): string;
        border_inline_end_color(value: string): any;
        border_inline_end_style(): string;
        border_inline_end_style(value: string): any;
        border_inline_end_width(): string;
        border_inline_end_width(value: string | number): any;
        border_inline_start_color(): string;
        border_inline_start_color(value: string): any;
        border_inline_start_style(): string;
        border_inline_start_style(value: string): any;
        border_inline_start_width(): string;
        border_inline_start_width(value: string | number): any;
        border_inline_style(): string;
        border_inline_style(value: string): any;
        border_inline_width(): string;
        border_inline_width(value: string | number): any;
        border_left_color(): string;
        border_left_color(value: string): any;
        border_left_style(): string;
        border_left_style(value: string): any;
        border_left_width(): string;
        border_left_width(value: string | number): any;
        border_radius(): string;
        border_radius(value: string | number): any;
        border_right_color(): string;
        border_right_color(value: string): any;
        border_right_style(): string;
        border_right_style(value: string): any;
        border_right_width(): string;
        border_right_width(value: string | number): any;
        border_spacing(): string;
        border_spacing(value: string | number): any;
        border_style(): string;
        border_style(value: string): any;
        border_top_color(): string;
        border_top_color(value: string): any;
        border_top_left_radius(): string;
        border_top_left_radius(value: string | number): any;
        border_top_right_radius(): string;
        border_top_right_radius(value: string | number): any;
        border_top_style(): string;
        border_top_style(value: string): any;
        border_top_width(): string;
        border_top_width(value: string | number): any;
        border_width(): string;
        border_width(value: string | number): any;
        bottom(): string;
        bottom(value: string | number): any;
        box_decoration_break(): string;
        box_decoration_break(value: string): any;
        box_reflect(): string;
        box_reflect(value: string): any;
        box_shadow(): string;
        box_shadow(value: string): any;
        box_sizing(): string;
        box_sizing(value: string): any;
        break_after(): string | any;
        break_after(value: string): any;
        break_before(): string;
        break_before(value: string): any;
        break_inside(): string;
        break_inside(value: string): any;
        caption_side(): string;
        caption_side(value: string): any;
        caret_color(): string;
        caret_color(value: string): any;
        clear(): string;
        clear(value: string): any;
        clip(): string;
        clip(value: string): any;
        column_count(): null | number;
        column_count(value: string | number): any;
        column_fill(): string;
        column_fill(value: string): any;
        column_gap(): string;
        column_gap(value: string | number): any;
        column_rule(): string;
        column_rule(value: string): any;
        column_rule_color(): string;
        column_rule_color(value: string): any;
        column_rule_style(): string;
        column_rule_style(value: string): any;
        column_rule_width(): string;
        column_rule_width(value: string | number): any;
        column_span(): null | number;
        column_span(value: number): any;
        column_width(): string;
        column_width(value: string | number): any;
        columns(): string;
        columns(value: string | number): any;
        content(): string;
        content(value: string | number): any;
        counter_increment(): string;
        counter_increment(value: string | number): any;
        counter_reset(): string;
        counter_reset(value: string): any;
        cursor(): string;
        cursor(value: string): any;
        direction(): string;
        direction(value: string): any;
        empty_cells(): string;
        empty_cells(value: string): any;
        filter(): string;
        filter(value: string): any;
        flex(): string;
        flex(value: string): any;
        flex_basis(): string;
        flex_basis(value: string | number): any;
        flex_direction(): string;
        flex_direction(value: string): any;
        flex_flow(): string;
        flex_flow(value: string): any;
        flex_grow(): null | number;
        flex_grow(value: string | number): any;
        flex_shrink(): null | number;
        flex_shrink(value: string | number): any;
        flex_wrap(): string;
        flex_wrap(value: string): any;
        float(): string;
        float(value: string): any;
        font(): string;
        font(value: string): any;
        font_family(): string;
        font_family(value: string): string | any;
        font_feature_settings(): string;
        font_feature_settings(value: string): any;
        font_kerning(): string;
        font_kerning(value: string): any;
        font_language_override(): string;
        font_language_override(value: string): any;
        font_size(): string;
        font_size(value: string | number): any;
        font_size_adjust(): string;
        font_size_adjust(value: string): any;
        font_stretch(): string;
        font_stretch(value: string): any;
        font_style(): string;
        font_style(value: string): any;
        font_synthesis(): string;
        font_synthesis(value: string): any;
        font_variant(): string;
        font_variant(value: string): any;
        font_variant_alternates(): string;
        font_variant_alternates(value: string): any;
        font_variant_caps(): string;
        font_variant_caps(value: string): any;
        font_variant_east_asian(): string;
        font_variant_east_asian(value: string): any;
        font_variant_ligatures(): string;
        font_variant_ligatures(value: string): any;
        font_variant_numeric(): string;
        font_variant_numeric(value: string): any;
        font_variant_position(): string;
        font_variant_position(value: string): any;
        font_weight(): string;
        font_weight(value: string | number): any;
        gap(): string;
        gap(value: string | number): any;
        grid(): string;
        grid(value: string): any;
        grid_area(): string;
        grid_area(value: string): any;
        grid_auto_columns(): string;
        grid_auto_columns(value: string | number): any;
        grid_auto_flow(): string;
        grid_auto_flow(value: string): any;
        grid_auto_rows(): string;
        grid_auto_rows(value: string | number): any;
        grid_column(): string;
        grid_column(value: string): any;
        grid_column_end(): string;
        grid_column_end(value: string | number): any;
        grid_column_gap(): string;
        grid_column_gap(value: string | number): any;
        grid_column_start(): string;
        grid_column_start(value: string | number): any;
        grid_gap(): string;
        grid_gap(value: string | number): any;
        grid_row(): string;
        grid_row(value: string): any;
        grid_row_end(): string;
        grid_row_end(value: string): any;
        grid_row_gap(): string;
        grid_row_gap(value: string | number): any;
        grid_row_start(): string;
        grid_row_start(value: string | number): any;
        grid_template(): string;
        grid_template(value: string): any;
        grid_template_areas(): string;
        grid_template_areas(value: string): any;
        grid_template_columns(): string;
        grid_template_columns(value: string): any;
        grid_template_rows(): string;
        grid_template_rows(value: string | number): any;
        hanging_punctuation(): string;
        hanging_punctuation(value: string): any;
        hyphens(): string;
        hyphens(value: string): string | any;
        image_rendering(): string;
        image_rendering(value: string): any;
        inline_size(): string;
        inline_size(value: string | number): any;
        inset(): string;
        inset(value: string | number): any;
        inset_block(): string | undefined;
        inset_block(value: string | number): any;
        inset_block_end(): string;
        inset_block_end(value: string | number): any;
        inset_block_start(): string;
        inset_block_start(value: string | number): any;
        inset_inline(): string;
        inset_inline(value: string | number): any;
        inset_inline_end(): string;
        inset_inline_end(value: string | number): any;
        inset_inline_start(): string;
        inset_inline_start(value: string | number): any;
        isolation(): string;
        isolation(value: string): any;
        justify_content(): string;
        justify_content(value: string): any;
        justify_items(): string;
        justify_items(value: string): any;
        justify_self(): string;
        justify_self(value: string): any;
        left(): string;
        left(value: string | number): any;
        letter_spacing(): string;
        letter_spacing(value: string | number): any;
        line_break(): string;
        line_break(value: string): any;
        line_height(): string;
        line_height(value: string | number): any;
        list_style(): string;
        list_style(value: string): any;
        list_style_image(): string;
        list_style_image(value: string): any;
        list_style_position(): string;
        list_style_position(value: string): any;
        list_style_type(): string;
        list_style_type(value: string): any;
        margin_block(): string;
        margin_block(value: string | number): any;
        margin_block_end(): string;
        margin_block_end(value: string | number): any;
        margin_block_start(): string;
        margin_block_start(value: string | number): any;
        margin_inline(): string;
        margin_inline(value: string | number): any;
        margin_inline_end(): string;
        margin_inline_end(value: string | number): any;
        margin_inline_start(): string;
        margin_inline_start(value: string | number): any;
        mask(): string;
        mask(value: string): any;
        mask_clip(): string;
        mask_clip(value: string): any;
        mask_composite(): string;
        mask_composite(value: string): any;
        mask_image(): string;
        mask_image(value: string): any;
        mask_mode(): string;
        mask_mode(value: string): any;
        mask_origin(): string;
        mask_origin(value: string): any;
        mask_position(): string;
        mask_position(value: string): any;
        mask_repeat(): string;
        mask_repeat(value: string): any;
        mask_size(): string;
        mask_size(value: string | number): any;
        mask_type(): string;
        mask_type(value: string): any;
        max_height(): number | string;
        max_height(value: string | number): any;
        max_width(): number | string;
        max_width(value: string | number): any;
        max_block_size(): string;
        max_block_size(value: string | number): any;
        max_inline_size(): string | number;
        max_inline_size(value: string | number): any;
        min_block_size(): null | number;
        min_block_size(value: number): any;
        min_inline_size(): string;
        min_inline_size(value: string | number): any;
        mix_blend_mode(): string;
        mix_blend_mode(value: string): any;
        object_fit(): string;
        object_fit(value: string): any;
        object_position(): string;
        object_position(value: string): any;
        offset(): string;
        offset(value: string | number): any;
        offset_anchor(): string;
        offset_anchor(value: string): any;
        offset_distance(): string;
        offset_distance(value: string | number): any;
        offset_path(): string;
        offset_path(value: string): any;
        offset_rotate(): string;
        offset_rotate(value: string | number): any;
        order(): string;
        order(value: string | number): any;
        orphans(): null | number;
        orphans(value: number): any;
        outline(): string;
        outline(value: string): any;
        outline_color(): string;
        outline_color(value: string): any;
        outline_offset(): string;
        outline_offset(value: string | number): any;
        outline_style(): string;
        outline_style(value: string): any;
        outline_width(): string;
        outline_width(value: string | number): any;
        overflow(): string;
        overflow(value: string): any;
        overflow_anchor(): string;
        overflow_anchor(value: string): any;
        overflow_wrap(): string;
        overflow_wrap(value: string): any;
        overflow_x(): string;
        overflow_x(value: string): any;
        overflow_y(): string;
        overflow_y(value: string): any;
        overscroll_behavior(): string;
        overscroll_behavior(value: string): any;
        overscroll_behavior_block(): string;
        overscroll_behavior_block(value: string): any;
        overscroll_behavior_inline(): string;
        overscroll_behavior_inline(value: string): any;
        overscroll_behavior_x(): string;
        overscroll_behavior_x(value: string): any;
        overscroll_behavior_y(): string;
        overscroll_behavior_y(value: string): any;
        padding_block(): string | undefined;
        padding_block(value: string | number): any;
        padding_block_end(): string;
        padding_block_end(value: string | number): any;
        padding_block_start(): string;
        padding_block_start(value: string | number): any;
        padding_inline(): string;
        padding_inline(value: string | number): any;
        padding_inline_end(): string;
        padding_inline_end(value: string | number): any;
        padding_inline_start(): string;
        padding_inline_start(value: string | number): any;
        page_break_after(): string;
        page_break_after(value: string): any;
        page_break_before(): string;
        page_break_before(value: string): any;
        page_break_inside(): string;
        page_break_inside(value: string): any;
        paint_order(): string;
        paint_order(value: string): any;
        perspective(): string;
        perspective(value: string | number): any;
        perspective_origin(): string;
        perspective_origin(value: string): any;
        place_content(): string;
        place_content(value: string): any;
        place_items(): string;
        place_items(value: string): any;
        place_self(): string;
        place_self(value: string): any;
        pointer_events(): string;
        pointer_events(value: string): any;
        quotes(): string;
        quotes(value: string): any;
        resize(): string;
        resize(value: string): any;
        right(): string;
        right(value: number | string): any;
        row_gap(): string;
        row_gap(value: string | number): any;
        scale(): null | number;
        scale(value: number): any;
        scroll_behavior(): string;
        scroll_behavior(value: string): any;
        scroll_margin(): string;
        scroll_margin(value: string | number): any;
        scroll_margin_block(): string;
        scroll_margin_block(value: string | number): any;
        scroll_margin_block_end(): string;
        scroll_margin_block_end(value: string | number): any;
        scroll_margin_block_start(): string;
        scroll_margin_block_start(value: string | number): any;
        scroll_margin_bottom(): string;
        scroll_margin_bottom(value: string | number): any;
        scroll_margin_inline(): string;
        scroll_margin_inline(value: string | number): any;
        scroll_margin_inline_end(): string;
        scroll_margin_inline_end(value: string | number): any;
        scroll_margin_inline_start(): string;
        scroll_margin_inline_start(value: string): any;
        scroll_margin_left(): string;
        scroll_margin_left(value: string | number): any;
        scroll_margin_right(): string;
        scroll_margin_right(value: string | number): any;
        scroll_margin_top(): string;
        scroll_margin_top(value: string | number): any;
        scroll_padding(): string;
        scroll_padding(value: string | number): any;
        scroll_padding_block(): string;
        scroll_padding_block(value: string | number): any;
        scroll_padding_block_end(): string;
        scroll_padding_block_end(value: string | number): any;
        scroll_padding_block_start(): string;
        scroll_padding_block_start(value: string | number): any;
        scroll_padding_bottom(): string;
        scroll_padding_bottom(value: string | number): any;
        scroll_padding_inline(): string;
        scroll_padding_inline(value: string | number): any;
        scroll_padding_inline_end(): string;
        scroll_padding_inline_end(value: string | number): any;
        scroll_padding_inline_start(): string;
        scroll_padding_inline_start(value: string | number): any;
        scroll_padding_left(): string;
        scroll_padding_left(value: string | number): any;
        scroll_padding_right(): string;
        scroll_padding_right(value: string | number): any;
        scroll_padding_top(): string;
        scroll_padding_top(value: string | number): any;
        scroll_snap_align(): string;
        scroll_snap_align(value: string): any;
        scroll_snap_stop(): string;
        scroll_snap_stop(value: string): any;
        scroll_snap_type(): string;
        scroll_snap_type(value: string): any;
        scrollbar_color(): string;
        scrollbar_color(value: string): any;
        tab_size(): string;
        tab_size(value: string | number): any;
        table_layout(): string;
        table_layout(value: string): any;
        text_align(): string;
        text_align(value: string): any;
        text_align_last(): string;
        text_align_last(value: string): any;
        text_combine_upright(): string;
        text_combine_upright(value: string): any;
        text_decoration(): string;
        text_decoration(value: string): any;
        text_decoration_color(): string;
        text_decoration_color(value: string): any;
        text_decoration_line(): string;
        text_decoration_line(value: string): any;
        text_decoration_style(): string;
        text_decoration_style(value: string): any;
        text_decoration_thickness(): string;
        text_decoration_thickness(value: string | number): any;
        text_emphasis(): string;
        text_emphasis(value: string): any;
        text_indent(): string;
        text_indent(value: string | number): any;
        text_justify(): string;
        text_justify(value: string): any;
        text_orientation(): string;
        text_orientation(value: string): any;
        text_overflow(): string;
        text_overflow(value: string): any;
        text_shadow(): string;
        text_shadow(value: string): any;
        text_transform(): string;
        text_transform(value: string): any;
        text_underline_position(): string;
        text_underline_position(value: string): any;
        top(): string;
        top(value: string | number): any;
        transform(): string;
        transform(value: string): any;
        transform_origin(): string;
        transform_origin(value: string): any;
        transform_style(): string;
        transform_style(value: string): any;
        transition(): string;
        transition(value: string): any;
        transition_delay(): string;
        transition_delay(value: string | number): any;
        transition_duration(): string | undefined;
        transition_duration(value: string | number): any;
        transition_property(): string;
        transition_property(value: string): any;
        transition_timing_function(): string;
        transition_timing_function(value: string): any;
        translate(): string;
        translate(value: string | number): any;
        unicode_bidi(): string;
        unicode_bidi(value: string): any;
        user_select(): string;
        user_select(value: string): any;
        visibility(): string;
        visibility(value: string): any;
        white_space(): string;
        white_space(value: string): any;
        widows(): string;
        widows(value: string | number): any;
        word_break(): string;
        word_break(value: string): any;
        word_spacing(): string;
        word_spacing(value: string | number): any;
        word_wrap(): string;
        word_wrap(value: string): any;
        writing_mode(): string;
        writing_mode(value: string): any;
        focusable(): boolean;
        focusable(value: boolean): any;
        alt(): string;
        alt(value: string): any;
        readonly(): boolean;
        readonly(value: boolean): any;
        download(): string;
        download(value: string): any;
        accept(): string;
        accept(value: string): any;
        accept_charset(): string;
        accept_charset(value: string): any;
        action(): string;
        action(value: string): any;
        async(): boolean;
        async(value: boolean): any;
        auto_complete(): string;
        auto_complete(value: string): any;
        auto_focus(): string;
        auto_focus(value: string): any;
        auto_play(): boolean;
        auto_play(value: boolean): any;
        charset(): string;
        charset(value: string): any;
        checked(): boolean;
        checked(value: boolean): any;
        cite(): string;
        cite(value: string): any;
        cols(): null | number;
        cols(value: number): any;
        colspan(): null | number;
        colspan(value: number): any;
        content_editable(): boolean;
        content_editable(value: boolean): any;
        controls(): boolean;
        controls(value: boolean): any;
        coords(): string;
        coords(value: string): any;
        data(): string;
        data(value: string | number): any;
        datetime(): string;
        datetime(value: string | number): any;
        default(): string;
        default(value: string | number): any;
        defer(): string;
        defer(value: string): any;
        dir(): string;
        dir(value: string): any;
        dirname(): string;
        dirname(value: string): any;
        disabled(): boolean;
        disabled(value: boolean): any;
        draggable(): boolean;
        draggable(value: boolean): any;
        enctype(): string;
        enctype(value: string): any;
        for(): string;
        for(value: string): any;
        form(): string;
        form(value: string): any;
        form_action(): string;
        form_action(value: string): any;
        headers(): string;
        headers(value: string): any;
        high(): string;
        high(value: string | number): any;
        href(): string;
        href(value: string): any;
        href_lang(): string;
        href_lang(value: string): any;
        http_equiv(): string;
        http_equiv(value: string | number): any;
        id(): string;
        id(value: string): any;
        is_map(): boolean;
        is_map(value: boolean): any;
        kind(): string;
        kind(value: string): any;
        label(): string;
        label(value: string): any;
        lang(): string;
        lang(value: string): any;
        list(): string;
        list(value: string): any;
        loop(): boolean;
        loop(value: boolean): any;
        low(): string;
        low(value: string | number): any;
        max(): string;
        max(value: string | number): any;
        max_length(): null | number;
        max_length(value: number): any;
        method(): string;
        method(value: string): any;
        min(): string;
        min(value: string | number): any;
        multiple(): string;
        multiple(value: string | boolean): any;
        muted(): boolean;
        muted(value: boolean): any;
        no_validate(): boolean;
        no_validate(value: boolean): any;
        open(): boolean;
        open(value: boolean): any;
        optimum(): null | number;
        optimum(value: number): any;
        pattern(): string;
        pattern(value: string): any;
        placeholder(): string;
        placeholder(value: string): any;
        poster(): string;
        poster(value: string): any;
        preload(): string;
        preload(value: string): any;
        rel(): string;
        rel(value: string): any;
        required(): boolean;
        required(value: boolean): any;
        reversed(): boolean;
        reversed(value: boolean): any;
        rows(): null | number;
        rows(value: number): any;
        row_span(): null | number;
        row_span(value: number): any;
        sandbox(): string;
        sandbox(value: string): any;
        scope(): string;
        scope(value: string): any;
        selected(): boolean;
        selected(value: boolean): any;
        shape(): string;
        shape(value: string): any;
        size(): null | number;
        size(value: number): any;
        sizes(): string;
        sizes(value: string | number): any;
        span(): null | number;
        span(value: number): any;
        spell_check(): boolean;
        spell_check(value: boolean): any;
        src(): string;
        src(value: string): any;
        src_doc(): string;
        src_doc(value: string): any;
        src_lang(): string;
        src_lang(value: string): any;
        rrsrc_set(): string;
        rrsrc_set(value: string): any;
        start(): null | number;
        start(value: number): any;
        step(): null | number;
        step(value: number): any;
        tab_index(): null | number;
        tab_index(value: number): any;
        target(): string;
        target(value: string): any;
        title(): string;
        title(value: string): any;
        type(): string;
        type(value: string): any;
        use_map(): string;
        use_map(value: string): any;
        value(): string;
        value(value: string | number): any;
        on_blur(): Function | null;
        on_blur(callback: (element: any, event: Event) => void): any;
        on_change(): Function | null;
        on_change(callback: (element: any, event: Event) => void): any;
        on_focus(): Function | null;
        on_focus(callback: (element: any, event: Event) => void): any;
        on_input(): Function | null;
        on_input(callback: (element: any, event: Event) => void): any;
        on_before_input(): Function | null;
        on_before_input(callback: (element: any, event: Event) => void): any;
        on_invalid(): Function | null;
        on_invalid(callback: (element: any, event: Event) => void): any;
        on_reset(): Function | null;
        on_reset(callback: (element: any, event: Event) => void): any;
        on_select(): Function | null;
        on_select(callback: (element: any, event: Event) => void): any;
        on_submit(): Function | null;
        on_submit(callback: (element: any, event: Event) => void): any;
        on_key_down(): Function | null;
        on_key_down(callback: (element: any, event: KeyboardEvent) => void): any;
        on_key_press(): Function | null;
        on_key_press(callback: (element: any, event: KeyboardEvent) => void): any;
        on_key_up(): Function | null;
        on_key_up(callback: (element: any, event: KeyboardEvent) => void): any;
        on_dbl_click(): Function | null;
        on_dbl_click(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_down(): Function | null;
        on_mouse_down(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_move(): Function | null;
        on_mouse_move(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_out(): Function | null;
        on_mouse_out(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_over(): Function | null;
        on_mouse_over(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_up(): Function | null;
        on_mouse_up(callback: (element: any, event: MouseEvent) => void): any;
        on_wheel(): Function | null;
        on_wheel(callback: (element: any, event: WheelEvent) => void): any;
        on_drag(): Function | null;
        on_drag(callback: (element: any, event: DragEvent) => void): any;
        on_drag_end(): Function | null;
        on_drag_end(callback: (element: any, event: DragEvent) => void): any;
        on_drag_enter(): Function | null;
        on_drag_enter(callback: (element: any, event: DragEvent) => void): any;
        on_drag_leave(): Function | null;
        on_drag_leave(callback: (element: any, event: DragEvent) => void): any;
        on_drag_over(): Function | null;
        on_drag_over(callback: (element: any, event: DragEvent) => void): any;
        on_drag_start(): Function | null;
        on_drag_start(callback: (element: any, event: DragEvent) => void): any;
        on_drop(): Function | null;
        on_drop(callback: (element: any, event: Event) => void): any;
        on_copy(): Function | null;
        on_copy(callback: (element: any, event: Event) => void): any;
        on_cut(): Function | null;
        on_cut(callback: (element: any, event: Event) => void): any;
        on_paste(): Function | null;
        on_paste(callback: (element: any, event: Event) => void): any;
        on_abort(): Function | null;
        on_abort(callback: (element: any, event: Event) => void): any;
        on_canplay(): Function | null;
        on_canplay(callback: (element: any, event: Event) => void): any;
        on_canplay_through(): Function | null;
        on_canplay_through(callback: (element: any, event: Event) => void): any;
        on_cue_change(): Function | null;
        on_cue_change(callback: (element: any, event: Event) => void): any;
        on_duration_change(): Function | null;
        on_duration_change(callback: (element: any, event: Event) => void): any;
        on_emptied(): Function | null;
        on_emptied(callback: (element: any, event: Event) => void): any;
        on_ended(): Function | null;
        on_ended(callback: (element: any, event: Event) => void): any;
        on_error(): Function | null;
        on_error(callback: (element: any, error: string | Event) => void): any;
        on_loaded_data(): Function | null;
        on_loaded_data(callback: (element: any, event: Event) => void): any;
        on_loaded_metadata(): Function | null;
        on_loaded_metadata(callback: (element: any, event: Event) => void): any;
        on_load_start(): Function | null;
        on_load_start(callback: (element: any, event: Event) => void): any;
        on_pause(): Function | null;
        on_pause(callback: (element: any, event: Event) => void): any;
        on_play(): Function | null;
        on_play(callback: (element: any, event: Event) => void): any;
        on_playing(): Function | null;
        on_playing(callback: (element: any, time: any) => void): any;
        on_progress(): Function | null;
        on_progress(callback: ((element: any, event: Event) => void) | null): any;
        on_rate_change(): Function | null;
        on_rate_change(callback: (element: any, event: Event) => void): any;
        on_seeked(): Function | null;
        on_seeked(callback: (element: any, time: any) => void): any;
        on_seeking(): Function | null;
        on_seeking(callback: (element: any, time: any) => void): any;
        on_stalled(): Function | null;
        on_stalled(callback: (element: any, event: Event) => void): any;
        on_suspend(): Function | null;
        on_suspend(callback: Function): any;
        on_time_update(): Function | null;
        on_time_update(callback: (element: any, event: Event) => void): any;
        on_volume_change(): Function | null;
        on_volume_change(callback: (element: any, event: Event) => void): any;
        on_waiting(): Function | null;
        on_waiting(callback: (element: any, time: any) => void): any;
        on_toggle(): Function | null;
        on_toggle(callback: (element: any, event: Event) => void): any;
    };
    [x: string]: any;
    element_tag: string;
    default_style: Record<string, any>;
    default_attributes: Record<string, any>;
    default_events: Record<string, any>;
};
export declare class VStackElement extends VStackElement_base {
    constructor(...children: any[]);
}
export declare const VStack: (...args: any[]) => any;
declare const AnchorVStackElement_base: {
    new (): {
        [x: string]: any;
        __is_velement: boolean;
        rendered: boolean;
        element_type: string;
        base_element_type: string;
        remove_focus: any;
        _v_children: any[];
        _element_display: string;
        _is_connected: boolean;
        _on_append_callback?: Function;
        _assign_to_parent_as?: string;
        _parent?: any;
        _side_by_side_basis?: number;
        _animate_timeout?: ReturnType<typeof setTimeout>;
        _disabled: boolean;
        _timeouts: Record<string, any>;
        _on_window_resize_timer: any;
        _abs_parent: any;
        _pseudo_stylesheets: Record<string, any>;
        _on_resize_rule_evals: Record<string, any>;
        _observing_on_resize: boolean;
        _observing_on_render: boolean;
        _on_resize_callbacks: ((element: any) => void)[];
        _on_render_callbacks: ((element: any) => void)[];
        _on_theme_updates: ((element: any) => void)[];
        _on_mouse_leave_callback: (element: any, event: MouseEvent) => void;
        _on_mouse_enter_callback: (element: any, event: MouseEvent) => void;
        _on_shortcut_time: number;
        _on_shortcut_key: string;
        _on_shortcut_keycode: number;
        _on_keypress_set: boolean;
        _on_enter_callback?: ((element: any, event: KeyboardEvent) => void) | undefined;
        _on_escape_callback?: ((element: any, event: KeyboardEvent) => void) | undefined;
        _on_appear_callbacks: Record<string, any>[];
        _context_menu?: import("./context_menu").ContextMenuElement;
        _media_queries: {
            [key: string]: {
                list: MediaQueryList;
                callback: (query: MediaQueryList) => void;
            };
        };
        connectedCallback(): void;
        clone(clone_children?: boolean): any;
        pad_numeric(value: number | string | null, padding?: string): string;
        pad_percentage(value: number, padding?: string): string;
        edit_filter_wrapper(filter: string | null, type: string, to?: string | null): string;
        toggle_filter_wrapper(filter: string | null, type: string, to?: string | null): string;
        _convert_px_to_number_type(value: any, def?: number | null): any;
        _try_parse_float(value: any, def?: number | null): any;
        append(...children: any[]): any;
        zstack_append(...children: any[]): any;
        append_to(parent: any): any;
        append_children_to(parent: any, on_append_callback?: Function): any;
        remove_child(child: any): any;
        remove_children(): any;
        child(index: number): any;
        get(index: number): any | undefined;
        text(): string;
        text(value: string): any;
        width(): string | number;
        width(value: string | number, check_attribute?: boolean): any;
        fixed_width(): string | number;
        fixed_width(value: string | number): any;
        height(): string | number;
        height(value: string | number, check_attribute?: boolean): any;
        fixed_height(): string | number;
        fixed_height(value: string | number): any;
        min_height(): string | number;
        min_height(value: string | number): any;
        min_width(): string | number;
        min_width(value: string | number): any;
        width_by_columns(columns: number): any;
        offset_width(): number;
        offset_height(): number;
        client_width(): number;
        client_height(): number;
        x(): number;
        y(): number;
        frame(width: string | number, height: string | number): any;
        min_frame(width: string | number, height: string | number): any;
        max_frame(width: string | number, height: string | number): any;
        fixed_frame(width: string | number, height: string | number): any;
        get_frame_while_hidden(): {
            width: number;
            height: number;
        };
        padding(): string;
        padding(value: string | number): any;
        padding(top_bottom: string | number, left_right: string | number): any;
        padding(top: string | number, right: string | number, bottom: string | number, left: string | number): any;
        padding_bottom(): number;
        padding_bottom(value: string | number): any;
        padding_left(): number;
        padding_left(value: string | number): any;
        padding_right(): number;
        padding_right(value: string | number): any;
        padding_top(): number;
        padding_top(value: string | number): any;
        margin(): string | undefined;
        margin(value: string | number): any;
        margin(value: string | number, value2: string | number): any;
        margin(value: string | number, value2: string | number, value3: string | number, value4: string | number): any;
        margin_bottom(): number;
        margin_bottom(value: string | number): any;
        margin_left(): number;
        margin_left(value: string | number): any;
        margin_right(): number;
        margin_right(value: string | number): any;
        margin_top(): number;
        margin_top(value: string | number): any;
        position(): string | undefined;
        position(value: number | string): any;
        position(top?: number | string, right?: number | string, bottom?: number | string, left?: number | string): any;
        stretch(value: boolean): any;
        wrap(value: boolean | string): any;
        z_index(value: number): any;
        side_by_side(options: {
            columns?: number;
            hspacing?: number;
            vspacing?: number;
            stretch?: boolean;
            hide_dividers?: boolean;
        }): any;
        side_by_side_basis(): number | undefined;
        side_by_side_basis(basis: number | false): any;
        ellipsis_overflow(): boolean;
        ellipsis_overflow(to: boolean, after_lines?: number | null): any;
        align(): string;
        align(value: string): any;
        leading(): any;
        center(): any;
        trailing(): any;
        align_vertical(): string;
        align_vertical(value: string): any;
        leading_vertical(): any;
        center_vertical(only_on_no_overflow?: boolean): any;
        trailing_vertical(): any;
        align_text(value: string): any;
        text_leading(): any;
        text_center(): any;
        text_trailing(): any;
        align_height(): any;
        text_wrap(): string;
        text_wrap(value: string): any;
        line_clamp(): string;
        line_clamp(value: string): any;
        box_orient(): string;
        box_orient(value: string): any;
        color(): string;
        color(value: string | import("./gradient").GradientType): any;
        border(): string;
        border(value: string): any;
        border(width: string | number, color: string): any;
        border(width: string | number, style: string, color: string): any;
        border_top(): string;
        border_top(value: string | number): any;
        border_top(width: string | number, color: string): any;
        border_top(width: string | number, style: string, color: string): any;
        border_bottom(): string;
        border_bottom(value: string): any;
        border_bottom(width: string | number, color: string): any;
        border_bottom(width: string | number, style: string, color: string): any;
        border_right(): string;
        border_right(value: string): any;
        border_right(width: string | number, color: string): any;
        border_right(width: string | number, style: string, color: string): any;
        border_left(): string;
        border_left(value: string): any;
        border_left(width: string | number, color: string): any;
        border_left(width: string | number, style: string, color: string): any;
        shadow(): string;
        shadow(value: number): any;
        shadow(value1: number, value2: number, value3: number, value4: string): any;
        drop_shadow(): string;
        drop_shadow(value: number): any;
        drop_shadow(value1: number, value2: number, value3: number, value4: string): any;
        greyscale(): string;
        greyscale(value: number): any;
        opacity(): number;
        opacity(value: number): any;
        toggle_opacity(value: number): any;
        blur(): string;
        blur(value: number): any;
        toggle_blur(value?: number): any;
        background_blur(): string;
        background_blur(value: number | null): any;
        toggle_background_blur(value?: number): any;
        brightness(): string;
        brightness(value: number): any;
        toggle_brightness(value?: number): any;
        background_brightness(): string;
        background_brightness(value: number): any;
        toggle_background_brightness(value?: number): any;
        rotate(): string;
        rotate(value: number | string): any;
        delay(value: string | number): any;
        duration(value: string | number): any;
        background(): string;
        background(value: string): any;
        scale_font_size(scale?: number): any;
        display(): string;
        display(value: string): any;
        hide(): any;
        show(): any;
        is_hidden(): boolean;
        is_visible(): boolean;
        toggle_visibility(): any;
        inner_html(): string;
        inner_html(value: string): any;
        outer_html(): string;
        outer_html(value: string): any;
        styles(): Record<string, string>;
        styles(css_attr: Record<string, any>): any;
        attr(key: string): null | string;
        attr(key: string, value: string | number | null): any;
        attrs(html_attr: Record<string, string | number | boolean>): any;
        event(key: string): any;
        event(key: string, value: any): any;
        events(html_events: {
            [key: string]: EventListener;
        }): any;
        class(): string;
        class(value: string): any;
        toggle_class(name: string): any;
        remove_class(name: string): any;
        remove_classes(): any;
        hover_brightness(): boolean;
        hover_brightness(mouse_down_brightness: boolean | number, mouse_over_brightness: number): any;
        text_width(): number;
        text_width(text: string): number;
        frame_mode(frame_mode: import("./frame_modes").FrameNodesType): any;
        frame_mode(frame_modes: import("./frame_modes").FrameModesType, frame_mode: import("./frame_modes").FrameNodesType): any;
        media(media_query: string, true_handler?: (element: any) => void, false_handler?: ((element: any) => void)): any;
        remove_media(media_query: string): any;
        remove_medias(): any;
        remove_all_media(): any;
        default_animate(...args: any[]): any;
        animate(options: {
            keyframes: Array<any>;
            delay: number;
            duration: number;
            repeat?: boolean;
            persistent?: boolean;
            on_finish?: ((element: any) => void) | null;
            easing?: string;
        }): any;
        stop_animation(): any;
        slide_out(options: {
            direction: string;
            distance: number;
            duration: number;
            opacity?: boolean;
            easing?: string;
            hide?: boolean;
            remove?: boolean;
            display?: string;
            _slide_in?: boolean;
        }): Promise<void>;
        slide_in({ direction, distance, duration, opacity, easing, display, }: {
            direction?: string;
            distance?: number;
            duration?: number;
            opacity?: boolean;
            easing?: string;
            display?: string;
        }): Promise<any>;
        dropdown_animation({ distance, duration, opacity_duration, total_duration, delay, start_delay, easing, }?: {
            distance?: string;
            duration?: number;
            opacity_duration?: number;
            total_duration?: number;
            delay?: number;
            start_delay?: number;
            easing?: string;
        }): Promise<void>;
        increment_number_animation({ start, end, duration, total_duration, delay, prefix, suffix, }?: {
            start?: number;
            end?: number;
            duration?: number;
            total_duration?: number;
            delay?: number;
            prefix?: string;
            suffix?: string;
        }): Promise<void>;
        on_event(id: string, callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_event(id: string, callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_events(id: string): any;
        timeout(delay: number, callback: (instance: any) => void, options?: {
            id?: string;
            debounce?: boolean;
        } | null): any;
        clear_timeout(id: string | number): any;
        disable(): any;
        enable(): any;
        on_click(): null | Function;
        on_click(simulate_href: string | null, callback: Function): any;
        on_click(callback?: Function): any;
        on_click_redirect(url: string): any;
        on_scroll(): (EventListener | null);
        on_scroll(opts_or_callback: Function | {
            callback: (element: any, event: Event) => void;
            delay?: number;
        }): any;
        on_window_resize(): null | Function;
        on_window_resize(opts: Function | {
            callback?: Function;
            once?: boolean;
            delay?: number;
        }): any;
        on_attachment_drop(options: {
            callback: (args: {
                name: string;
                path: string;
                is_dir: boolean;
                data: any;
                compressed: boolean;
                file: File;
                size: number;
            }) => void;
            read?: boolean;
            compress?: boolean;
            on_start?: (event: DragEvent) => void;
        }): any;
        on_appear(callback: (element: any, options: {
            scroll_direction: string;
        }) => void): any;
        on_appear(options: {
            callback: (element: any, options: {
                scroll_direction: string;
            }) => void;
            repeat?: boolean;
            threshold?: number | null;
        }): any;
        on_disappear(callback_or_opts?: {
            callback?: (element: any) => void;
            repeat?: boolean;
        } | ((element: any) => void) | undefined): any;
        on_enter(callback: (element: any, event: KeyboardEvent) => void): any;
        on_escape(callback: (element: any, event: KeyboardEvent) => void): any;
        on_theme_update(): ((element: any) => void)[];
        on_theme_update(callback: (element: any) => void): any;
        remove_on_theme_update(callback: (element: any) => void): any;
        remove_on_theme_updates(): any;
        on_render(): ((element: any) => void)[];
        on_render(callback: (element: any) => void): any;
        remove_on_render(callback: (element: any) => void): any;
        remove_on_renders(): any;
        is_rendered(): boolean;
        on_load(callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_load(callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_loads(): any;
        on_resize(): ((element: any) => void)[];
        on_resize(callback: (element: any) => void): any;
        remove_on_resize(callback: (element: any) => void): any;
        remove_on_resizes(): any;
        on_resize_rule(evaluation: (element: any) => boolean, on_true?: ((element: any) => void) | undefined, on_false?: ((element: any) => void) | undefined): any;
        on_shortcut(shortcuts?: {
            match?: (event: KeyboardEvent, key: string, shortcut: any) => boolean;
            key?: string;
            keys?: string[];
            keycode?: number;
            keycodes?: number[];
            or?: boolean;
            duration?: number;
            shift?: boolean;
            alt?: boolean;
            ctrl?: boolean;
            allow_other_modifiers?: boolean;
            callback: (element: any, event: KeyboardEvent) => void;
        }[]): any;
        on_context_menu(): import("./context_menu").ContextMenuElement | Function | undefined;
        on_context_menu(callback: Function | import("./context_menu").ContextMenuElement | any[]): any;
        on_mouse_enter(): (element: any, event: MouseEvent) => void;
        on_mouse_enter(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_leave(): (element: any, event: MouseEvent) => void;
        on_mouse_leave(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_over_out(mouse_over: (element: any, event: MouseEvent) => void, mouse_out: (element: any, event: MouseEvent) => void): any;
        first_child(): Node | null;
        last_child(): ChildNode | null;
        iterate(start: number | ((child: any, index: number) => any), end?: number, handler?: (child: any, index: number) => any): any;
        iterate_nodes(start: number | ((node: any, index: number) => any), end?: number, handler?: (node: any, index: number) => any): any;
        set_default(Type?: any): any;
        assign(name: string, value: any): any;
        extend(obj: object): any;
        select(overwrite?: boolean): any;
        is_scrollable(): boolean;
        is_scrollable_x(): boolean;
        is_scrollable_y(): boolean;
        wait_till_children_rendered(timeout?: number): Promise<void>;
        pseudo(type: string, node: any): any;
        remove_pseudo(node: any): any;
        remove_pseudos(): any;
        pseudo_on_hover(type: string, node: any, set_defaults?: boolean): any;
        parent(): HTMLElement | any | null;
        parent(value: any): any;
        abs_parent(): any;
        abs_parent(value: any): any;
        assign_to_parent_as(name: string): any;
        get_y_offset_from_parent(parent: HTMLElement): number | null;
        absolute_y_offset(): number;
        absolute_x_offset(): number;
        exec(callback: (element: any) => void): any;
        is_child(target: any): boolean;
        is_nested_child(target: any, stop_node?: any): boolean;
        toString(): string;
        accent_color(): string;
        accent_color(value: string): any;
        align_content(): string;
        align_content(value: string): any;
        align_items(): string;
        align_items(value: string): any;
        align_self(): string;
        align_self(value: string): any;
        all(): string;
        all(value: string): any;
        animation(): string;
        animation(value: string): any;
        animation_delay(): string;
        animation_delay(value: string | number): any;
        animation_direction(): string;
        animation_direction(value: string): any;
        animation_duration(): string;
        animation_duration(value: string | number): any;
        animation_fill_mode(): string;
        animation_fill_mode(value: string): any;
        animation_iteration_count(): string;
        animation_iteration_count(value: string | number): any;
        animation_name(): string;
        animation_name(value: string): any;
        animation_play_state(): string;
        animation_play_state(value: string): any;
        animation_timing_function(): string;
        animation_timing_function(value: string): any;
        aspect_ratio(): string;
        aspect_ratio(value: string): any;
        backdrop_filter(): string;
        backdrop_filter(value: string): any;
        backface_visibility(): string;
        backface_visibility(value: string): any;
        background_attachment(): string;
        background_attachment(value: string): any;
        background_blend_mode(): string;
        background_blend_mode(value: string): any;
        background_clip(): string;
        background_clip(value: string): any;
        background_color(): string;
        background_color(value: string): any;
        background_image(): string;
        background_image(value: string): any;
        background_origin(): string;
        background_origin(value: string): any;
        background_position(): string;
        background_position(value: string): any;
        background_position_x(): string;
        background_position_x(value: string | number): any;
        background_position_y(): string;
        background_position_y(value: string | number): any;
        background_repeat(): string;
        background_repeat(value: string): any;
        background_size(): string;
        background_size(value: string | number): any;
        block_size(): string;
        block_size(value: string | number): any;
        border_block(): string;
        border_block(value: string): string | any;
        border_block_color(): string;
        border_block_color(value: string): any;
        border_block_end_color(): string;
        border_block_end_color(value: string): any;
        border_block_end_style(): string;
        border_block_end_style(value: string): any;
        border_block_end_width(): string;
        border_block_end_width(value: string | number): any;
        border_block_start_color(): string;
        border_block_start_color(value: string): any;
        border_block_start_style(): string;
        border_block_start_style(value: string): any;
        border_block_start_width(): string;
        border_block_start_width(value: string | number): any;
        border_block_style(): string;
        border_block_style(value: string): any;
        border_block_width(): string;
        border_block_width(value: string | number): any;
        border_bottom_color(): string;
        border_bottom_color(value: string): any;
        border_bottom_left_radius(): string;
        border_bottom_left_radius(value: string | number): any;
        border_bottom_right_radius(): string;
        border_bottom_right_radius(value: string | number): any;
        border_bottom_style(): string;
        border_bottom_style(value: string): any;
        border_bottom_width(): string;
        border_bottom_width(value: string | number): any;
        border_collapse(): string;
        border_collapse(value: string): any;
        border_color(): string;
        border_color(value: string): any;
        border_image(): string;
        border_image(value: string): any;
        border_image_outset(): string;
        border_image_outset(value: string | number): any;
        border_image_repeat(): string;
        border_image_repeat(value: string): any;
        border_image_slice(): string;
        border_image_slice(value: string | number): any;
        border_image_source(): string;
        border_image_source(value: string): any;
        border_image_width(): string;
        border_image_width(value: string | number): any;
        border_inline(): string;
        border_inline(value: string | number): any;
        border_inline_color(): string;
        border_inline_color(value: string): any;
        border_inline_end_color(): string;
        border_inline_end_color(value: string): any;
        border_inline_end_style(): string;
        border_inline_end_style(value: string): any;
        border_inline_end_width(): string;
        border_inline_end_width(value: string | number): any;
        border_inline_start_color(): string;
        border_inline_start_color(value: string): any;
        border_inline_start_style(): string;
        border_inline_start_style(value: string): any;
        border_inline_start_width(): string;
        border_inline_start_width(value: string | number): any;
        border_inline_style(): string;
        border_inline_style(value: string): any;
        border_inline_width(): string;
        border_inline_width(value: string | number): any;
        border_left_color(): string;
        border_left_color(value: string): any;
        border_left_style(): string;
        border_left_style(value: string): any;
        border_left_width(): string;
        border_left_width(value: string | number): any;
        border_radius(): string;
        border_radius(value: string | number): any;
        border_right_color(): string;
        border_right_color(value: string): any;
        border_right_style(): string;
        border_right_style(value: string): any;
        border_right_width(): string;
        border_right_width(value: string | number): any;
        border_spacing(): string;
        border_spacing(value: string | number): any;
        border_style(): string;
        border_style(value: string): any;
        border_top_color(): string;
        border_top_color(value: string): any;
        border_top_left_radius(): string;
        border_top_left_radius(value: string | number): any;
        border_top_right_radius(): string;
        border_top_right_radius(value: string | number): any;
        border_top_style(): string;
        border_top_style(value: string): any;
        border_top_width(): string;
        border_top_width(value: string | number): any;
        border_width(): string;
        border_width(value: string | number): any;
        bottom(): string;
        bottom(value: string | number): any;
        box_decoration_break(): string;
        box_decoration_break(value: string): any;
        box_reflect(): string;
        box_reflect(value: string): any;
        box_shadow(): string;
        box_shadow(value: string): any;
        box_sizing(): string;
        box_sizing(value: string): any;
        break_after(): string | any;
        break_after(value: string): any;
        break_before(): string;
        break_before(value: string): any;
        break_inside(): string;
        break_inside(value: string): any;
        caption_side(): string;
        caption_side(value: string): any;
        caret_color(): string;
        caret_color(value: string): any;
        clear(): string;
        clear(value: string): any;
        clip(): string;
        clip(value: string): any;
        column_count(): null | number;
        column_count(value: string | number): any;
        column_fill(): string;
        column_fill(value: string): any;
        column_gap(): string;
        column_gap(value: string | number): any;
        column_rule(): string;
        column_rule(value: string): any;
        column_rule_color(): string;
        column_rule_color(value: string): any;
        column_rule_style(): string;
        column_rule_style(value: string): any;
        column_rule_width(): string;
        column_rule_width(value: string | number): any;
        column_span(): null | number;
        column_span(value: number): any;
        column_width(): string;
        column_width(value: string | number): any;
        columns(): string;
        columns(value: string | number): any;
        content(): string;
        content(value: string | number): any;
        counter_increment(): string;
        counter_increment(value: string | number): any;
        counter_reset(): string;
        counter_reset(value: string): any;
        cursor(): string;
        cursor(value: string): any;
        direction(): string;
        direction(value: string): any;
        empty_cells(): string;
        empty_cells(value: string): any;
        filter(): string;
        filter(value: string): any;
        flex(): string;
        flex(value: string): any;
        flex_basis(): string;
        flex_basis(value: string | number): any;
        flex_direction(): string;
        flex_direction(value: string): any;
        flex_flow(): string;
        flex_flow(value: string): any;
        flex_grow(): null | number;
        flex_grow(value: string | number): any;
        flex_shrink(): null | number;
        flex_shrink(value: string | number): any;
        flex_wrap(): string;
        flex_wrap(value: string): any;
        float(): string;
        float(value: string): any;
        font(): string;
        font(value: string): any;
        font_family(): string;
        font_family(value: string): string | any;
        font_feature_settings(): string;
        font_feature_settings(value: string): any;
        font_kerning(): string;
        font_kerning(value: string): any;
        font_language_override(): string;
        font_language_override(value: string): any;
        font_size(): string;
        font_size(value: string | number): any;
        font_size_adjust(): string;
        font_size_adjust(value: string): any;
        font_stretch(): string;
        font_stretch(value: string): any;
        font_style(): string;
        font_style(value: string): any;
        font_synthesis(): string;
        font_synthesis(value: string): any;
        font_variant(): string;
        font_variant(value: string): any;
        font_variant_alternates(): string;
        font_variant_alternates(value: string): any;
        font_variant_caps(): string;
        font_variant_caps(value: string): any;
        font_variant_east_asian(): string;
        font_variant_east_asian(value: string): any;
        font_variant_ligatures(): string;
        font_variant_ligatures(value: string): any;
        font_variant_numeric(): string;
        font_variant_numeric(value: string): any;
        font_variant_position(): string;
        font_variant_position(value: string): any;
        font_weight(): string;
        font_weight(value: string | number): any;
        gap(): string;
        gap(value: string | number): any;
        grid(): string;
        grid(value: string): any;
        grid_area(): string;
        grid_area(value: string): any;
        grid_auto_columns(): string;
        grid_auto_columns(value: string | number): any;
        grid_auto_flow(): string;
        grid_auto_flow(value: string): any;
        grid_auto_rows(): string;
        grid_auto_rows(value: string | number): any;
        grid_column(): string;
        grid_column(value: string): any;
        grid_column_end(): string;
        grid_column_end(value: string | number): any;
        grid_column_gap(): string;
        grid_column_gap(value: string | number): any;
        grid_column_start(): string;
        grid_column_start(value: string | number): any;
        grid_gap(): string;
        grid_gap(value: string | number): any;
        grid_row(): string;
        grid_row(value: string): any;
        grid_row_end(): string;
        grid_row_end(value: string): any;
        grid_row_gap(): string;
        grid_row_gap(value: string | number): any;
        grid_row_start(): string;
        grid_row_start(value: string | number): any;
        grid_template(): string;
        grid_template(value: string): any;
        grid_template_areas(): string;
        grid_template_areas(value: string): any;
        grid_template_columns(): string;
        grid_template_columns(value: string): any;
        grid_template_rows(): string;
        grid_template_rows(value: string | number): any;
        hanging_punctuation(): string;
        hanging_punctuation(value: string): any;
        hyphens(): string;
        hyphens(value: string): string | any;
        image_rendering(): string;
        image_rendering(value: string): any;
        inline_size(): string;
        inline_size(value: string | number): any;
        inset(): string;
        inset(value: string | number): any;
        inset_block(): string | undefined;
        inset_block(value: string | number): any;
        inset_block_end(): string;
        inset_block_end(value: string | number): any;
        inset_block_start(): string;
        inset_block_start(value: string | number): any;
        inset_inline(): string;
        inset_inline(value: string | number): any;
        inset_inline_end(): string;
        inset_inline_end(value: string | number): any;
        inset_inline_start(): string;
        inset_inline_start(value: string | number): any;
        isolation(): string;
        isolation(value: string): any;
        justify_content(): string;
        justify_content(value: string): any;
        justify_items(): string;
        justify_items(value: string): any;
        justify_self(): string;
        justify_self(value: string): any;
        left(): string;
        left(value: string | number): any;
        letter_spacing(): string;
        letter_spacing(value: string | number): any;
        line_break(): string;
        line_break(value: string): any;
        line_height(): string;
        line_height(value: string | number): any;
        list_style(): string;
        list_style(value: string): any;
        list_style_image(): string;
        list_style_image(value: string): any;
        list_style_position(): string;
        list_style_position(value: string): any;
        list_style_type(): string;
        list_style_type(value: string): any;
        margin_block(): string;
        margin_block(value: string | number): any;
        margin_block_end(): string;
        margin_block_end(value: string | number): any;
        margin_block_start(): string;
        margin_block_start(value: string | number): any;
        margin_inline(): string;
        margin_inline(value: string | number): any;
        margin_inline_end(): string;
        margin_inline_end(value: string | number): any;
        margin_inline_start(): string;
        margin_inline_start(value: string | number): any;
        mask(): string;
        mask(value: string): any;
        mask_clip(): string;
        mask_clip(value: string): any;
        mask_composite(): string;
        mask_composite(value: string): any;
        mask_image(): string;
        mask_image(value: string): any;
        mask_mode(): string;
        mask_mode(value: string): any;
        mask_origin(): string;
        mask_origin(value: string): any;
        mask_position(): string;
        mask_position(value: string): any;
        mask_repeat(): string;
        mask_repeat(value: string): any;
        mask_size(): string;
        mask_size(value: string | number): any;
        mask_type(): string;
        mask_type(value: string): any;
        max_height(): number | string;
        max_height(value: string | number): any;
        max_width(): number | string;
        max_width(value: string | number): any;
        max_block_size(): string;
        max_block_size(value: string | number): any;
        max_inline_size(): string | number;
        max_inline_size(value: string | number): any;
        min_block_size(): null | number;
        min_block_size(value: number): any;
        min_inline_size(): string;
        min_inline_size(value: string | number): any;
        mix_blend_mode(): string;
        mix_blend_mode(value: string): any;
        object_fit(): string;
        object_fit(value: string): any;
        object_position(): string;
        object_position(value: string): any;
        offset(): string;
        offset(value: string | number): any;
        offset_anchor(): string;
        offset_anchor(value: string): any;
        offset_distance(): string;
        offset_distance(value: string | number): any;
        offset_path(): string;
        offset_path(value: string): any;
        offset_rotate(): string;
        offset_rotate(value: string | number): any;
        order(): string;
        order(value: string | number): any;
        orphans(): null | number;
        orphans(value: number): any;
        outline(): string;
        outline(value: string): any;
        outline_color(): string;
        outline_color(value: string): any;
        outline_offset(): string;
        outline_offset(value: string | number): any;
        outline_style(): string;
        outline_style(value: string): any;
        outline_width(): string;
        outline_width(value: string | number): any;
        overflow(): string;
        overflow(value: string): any;
        overflow_anchor(): string;
        overflow_anchor(value: string): any;
        overflow_wrap(): string;
        overflow_wrap(value: string): any;
        overflow_x(): string;
        overflow_x(value: string): any;
        overflow_y(): string;
        overflow_y(value: string): any;
        overscroll_behavior(): string;
        overscroll_behavior(value: string): any;
        overscroll_behavior_block(): string;
        overscroll_behavior_block(value: string): any;
        overscroll_behavior_inline(): string;
        overscroll_behavior_inline(value: string): any;
        overscroll_behavior_x(): string;
        overscroll_behavior_x(value: string): any;
        overscroll_behavior_y(): string;
        overscroll_behavior_y(value: string): any;
        padding_block(): string | undefined;
        padding_block(value: string | number): any;
        padding_block_end(): string;
        padding_block_end(value: string | number): any;
        padding_block_start(): string;
        padding_block_start(value: string | number): any;
        padding_inline(): string;
        padding_inline(value: string | number): any;
        padding_inline_end(): string;
        padding_inline_end(value: string | number): any;
        padding_inline_start(): string;
        padding_inline_start(value: string | number): any;
        page_break_after(): string;
        page_break_after(value: string): any;
        page_break_before(): string;
        page_break_before(value: string): any;
        page_break_inside(): string;
        page_break_inside(value: string): any;
        paint_order(): string;
        paint_order(value: string): any;
        perspective(): string;
        perspective(value: string | number): any;
        perspective_origin(): string;
        perspective_origin(value: string): any;
        place_content(): string;
        place_content(value: string): any;
        place_items(): string;
        place_items(value: string): any;
        place_self(): string;
        place_self(value: string): any;
        pointer_events(): string;
        pointer_events(value: string): any;
        quotes(): string;
        quotes(value: string): any;
        resize(): string;
        resize(value: string): any;
        right(): string;
        right(value: number | string): any;
        row_gap(): string;
        row_gap(value: string | number): any;
        scale(): null | number;
        scale(value: number): any;
        scroll_behavior(): string;
        scroll_behavior(value: string): any;
        scroll_margin(): string;
        scroll_margin(value: string | number): any;
        scroll_margin_block(): string;
        scroll_margin_block(value: string | number): any;
        scroll_margin_block_end(): string;
        scroll_margin_block_end(value: string | number): any;
        scroll_margin_block_start(): string;
        scroll_margin_block_start(value: string | number): any;
        scroll_margin_bottom(): string;
        scroll_margin_bottom(value: string | number): any;
        scroll_margin_inline(): string;
        scroll_margin_inline(value: string | number): any;
        scroll_margin_inline_end(): string;
        scroll_margin_inline_end(value: string | number): any;
        scroll_margin_inline_start(): string;
        scroll_margin_inline_start(value: string): any;
        scroll_margin_left(): string;
        scroll_margin_left(value: string | number): any;
        scroll_margin_right(): string;
        scroll_margin_right(value: string | number): any;
        scroll_margin_top(): string;
        scroll_margin_top(value: string | number): any;
        scroll_padding(): string;
        scroll_padding(value: string | number): any;
        scroll_padding_block(): string;
        scroll_padding_block(value: string | number): any;
        scroll_padding_block_end(): string;
        scroll_padding_block_end(value: string | number): any;
        scroll_padding_block_start(): string;
        scroll_padding_block_start(value: string | number): any;
        scroll_padding_bottom(): string;
        scroll_padding_bottom(value: string | number): any;
        scroll_padding_inline(): string;
        scroll_padding_inline(value: string | number): any;
        scroll_padding_inline_end(): string;
        scroll_padding_inline_end(value: string | number): any;
        scroll_padding_inline_start(): string;
        scroll_padding_inline_start(value: string | number): any;
        scroll_padding_left(): string;
        scroll_padding_left(value: string | number): any;
        scroll_padding_right(): string;
        scroll_padding_right(value: string | number): any;
        scroll_padding_top(): string;
        scroll_padding_top(value: string | number): any;
        scroll_snap_align(): string;
        scroll_snap_align(value: string): any;
        scroll_snap_stop(): string;
        scroll_snap_stop(value: string): any;
        scroll_snap_type(): string;
        scroll_snap_type(value: string): any;
        scrollbar_color(): string;
        scrollbar_color(value: string): any;
        tab_size(): string;
        tab_size(value: string | number): any;
        table_layout(): string;
        table_layout(value: string): any;
        text_align(): string;
        text_align(value: string): any;
        text_align_last(): string;
        text_align_last(value: string): any;
        text_combine_upright(): string;
        text_combine_upright(value: string): any;
        text_decoration(): string;
        text_decoration(value: string): any;
        text_decoration_color(): string;
        text_decoration_color(value: string): any;
        text_decoration_line(): string;
        text_decoration_line(value: string): any;
        text_decoration_style(): string;
        text_decoration_style(value: string): any;
        text_decoration_thickness(): string;
        text_decoration_thickness(value: string | number): any;
        text_emphasis(): string;
        text_emphasis(value: string): any;
        text_indent(): string;
        text_indent(value: string | number): any;
        text_justify(): string;
        text_justify(value: string): any;
        text_orientation(): string;
        text_orientation(value: string): any;
        text_overflow(): string;
        text_overflow(value: string): any;
        text_shadow(): string;
        text_shadow(value: string): any;
        text_transform(): string;
        text_transform(value: string): any;
        text_underline_position(): string;
        text_underline_position(value: string): any;
        top(): string;
        top(value: string | number): any;
        transform(): string;
        transform(value: string): any;
        transform_origin(): string;
        transform_origin(value: string): any;
        transform_style(): string;
        transform_style(value: string): any;
        transition(): string;
        transition(value: string): any;
        transition_delay(): string;
        transition_delay(value: string | number): any;
        transition_duration(): string | undefined;
        transition_duration(value: string | number): any;
        transition_property(): string;
        transition_property(value: string): any;
        transition_timing_function(): string;
        transition_timing_function(value: string): any;
        translate(): string;
        translate(value: string | number): any;
        unicode_bidi(): string;
        unicode_bidi(value: string): any;
        user_select(): string;
        user_select(value: string): any;
        visibility(): string;
        visibility(value: string): any;
        white_space(): string;
        white_space(value: string): any;
        widows(): string;
        widows(value: string | number): any;
        word_break(): string;
        word_break(value: string): any;
        word_spacing(): string;
        word_spacing(value: string | number): any;
        word_wrap(): string;
        word_wrap(value: string): any;
        writing_mode(): string;
        writing_mode(value: string): any;
        focusable(): boolean;
        focusable(value: boolean): any;
        alt(): string;
        alt(value: string): any;
        readonly(): boolean;
        readonly(value: boolean): any;
        download(): string;
        download(value: string): any;
        accept(): string;
        accept(value: string): any;
        accept_charset(): string;
        accept_charset(value: string): any;
        action(): string;
        action(value: string): any;
        async(): boolean;
        async(value: boolean): any;
        auto_complete(): string;
        auto_complete(value: string): any;
        auto_focus(): string;
        auto_focus(value: string): any;
        auto_play(): boolean;
        auto_play(value: boolean): any;
        charset(): string;
        charset(value: string): any;
        checked(): boolean;
        checked(value: boolean): any;
        cite(): string;
        cite(value: string): any;
        cols(): null | number;
        cols(value: number): any;
        colspan(): null | number;
        colspan(value: number): any;
        content_editable(): boolean;
        content_editable(value: boolean): any;
        controls(): boolean;
        controls(value: boolean): any;
        coords(): string;
        coords(value: string): any;
        data(): string;
        data(value: string | number): any;
        datetime(): string;
        datetime(value: string | number): any;
        default(): string;
        default(value: string | number): any;
        defer(): string;
        defer(value: string): any;
        dir(): string;
        dir(value: string): any;
        dirname(): string;
        dirname(value: string): any;
        disabled(): boolean;
        disabled(value: boolean): any;
        draggable(): boolean;
        draggable(value: boolean): any;
        enctype(): string;
        enctype(value: string): any;
        for(): string;
        for(value: string): any;
        form(): string;
        form(value: string): any;
        form_action(): string;
        form_action(value: string): any;
        headers(): string;
        headers(value: string): any;
        high(): string;
        high(value: string | number): any;
        href(): string;
        href(value: string): any;
        href_lang(): string;
        href_lang(value: string): any;
        http_equiv(): string;
        http_equiv(value: string | number): any;
        id(): string;
        id(value: string): any;
        is_map(): boolean;
        is_map(value: boolean): any;
        kind(): string;
        kind(value: string): any;
        label(): string;
        label(value: string): any;
        lang(): string;
        lang(value: string): any;
        list(): string;
        list(value: string): any;
        loop(): boolean;
        loop(value: boolean): any;
        low(): string;
        low(value: string | number): any;
        max(): string;
        max(value: string | number): any;
        max_length(): null | number;
        max_length(value: number): any;
        method(): string;
        method(value: string): any;
        min(): string;
        min(value: string | number): any;
        multiple(): string;
        multiple(value: string | boolean): any;
        muted(): boolean;
        muted(value: boolean): any;
        no_validate(): boolean;
        no_validate(value: boolean): any;
        open(): boolean;
        open(value: boolean): any;
        optimum(): null | number;
        optimum(value: number): any;
        pattern(): string;
        pattern(value: string): any;
        placeholder(): string;
        placeholder(value: string): any;
        poster(): string;
        poster(value: string): any;
        preload(): string;
        preload(value: string): any;
        rel(): string;
        rel(value: string): any;
        required(): boolean;
        required(value: boolean): any;
        reversed(): boolean;
        reversed(value: boolean): any;
        rows(): null | number;
        rows(value: number): any;
        row_span(): null | number;
        row_span(value: number): any;
        sandbox(): string;
        sandbox(value: string): any;
        scope(): string;
        scope(value: string): any;
        selected(): boolean;
        selected(value: boolean): any;
        shape(): string;
        shape(value: string): any;
        size(): null | number;
        size(value: number): any;
        sizes(): string;
        sizes(value: string | number): any;
        span(): null | number;
        span(value: number): any;
        spell_check(): boolean;
        spell_check(value: boolean): any;
        src(): string;
        src(value: string): any;
        src_doc(): string;
        src_doc(value: string): any;
        src_lang(): string;
        src_lang(value: string): any;
        rrsrc_set(): string;
        rrsrc_set(value: string): any;
        start(): null | number;
        start(value: number): any;
        step(): null | number;
        step(value: number): any;
        tab_index(): null | number;
        tab_index(value: number): any;
        target(): string;
        target(value: string): any;
        title(): string;
        title(value: string): any;
        type(): string;
        type(value: string): any;
        use_map(): string;
        use_map(value: string): any;
        value(): string;
        value(value: string | number): any;
        on_blur(): Function | null;
        on_blur(callback: (element: any, event: Event) => void): any;
        on_change(): Function | null;
        on_change(callback: (element: any, event: Event) => void): any;
        on_focus(): Function | null;
        on_focus(callback: (element: any, event: Event) => void): any;
        on_input(): Function | null;
        on_input(callback: (element: any, event: Event) => void): any;
        on_before_input(): Function | null;
        on_before_input(callback: (element: any, event: Event) => void): any;
        on_invalid(): Function | null;
        on_invalid(callback: (element: any, event: Event) => void): any;
        on_reset(): Function | null;
        on_reset(callback: (element: any, event: Event) => void): any;
        on_select(): Function | null;
        on_select(callback: (element: any, event: Event) => void): any;
        on_submit(): Function | null;
        on_submit(callback: (element: any, event: Event) => void): any;
        on_key_down(): Function | null;
        on_key_down(callback: (element: any, event: KeyboardEvent) => void): any;
        on_key_press(): Function | null;
        on_key_press(callback: (element: any, event: KeyboardEvent) => void): any;
        on_key_up(): Function | null;
        on_key_up(callback: (element: any, event: KeyboardEvent) => void): any;
        on_dbl_click(): Function | null;
        on_dbl_click(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_down(): Function | null;
        on_mouse_down(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_move(): Function | null;
        on_mouse_move(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_out(): Function | null;
        on_mouse_out(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_over(): Function | null;
        on_mouse_over(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_up(): Function | null;
        on_mouse_up(callback: (element: any, event: MouseEvent) => void): any;
        on_wheel(): Function | null;
        on_wheel(callback: (element: any, event: WheelEvent) => void): any;
        on_drag(): Function | null;
        on_drag(callback: (element: any, event: DragEvent) => void): any;
        on_drag_end(): Function | null;
        on_drag_end(callback: (element: any, event: DragEvent) => void): any;
        on_drag_enter(): Function | null;
        on_drag_enter(callback: (element: any, event: DragEvent) => void): any;
        on_drag_leave(): Function | null;
        on_drag_leave(callback: (element: any, event: DragEvent) => void): any;
        on_drag_over(): Function | null;
        on_drag_over(callback: (element: any, event: DragEvent) => void): any;
        on_drag_start(): Function | null;
        on_drag_start(callback: (element: any, event: DragEvent) => void): any;
        on_drop(): Function | null;
        on_drop(callback: (element: any, event: Event) => void): any;
        on_copy(): Function | null;
        on_copy(callback: (element: any, event: Event) => void): any;
        on_cut(): Function | null;
        on_cut(callback: (element: any, event: Event) => void): any;
        on_paste(): Function | null;
        on_paste(callback: (element: any, event: Event) => void): any;
        on_abort(): Function | null;
        on_abort(callback: (element: any, event: Event) => void): any;
        on_canplay(): Function | null;
        on_canplay(callback: (element: any, event: Event) => void): any;
        on_canplay_through(): Function | null;
        on_canplay_through(callback: (element: any, event: Event) => void): any;
        on_cue_change(): Function | null;
        on_cue_change(callback: (element: any, event: Event) => void): any;
        on_duration_change(): Function | null;
        on_duration_change(callback: (element: any, event: Event) => void): any;
        on_emptied(): Function | null;
        on_emptied(callback: (element: any, event: Event) => void): any;
        on_ended(): Function | null;
        on_ended(callback: (element: any, event: Event) => void): any;
        on_error(): Function | null;
        on_error(callback: (element: any, error: string | Event) => void): any;
        on_loaded_data(): Function | null;
        on_loaded_data(callback: (element: any, event: Event) => void): any;
        on_loaded_metadata(): Function | null;
        on_loaded_metadata(callback: (element: any, event: Event) => void): any;
        on_load_start(): Function | null;
        on_load_start(callback: (element: any, event: Event) => void): any;
        on_pause(): Function | null;
        on_pause(callback: (element: any, event: Event) => void): any;
        on_play(): Function | null;
        on_play(callback: (element: any, event: Event) => void): any;
        on_playing(): Function | null;
        on_playing(callback: (element: any, time: any) => void): any;
        on_progress(): Function | null;
        on_progress(callback: ((element: any, event: Event) => void) | null): any;
        on_rate_change(): Function | null;
        on_rate_change(callback: (element: any, event: Event) => void): any;
        on_seeked(): Function | null;
        on_seeked(callback: (element: any, time: any) => void): any;
        on_seeking(): Function | null;
        on_seeking(callback: (element: any, time: any) => void): any;
        on_stalled(): Function | null;
        on_stalled(callback: (element: any, event: Event) => void): any;
        on_suspend(): Function | null;
        on_suspend(callback: Function): any;
        on_time_update(): Function | null;
        on_time_update(callback: (element: any, event: Event) => void): any;
        on_volume_change(): Function | null;
        on_volume_change(callback: (element: any, event: Event) => void): any;
        on_waiting(): Function | null;
        on_waiting(callback: (element: any, time: any) => void): any;
        on_toggle(): Function | null;
        on_toggle(callback: (element: any, event: Event) => void): any;
    };
    [x: string]: any;
    element_tag: string;
    default_style: Record<string, any>;
    default_attributes: Record<string, any>;
    default_events: Record<string, any>;
};
export declare class AnchorVStackElement extends AnchorVStackElement_base {
    constructor(...children: any[]);
}
export declare const AnchorVStack: (...args: any[]) => any;
declare const HStackElement_base: {
    new (): {
        [x: string]: any;
        __is_velement: boolean;
        rendered: boolean;
        element_type: string;
        base_element_type: string;
        remove_focus: any;
        _v_children: any[];
        _element_display: string;
        _is_connected: boolean;
        _on_append_callback?: Function;
        _assign_to_parent_as?: string;
        _parent?: any;
        _side_by_side_basis?: number;
        _animate_timeout?: ReturnType<typeof setTimeout>;
        _disabled: boolean;
        _timeouts: Record<string, any>;
        _on_window_resize_timer: any;
        _abs_parent: any;
        _pseudo_stylesheets: Record<string, any>;
        _on_resize_rule_evals: Record<string, any>;
        _observing_on_resize: boolean;
        _observing_on_render: boolean;
        _on_resize_callbacks: ((element: any) => void)[];
        _on_render_callbacks: ((element: any) => void)[];
        _on_theme_updates: ((element: any) => void)[];
        _on_mouse_leave_callback: (element: any, event: MouseEvent) => void;
        _on_mouse_enter_callback: (element: any, event: MouseEvent) => void;
        _on_shortcut_time: number;
        _on_shortcut_key: string;
        _on_shortcut_keycode: number;
        _on_keypress_set: boolean;
        _on_enter_callback?: ((element: any, event: KeyboardEvent) => void) | undefined;
        _on_escape_callback?: ((element: any, event: KeyboardEvent) => void) | undefined;
        _on_appear_callbacks: Record<string, any>[];
        _context_menu?: import("./context_menu").ContextMenuElement;
        _media_queries: {
            [key: string]: {
                list: MediaQueryList;
                callback: (query: MediaQueryList) => void;
            };
        };
        connectedCallback(): void;
        clone(clone_children?: boolean): any;
        pad_numeric(value: number | string | null, padding?: string): string;
        pad_percentage(value: number, padding?: string): string;
        edit_filter_wrapper(filter: string | null, type: string, to?: string | null): string;
        toggle_filter_wrapper(filter: string | null, type: string, to?: string | null): string;
        _convert_px_to_number_type(value: any, def?: number | null): any;
        _try_parse_float(value: any, def?: number | null): any;
        append(...children: any[]): any;
        zstack_append(...children: any[]): any;
        append_to(parent: any): any;
        append_children_to(parent: any, on_append_callback?: Function): any;
        remove_child(child: any): any;
        remove_children(): any;
        child(index: number): any;
        get(index: number): any | undefined;
        text(): string;
        text(value: string): any;
        width(): string | number;
        width(value: string | number, check_attribute?: boolean): any;
        fixed_width(): string | number;
        fixed_width(value: string | number): any;
        height(): string | number;
        height(value: string | number, check_attribute?: boolean): any;
        fixed_height(): string | number;
        fixed_height(value: string | number): any;
        min_height(): string | number;
        min_height(value: string | number): any;
        min_width(): string | number;
        min_width(value: string | number): any;
        width_by_columns(columns: number): any;
        offset_width(): number;
        offset_height(): number;
        client_width(): number;
        client_height(): number;
        x(): number;
        y(): number;
        frame(width: string | number, height: string | number): any;
        min_frame(width: string | number, height: string | number): any;
        max_frame(width: string | number, height: string | number): any;
        fixed_frame(width: string | number, height: string | number): any;
        get_frame_while_hidden(): {
            width: number;
            height: number;
        };
        padding(): string;
        padding(value: string | number): any;
        padding(top_bottom: string | number, left_right: string | number): any;
        padding(top: string | number, right: string | number, bottom: string | number, left: string | number): any;
        padding_bottom(): number;
        padding_bottom(value: string | number): any;
        padding_left(): number;
        padding_left(value: string | number): any;
        padding_right(): number;
        padding_right(value: string | number): any;
        padding_top(): number;
        padding_top(value: string | number): any;
        margin(): string | undefined;
        margin(value: string | number): any;
        margin(value: string | number, value2: string | number): any;
        margin(value: string | number, value2: string | number, value3: string | number, value4: string | number): any;
        margin_bottom(): number;
        margin_bottom(value: string | number): any;
        margin_left(): number;
        margin_left(value: string | number): any;
        margin_right(): number;
        margin_right(value: string | number): any;
        margin_top(): number;
        margin_top(value: string | number): any;
        position(): string | undefined;
        position(value: number | string): any;
        position(top?: number | string, right?: number | string, bottom?: number | string, left?: number | string): any;
        stretch(value: boolean): any;
        wrap(value: boolean | string): any;
        z_index(value: number): any;
        side_by_side(options: {
            columns?: number;
            hspacing?: number;
            vspacing?: number;
            stretch?: boolean;
            hide_dividers?: boolean;
        }): any;
        side_by_side_basis(): number | undefined;
        side_by_side_basis(basis: number | false): any;
        ellipsis_overflow(): boolean;
        ellipsis_overflow(to: boolean, after_lines?: number | null): any;
        align(): string;
        align(value: string): any;
        leading(): any;
        center(): any;
        trailing(): any;
        align_vertical(): string;
        align_vertical(value: string): any;
        leading_vertical(): any;
        center_vertical(only_on_no_overflow?: boolean): any;
        trailing_vertical(): any;
        align_text(value: string): any;
        text_leading(): any;
        text_center(): any;
        text_trailing(): any;
        align_height(): any;
        text_wrap(): string;
        text_wrap(value: string): any;
        line_clamp(): string;
        line_clamp(value: string): any;
        box_orient(): string;
        box_orient(value: string): any;
        color(): string;
        color(value: string | import("./gradient").GradientType): any;
        border(): string;
        border(value: string): any;
        border(width: string | number, color: string): any;
        border(width: string | number, style: string, color: string): any;
        border_top(): string;
        border_top(value: string | number): any;
        border_top(width: string | number, color: string): any;
        border_top(width: string | number, style: string, color: string): any;
        border_bottom(): string;
        border_bottom(value: string): any;
        border_bottom(width: string | number, color: string): any;
        border_bottom(width: string | number, style: string, color: string): any;
        border_right(): string;
        border_right(value: string): any;
        border_right(width: string | number, color: string): any;
        border_right(width: string | number, style: string, color: string): any;
        border_left(): string;
        border_left(value: string): any;
        border_left(width: string | number, color: string): any;
        border_left(width: string | number, style: string, color: string): any;
        shadow(): string;
        shadow(value: number): any;
        shadow(value1: number, value2: number, value3: number, value4: string): any;
        drop_shadow(): string;
        drop_shadow(value: number): any;
        drop_shadow(value1: number, value2: number, value3: number, value4: string): any;
        greyscale(): string;
        greyscale(value: number): any;
        opacity(): number;
        opacity(value: number): any;
        toggle_opacity(value: number): any;
        blur(): string;
        blur(value: number): any;
        toggle_blur(value?: number): any;
        background_blur(): string;
        background_blur(value: number | null): any;
        toggle_background_blur(value?: number): any;
        brightness(): string;
        brightness(value: number): any;
        toggle_brightness(value?: number): any;
        background_brightness(): string;
        background_brightness(value: number): any;
        toggle_background_brightness(value?: number): any;
        rotate(): string;
        rotate(value: number | string): any;
        delay(value: string | number): any;
        duration(value: string | number): any;
        background(): string;
        background(value: string): any;
        scale_font_size(scale?: number): any;
        display(): string;
        display(value: string): any;
        hide(): any;
        show(): any;
        is_hidden(): boolean;
        is_visible(): boolean;
        toggle_visibility(): any;
        inner_html(): string;
        inner_html(value: string): any;
        outer_html(): string;
        outer_html(value: string): any;
        styles(): Record<string, string>;
        styles(css_attr: Record<string, any>): any;
        attr(key: string): null | string;
        attr(key: string, value: string | number | null): any;
        attrs(html_attr: Record<string, string | number | boolean>): any;
        event(key: string): any;
        event(key: string, value: any): any;
        events(html_events: {
            [key: string]: EventListener;
        }): any;
        class(): string;
        class(value: string): any;
        toggle_class(name: string): any;
        remove_class(name: string): any;
        remove_classes(): any;
        hover_brightness(): boolean;
        hover_brightness(mouse_down_brightness: boolean | number, mouse_over_brightness: number): any;
        text_width(): number;
        text_width(text: string): number;
        frame_mode(frame_mode: import("./frame_modes").FrameNodesType): any;
        frame_mode(frame_modes: import("./frame_modes").FrameModesType, frame_mode: import("./frame_modes").FrameNodesType): any;
        media(media_query: string, true_handler?: (element: any) => void, false_handler?: ((element: any) => void)): any;
        remove_media(media_query: string): any;
        remove_medias(): any;
        remove_all_media(): any;
        default_animate(...args: any[]): any;
        animate(options: {
            keyframes: Array<any>;
            delay: number;
            duration: number;
            repeat?: boolean;
            persistent?: boolean;
            on_finish?: ((element: any) => void) | null;
            easing?: string;
        }): any;
        stop_animation(): any;
        slide_out(options: {
            direction: string;
            distance: number;
            duration: number;
            opacity?: boolean;
            easing?: string;
            hide?: boolean;
            remove?: boolean;
            display?: string;
            _slide_in?: boolean;
        }): Promise<void>;
        slide_in({ direction, distance, duration, opacity, easing, display, }: {
            direction?: string;
            distance?: number;
            duration?: number;
            opacity?: boolean;
            easing?: string;
            display?: string;
        }): Promise<any>;
        dropdown_animation({ distance, duration, opacity_duration, total_duration, delay, start_delay, easing, }?: {
            distance?: string;
            duration?: number;
            opacity_duration?: number;
            total_duration?: number;
            delay?: number;
            start_delay?: number;
            easing?: string;
        }): Promise<void>;
        increment_number_animation({ start, end, duration, total_duration, delay, prefix, suffix, }?: {
            start?: number;
            end?: number;
            duration?: number;
            total_duration?: number;
            delay?: number;
            prefix?: string;
            suffix?: string;
        }): Promise<void>;
        on_event(id: string, callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_event(id: string, callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_events(id: string): any;
        timeout(delay: number, callback: (instance: any) => void, options?: {
            id?: string;
            debounce?: boolean;
        } | null): any;
        clear_timeout(id: string | number): any;
        disable(): any;
        enable(): any;
        on_click(): null | Function;
        on_click(simulate_href: string | null, callback: Function): any;
        on_click(callback?: Function): any;
        on_click_redirect(url: string): any;
        on_scroll(): (EventListener | null);
        on_scroll(opts_or_callback: Function | {
            callback: (element: any, event: Event) => void;
            delay?: number;
        }): any;
        on_window_resize(): null | Function;
        on_window_resize(opts: Function | {
            callback?: Function;
            once?: boolean;
            delay?: number;
        }): any;
        on_attachment_drop(options: {
            callback: (args: {
                name: string;
                path: string;
                is_dir: boolean;
                data: any;
                compressed: boolean;
                file: File;
                size: number;
            }) => void;
            read?: boolean;
            compress?: boolean;
            on_start?: (event: DragEvent) => void;
        }): any;
        on_appear(callback: (element: any, options: {
            scroll_direction: string;
        }) => void): any;
        on_appear(options: {
            callback: (element: any, options: {
                scroll_direction: string;
            }) => void;
            repeat?: boolean;
            threshold?: number | null;
        }): any;
        on_disappear(callback_or_opts?: {
            callback?: (element: any) => void;
            repeat?: boolean;
        } | ((element: any) => void) | undefined): any;
        on_enter(callback: (element: any, event: KeyboardEvent) => void): any;
        on_escape(callback: (element: any, event: KeyboardEvent) => void): any;
        on_theme_update(): ((element: any) => void)[];
        on_theme_update(callback: (element: any) => void): any;
        remove_on_theme_update(callback: (element: any) => void): any;
        remove_on_theme_updates(): any;
        on_render(): ((element: any) => void)[];
        on_render(callback: (element: any) => void): any;
        remove_on_render(callback: (element: any) => void): any;
        remove_on_renders(): any;
        is_rendered(): boolean;
        on_load(callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_load(callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_loads(): any;
        on_resize(): ((element: any) => void)[];
        on_resize(callback: (element: any) => void): any;
        remove_on_resize(callback: (element: any) => void): any;
        remove_on_resizes(): any;
        on_resize_rule(evaluation: (element: any) => boolean, on_true?: ((element: any) => void) | undefined, on_false?: ((element: any) => void) | undefined): any;
        on_shortcut(shortcuts?: {
            match?: (event: KeyboardEvent, key: string, shortcut: any) => boolean;
            key?: string;
            keys?: string[];
            keycode?: number;
            keycodes?: number[];
            or?: boolean;
            duration?: number;
            shift?: boolean;
            alt?: boolean;
            ctrl?: boolean;
            allow_other_modifiers?: boolean;
            callback: (element: any, event: KeyboardEvent) => void;
        }[]): any;
        on_context_menu(): import("./context_menu").ContextMenuElement | Function | undefined;
        on_context_menu(callback: Function | import("./context_menu").ContextMenuElement | any[]): any;
        on_mouse_enter(): (element: any, event: MouseEvent) => void;
        on_mouse_enter(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_leave(): (element: any, event: MouseEvent) => void;
        on_mouse_leave(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_over_out(mouse_over: (element: any, event: MouseEvent) => void, mouse_out: (element: any, event: MouseEvent) => void): any;
        first_child(): Node | null;
        last_child(): ChildNode | null;
        iterate(start: number | ((child: any, index: number) => any), end?: number, handler?: (child: any, index: number) => any): any;
        iterate_nodes(start: number | ((node: any, index: number) => any), end?: number, handler?: (node: any, index: number) => any): any;
        set_default(Type?: any): any;
        assign(name: string, value: any): any;
        extend(obj: object): any;
        select(overwrite?: boolean): any;
        is_scrollable(): boolean;
        is_scrollable_x(): boolean;
        is_scrollable_y(): boolean;
        wait_till_children_rendered(timeout?: number): Promise<void>;
        pseudo(type: string, node: any): any;
        remove_pseudo(node: any): any;
        remove_pseudos(): any;
        pseudo_on_hover(type: string, node: any, set_defaults?: boolean): any;
        parent(): HTMLElement | any | null;
        parent(value: any): any;
        abs_parent(): any;
        abs_parent(value: any): any;
        assign_to_parent_as(name: string): any;
        get_y_offset_from_parent(parent: HTMLElement): number | null;
        absolute_y_offset(): number;
        absolute_x_offset(): number;
        exec(callback: (element: any) => void): any;
        is_child(target: any): boolean;
        is_nested_child(target: any, stop_node?: any): boolean;
        toString(): string;
        accent_color(): string;
        accent_color(value: string): any;
        align_content(): string;
        align_content(value: string): any;
        align_items(): string;
        align_items(value: string): any;
        align_self(): string;
        align_self(value: string): any;
        all(): string;
        all(value: string): any;
        animation(): string;
        animation(value: string): any;
        animation_delay(): string;
        animation_delay(value: string | number): any;
        animation_direction(): string;
        animation_direction(value: string): any;
        animation_duration(): string;
        animation_duration(value: string | number): any;
        animation_fill_mode(): string;
        animation_fill_mode(value: string): any;
        animation_iteration_count(): string;
        animation_iteration_count(value: string | number): any;
        animation_name(): string;
        animation_name(value: string): any;
        animation_play_state(): string;
        animation_play_state(value: string): any;
        animation_timing_function(): string;
        animation_timing_function(value: string): any;
        aspect_ratio(): string;
        aspect_ratio(value: string): any;
        backdrop_filter(): string;
        backdrop_filter(value: string): any;
        backface_visibility(): string;
        backface_visibility(value: string): any;
        background_attachment(): string;
        background_attachment(value: string): any;
        background_blend_mode(): string;
        background_blend_mode(value: string): any;
        background_clip(): string;
        background_clip(value: string): any;
        background_color(): string;
        background_color(value: string): any;
        background_image(): string;
        background_image(value: string): any;
        background_origin(): string;
        background_origin(value: string): any;
        background_position(): string;
        background_position(value: string): any;
        background_position_x(): string;
        background_position_x(value: string | number): any;
        background_position_y(): string;
        background_position_y(value: string | number): any;
        background_repeat(): string;
        background_repeat(value: string): any;
        background_size(): string;
        background_size(value: string | number): any;
        block_size(): string;
        block_size(value: string | number): any;
        border_block(): string;
        border_block(value: string): string | any;
        border_block_color(): string;
        border_block_color(value: string): any;
        border_block_end_color(): string;
        border_block_end_color(value: string): any;
        border_block_end_style(): string;
        border_block_end_style(value: string): any;
        border_block_end_width(): string;
        border_block_end_width(value: string | number): any;
        border_block_start_color(): string;
        border_block_start_color(value: string): any;
        border_block_start_style(): string;
        border_block_start_style(value: string): any;
        border_block_start_width(): string;
        border_block_start_width(value: string | number): any;
        border_block_style(): string;
        border_block_style(value: string): any;
        border_block_width(): string;
        border_block_width(value: string | number): any;
        border_bottom_color(): string;
        border_bottom_color(value: string): any;
        border_bottom_left_radius(): string;
        border_bottom_left_radius(value: string | number): any;
        border_bottom_right_radius(): string;
        border_bottom_right_radius(value: string | number): any;
        border_bottom_style(): string;
        border_bottom_style(value: string): any;
        border_bottom_width(): string;
        border_bottom_width(value: string | number): any;
        border_collapse(): string;
        border_collapse(value: string): any;
        border_color(): string;
        border_color(value: string): any;
        border_image(): string;
        border_image(value: string): any;
        border_image_outset(): string;
        border_image_outset(value: string | number): any;
        border_image_repeat(): string;
        border_image_repeat(value: string): any;
        border_image_slice(): string;
        border_image_slice(value: string | number): any;
        border_image_source(): string;
        border_image_source(value: string): any;
        border_image_width(): string;
        border_image_width(value: string | number): any;
        border_inline(): string;
        border_inline(value: string | number): any;
        border_inline_color(): string;
        border_inline_color(value: string): any;
        border_inline_end_color(): string;
        border_inline_end_color(value: string): any;
        border_inline_end_style(): string;
        border_inline_end_style(value: string): any;
        border_inline_end_width(): string;
        border_inline_end_width(value: string | number): any;
        border_inline_start_color(): string;
        border_inline_start_color(value: string): any;
        border_inline_start_style(): string;
        border_inline_start_style(value: string): any;
        border_inline_start_width(): string;
        border_inline_start_width(value: string | number): any;
        border_inline_style(): string;
        border_inline_style(value: string): any;
        border_inline_width(): string;
        border_inline_width(value: string | number): any;
        border_left_color(): string;
        border_left_color(value: string): any;
        border_left_style(): string;
        border_left_style(value: string): any;
        border_left_width(): string;
        border_left_width(value: string | number): any;
        border_radius(): string;
        border_radius(value: string | number): any;
        border_right_color(): string;
        border_right_color(value: string): any;
        border_right_style(): string;
        border_right_style(value: string): any;
        border_right_width(): string;
        border_right_width(value: string | number): any;
        border_spacing(): string;
        border_spacing(value: string | number): any;
        border_style(): string;
        border_style(value: string): any;
        border_top_color(): string;
        border_top_color(value: string): any;
        border_top_left_radius(): string;
        border_top_left_radius(value: string | number): any;
        border_top_right_radius(): string;
        border_top_right_radius(value: string | number): any;
        border_top_style(): string;
        border_top_style(value: string): any;
        border_top_width(): string;
        border_top_width(value: string | number): any;
        border_width(): string;
        border_width(value: string | number): any;
        bottom(): string;
        bottom(value: string | number): any;
        box_decoration_break(): string;
        box_decoration_break(value: string): any;
        box_reflect(): string;
        box_reflect(value: string): any;
        box_shadow(): string;
        box_shadow(value: string): any;
        box_sizing(): string;
        box_sizing(value: string): any;
        break_after(): string | any;
        break_after(value: string): any;
        break_before(): string;
        break_before(value: string): any;
        break_inside(): string;
        break_inside(value: string): any;
        caption_side(): string;
        caption_side(value: string): any;
        caret_color(): string;
        caret_color(value: string): any;
        clear(): string;
        clear(value: string): any;
        clip(): string;
        clip(value: string): any;
        column_count(): null | number;
        column_count(value: string | number): any;
        column_fill(): string;
        column_fill(value: string): any;
        column_gap(): string;
        column_gap(value: string | number): any;
        column_rule(): string;
        column_rule(value: string): any;
        column_rule_color(): string;
        column_rule_color(value: string): any;
        column_rule_style(): string;
        column_rule_style(value: string): any;
        column_rule_width(): string;
        column_rule_width(value: string | number): any;
        column_span(): null | number;
        column_span(value: number): any;
        column_width(): string;
        column_width(value: string | number): any;
        columns(): string;
        columns(value: string | number): any;
        content(): string;
        content(value: string | number): any;
        counter_increment(): string;
        counter_increment(value: string | number): any;
        counter_reset(): string;
        counter_reset(value: string): any;
        cursor(): string;
        cursor(value: string): any;
        direction(): string;
        direction(value: string): any;
        empty_cells(): string;
        empty_cells(value: string): any;
        filter(): string;
        filter(value: string): any;
        flex(): string;
        flex(value: string): any;
        flex_basis(): string;
        flex_basis(value: string | number): any;
        flex_direction(): string;
        flex_direction(value: string): any;
        flex_flow(): string;
        flex_flow(value: string): any;
        flex_grow(): null | number;
        flex_grow(value: string | number): any;
        flex_shrink(): null | number;
        flex_shrink(value: string | number): any;
        flex_wrap(): string;
        flex_wrap(value: string): any;
        float(): string;
        float(value: string): any;
        font(): string;
        font(value: string): any;
        font_family(): string;
        font_family(value: string): string | any;
        font_feature_settings(): string;
        font_feature_settings(value: string): any;
        font_kerning(): string;
        font_kerning(value: string): any;
        font_language_override(): string;
        font_language_override(value: string): any;
        font_size(): string;
        font_size(value: string | number): any;
        font_size_adjust(): string;
        font_size_adjust(value: string): any;
        font_stretch(): string;
        font_stretch(value: string): any;
        font_style(): string;
        font_style(value: string): any;
        font_synthesis(): string;
        font_synthesis(value: string): any;
        font_variant(): string;
        font_variant(value: string): any;
        font_variant_alternates(): string;
        font_variant_alternates(value: string): any;
        font_variant_caps(): string;
        font_variant_caps(value: string): any;
        font_variant_east_asian(): string;
        font_variant_east_asian(value: string): any;
        font_variant_ligatures(): string;
        font_variant_ligatures(value: string): any;
        font_variant_numeric(): string;
        font_variant_numeric(value: string): any;
        font_variant_position(): string;
        font_variant_position(value: string): any;
        font_weight(): string;
        font_weight(value: string | number): any;
        gap(): string;
        gap(value: string | number): any;
        grid(): string;
        grid(value: string): any;
        grid_area(): string;
        grid_area(value: string): any;
        grid_auto_columns(): string;
        grid_auto_columns(value: string | number): any;
        grid_auto_flow(): string;
        grid_auto_flow(value: string): any;
        grid_auto_rows(): string;
        grid_auto_rows(value: string | number): any;
        grid_column(): string;
        grid_column(value: string): any;
        grid_column_end(): string;
        grid_column_end(value: string | number): any;
        grid_column_gap(): string;
        grid_column_gap(value: string | number): any;
        grid_column_start(): string;
        grid_column_start(value: string | number): any;
        grid_gap(): string;
        grid_gap(value: string | number): any;
        grid_row(): string;
        grid_row(value: string): any;
        grid_row_end(): string;
        grid_row_end(value: string): any;
        grid_row_gap(): string;
        grid_row_gap(value: string | number): any;
        grid_row_start(): string;
        grid_row_start(value: string | number): any;
        grid_template(): string;
        grid_template(value: string): any;
        grid_template_areas(): string;
        grid_template_areas(value: string): any;
        grid_template_columns(): string;
        grid_template_columns(value: string): any;
        grid_template_rows(): string;
        grid_template_rows(value: string | number): any;
        hanging_punctuation(): string;
        hanging_punctuation(value: string): any;
        hyphens(): string;
        hyphens(value: string): string | any;
        image_rendering(): string;
        image_rendering(value: string): any;
        inline_size(): string;
        inline_size(value: string | number): any;
        inset(): string;
        inset(value: string | number): any;
        inset_block(): string | undefined;
        inset_block(value: string | number): any;
        inset_block_end(): string;
        inset_block_end(value: string | number): any;
        inset_block_start(): string;
        inset_block_start(value: string | number): any;
        inset_inline(): string;
        inset_inline(value: string | number): any;
        inset_inline_end(): string;
        inset_inline_end(value: string | number): any;
        inset_inline_start(): string;
        inset_inline_start(value: string | number): any;
        isolation(): string;
        isolation(value: string): any;
        justify_content(): string;
        justify_content(value: string): any;
        justify_items(): string;
        justify_items(value: string): any;
        justify_self(): string;
        justify_self(value: string): any;
        left(): string;
        left(value: string | number): any;
        letter_spacing(): string;
        letter_spacing(value: string | number): any;
        line_break(): string;
        line_break(value: string): any;
        line_height(): string;
        line_height(value: string | number): any;
        list_style(): string;
        list_style(value: string): any;
        list_style_image(): string;
        list_style_image(value: string): any;
        list_style_position(): string;
        list_style_position(value: string): any;
        list_style_type(): string;
        list_style_type(value: string): any;
        margin_block(): string;
        margin_block(value: string | number): any;
        margin_block_end(): string;
        margin_block_end(value: string | number): any;
        margin_block_start(): string;
        margin_block_start(value: string | number): any;
        margin_inline(): string;
        margin_inline(value: string | number): any;
        margin_inline_end(): string;
        margin_inline_end(value: string | number): any;
        margin_inline_start(): string;
        margin_inline_start(value: string | number): any;
        mask(): string;
        mask(value: string): any;
        mask_clip(): string;
        mask_clip(value: string): any;
        mask_composite(): string;
        mask_composite(value: string): any;
        mask_image(): string;
        mask_image(value: string): any;
        mask_mode(): string;
        mask_mode(value: string): any;
        mask_origin(): string;
        mask_origin(value: string): any;
        mask_position(): string;
        mask_position(value: string): any;
        mask_repeat(): string;
        mask_repeat(value: string): any;
        mask_size(): string;
        mask_size(value: string | number): any;
        mask_type(): string;
        mask_type(value: string): any;
        max_height(): number | string;
        max_height(value: string | number): any;
        max_width(): number | string;
        max_width(value: string | number): any;
        max_block_size(): string;
        max_block_size(value: string | number): any;
        max_inline_size(): string | number;
        max_inline_size(value: string | number): any;
        min_block_size(): null | number;
        min_block_size(value: number): any;
        min_inline_size(): string;
        min_inline_size(value: string | number): any;
        mix_blend_mode(): string;
        mix_blend_mode(value: string): any;
        object_fit(): string;
        object_fit(value: string): any;
        object_position(): string;
        object_position(value: string): any;
        offset(): string;
        offset(value: string | number): any;
        offset_anchor(): string;
        offset_anchor(value: string): any;
        offset_distance(): string;
        offset_distance(value: string | number): any;
        offset_path(): string;
        offset_path(value: string): any;
        offset_rotate(): string;
        offset_rotate(value: string | number): any;
        order(): string;
        order(value: string | number): any;
        orphans(): null | number;
        orphans(value: number): any;
        outline(): string;
        outline(value: string): any;
        outline_color(): string;
        outline_color(value: string): any;
        outline_offset(): string;
        outline_offset(value: string | number): any;
        outline_style(): string;
        outline_style(value: string): any;
        outline_width(): string;
        outline_width(value: string | number): any;
        overflow(): string;
        overflow(value: string): any;
        overflow_anchor(): string;
        overflow_anchor(value: string): any;
        overflow_wrap(): string;
        overflow_wrap(value: string): any;
        overflow_x(): string;
        overflow_x(value: string): any;
        overflow_y(): string;
        overflow_y(value: string): any;
        overscroll_behavior(): string;
        overscroll_behavior(value: string): any;
        overscroll_behavior_block(): string;
        overscroll_behavior_block(value: string): any;
        overscroll_behavior_inline(): string;
        overscroll_behavior_inline(value: string): any;
        overscroll_behavior_x(): string;
        overscroll_behavior_x(value: string): any;
        overscroll_behavior_y(): string;
        overscroll_behavior_y(value: string): any;
        padding_block(): string | undefined;
        padding_block(value: string | number): any;
        padding_block_end(): string;
        padding_block_end(value: string | number): any;
        padding_block_start(): string;
        padding_block_start(value: string | number): any;
        padding_inline(): string;
        padding_inline(value: string | number): any;
        padding_inline_end(): string;
        padding_inline_end(value: string | number): any;
        padding_inline_start(): string;
        padding_inline_start(value: string | number): any;
        page_break_after(): string;
        page_break_after(value: string): any;
        page_break_before(): string;
        page_break_before(value: string): any;
        page_break_inside(): string;
        page_break_inside(value: string): any;
        paint_order(): string;
        paint_order(value: string): any;
        perspective(): string;
        perspective(value: string | number): any;
        perspective_origin(): string;
        perspective_origin(value: string): any;
        place_content(): string;
        place_content(value: string): any;
        place_items(): string;
        place_items(value: string): any;
        place_self(): string;
        place_self(value: string): any;
        pointer_events(): string;
        pointer_events(value: string): any;
        quotes(): string;
        quotes(value: string): any;
        resize(): string;
        resize(value: string): any;
        right(): string;
        right(value: number | string): any;
        row_gap(): string;
        row_gap(value: string | number): any;
        scale(): null | number;
        scale(value: number): any;
        scroll_behavior(): string;
        scroll_behavior(value: string): any;
        scroll_margin(): string;
        scroll_margin(value: string | number): any;
        scroll_margin_block(): string;
        scroll_margin_block(value: string | number): any;
        scroll_margin_block_end(): string;
        scroll_margin_block_end(value: string | number): any;
        scroll_margin_block_start(): string;
        scroll_margin_block_start(value: string | number): any;
        scroll_margin_bottom(): string;
        scroll_margin_bottom(value: string | number): any;
        scroll_margin_inline(): string;
        scroll_margin_inline(value: string | number): any;
        scroll_margin_inline_end(): string;
        scroll_margin_inline_end(value: string | number): any;
        scroll_margin_inline_start(): string;
        scroll_margin_inline_start(value: string): any;
        scroll_margin_left(): string;
        scroll_margin_left(value: string | number): any;
        scroll_margin_right(): string;
        scroll_margin_right(value: string | number): any;
        scroll_margin_top(): string;
        scroll_margin_top(value: string | number): any;
        scroll_padding(): string;
        scroll_padding(value: string | number): any;
        scroll_padding_block(): string;
        scroll_padding_block(value: string | number): any;
        scroll_padding_block_end(): string;
        scroll_padding_block_end(value: string | number): any;
        scroll_padding_block_start(): string;
        scroll_padding_block_start(value: string | number): any;
        scroll_padding_bottom(): string;
        scroll_padding_bottom(value: string | number): any;
        scroll_padding_inline(): string;
        scroll_padding_inline(value: string | number): any;
        scroll_padding_inline_end(): string;
        scroll_padding_inline_end(value: string | number): any;
        scroll_padding_inline_start(): string;
        scroll_padding_inline_start(value: string | number): any;
        scroll_padding_left(): string;
        scroll_padding_left(value: string | number): any;
        scroll_padding_right(): string;
        scroll_padding_right(value: string | number): any;
        scroll_padding_top(): string;
        scroll_padding_top(value: string | number): any;
        scroll_snap_align(): string;
        scroll_snap_align(value: string): any;
        scroll_snap_stop(): string;
        scroll_snap_stop(value: string): any;
        scroll_snap_type(): string;
        scroll_snap_type(value: string): any;
        scrollbar_color(): string;
        scrollbar_color(value: string): any;
        tab_size(): string;
        tab_size(value: string | number): any;
        table_layout(): string;
        table_layout(value: string): any;
        text_align(): string;
        text_align(value: string): any;
        text_align_last(): string;
        text_align_last(value: string): any;
        text_combine_upright(): string;
        text_combine_upright(value: string): any;
        text_decoration(): string;
        text_decoration(value: string): any;
        text_decoration_color(): string;
        text_decoration_color(value: string): any;
        text_decoration_line(): string;
        text_decoration_line(value: string): any;
        text_decoration_style(): string;
        text_decoration_style(value: string): any;
        text_decoration_thickness(): string;
        text_decoration_thickness(value: string | number): any;
        text_emphasis(): string;
        text_emphasis(value: string): any;
        text_indent(): string;
        text_indent(value: string | number): any;
        text_justify(): string;
        text_justify(value: string): any;
        text_orientation(): string;
        text_orientation(value: string): any;
        text_overflow(): string;
        text_overflow(value: string): any;
        text_shadow(): string;
        text_shadow(value: string): any;
        text_transform(): string;
        text_transform(value: string): any;
        text_underline_position(): string;
        text_underline_position(value: string): any;
        top(): string;
        top(value: string | number): any;
        transform(): string;
        transform(value: string): any;
        transform_origin(): string;
        transform_origin(value: string): any;
        transform_style(): string;
        transform_style(value: string): any;
        transition(): string;
        transition(value: string): any;
        transition_delay(): string;
        transition_delay(value: string | number): any;
        transition_duration(): string | undefined;
        transition_duration(value: string | number): any;
        transition_property(): string;
        transition_property(value: string): any;
        transition_timing_function(): string;
        transition_timing_function(value: string): any;
        translate(): string;
        translate(value: string | number): any;
        unicode_bidi(): string;
        unicode_bidi(value: string): any;
        user_select(): string;
        user_select(value: string): any;
        visibility(): string;
        visibility(value: string): any;
        white_space(): string;
        white_space(value: string): any;
        widows(): string;
        widows(value: string | number): any;
        word_break(): string;
        word_break(value: string): any;
        word_spacing(): string;
        word_spacing(value: string | number): any;
        word_wrap(): string;
        word_wrap(value: string): any;
        writing_mode(): string;
        writing_mode(value: string): any;
        focusable(): boolean;
        focusable(value: boolean): any;
        alt(): string;
        alt(value: string): any;
        readonly(): boolean;
        readonly(value: boolean): any;
        download(): string;
        download(value: string): any;
        accept(): string;
        accept(value: string): any;
        accept_charset(): string;
        accept_charset(value: string): any;
        action(): string;
        action(value: string): any;
        async(): boolean;
        async(value: boolean): any;
        auto_complete(): string;
        auto_complete(value: string): any;
        auto_focus(): string;
        auto_focus(value: string): any;
        auto_play(): boolean;
        auto_play(value: boolean): any;
        charset(): string;
        charset(value: string): any;
        checked(): boolean;
        checked(value: boolean): any;
        cite(): string;
        cite(value: string): any;
        cols(): null | number;
        cols(value: number): any;
        colspan(): null | number;
        colspan(value: number): any;
        content_editable(): boolean;
        content_editable(value: boolean): any;
        controls(): boolean;
        controls(value: boolean): any;
        coords(): string;
        coords(value: string): any;
        data(): string;
        data(value: string | number): any;
        datetime(): string;
        datetime(value: string | number): any;
        default(): string;
        default(value: string | number): any;
        defer(): string;
        defer(value: string): any;
        dir(): string;
        dir(value: string): any;
        dirname(): string;
        dirname(value: string): any;
        disabled(): boolean;
        disabled(value: boolean): any;
        draggable(): boolean;
        draggable(value: boolean): any;
        enctype(): string;
        enctype(value: string): any;
        for(): string;
        for(value: string): any;
        form(): string;
        form(value: string): any;
        form_action(): string;
        form_action(value: string): any;
        headers(): string;
        headers(value: string): any;
        high(): string;
        high(value: string | number): any;
        href(): string;
        href(value: string): any;
        href_lang(): string;
        href_lang(value: string): any;
        http_equiv(): string;
        http_equiv(value: string | number): any;
        id(): string;
        id(value: string): any;
        is_map(): boolean;
        is_map(value: boolean): any;
        kind(): string;
        kind(value: string): any;
        label(): string;
        label(value: string): any;
        lang(): string;
        lang(value: string): any;
        list(): string;
        list(value: string): any;
        loop(): boolean;
        loop(value: boolean): any;
        low(): string;
        low(value: string | number): any;
        max(): string;
        max(value: string | number): any;
        max_length(): null | number;
        max_length(value: number): any;
        method(): string;
        method(value: string): any;
        min(): string;
        min(value: string | number): any;
        multiple(): string;
        multiple(value: string | boolean): any;
        muted(): boolean;
        muted(value: boolean): any;
        no_validate(): boolean;
        no_validate(value: boolean): any;
        open(): boolean;
        open(value: boolean): any;
        optimum(): null | number;
        optimum(value: number): any;
        pattern(): string;
        pattern(value: string): any;
        placeholder(): string;
        placeholder(value: string): any;
        poster(): string;
        poster(value: string): any;
        preload(): string;
        preload(value: string): any;
        rel(): string;
        rel(value: string): any;
        required(): boolean;
        required(value: boolean): any;
        reversed(): boolean;
        reversed(value: boolean): any;
        rows(): null | number;
        rows(value: number): any;
        row_span(): null | number;
        row_span(value: number): any;
        sandbox(): string;
        sandbox(value: string): any;
        scope(): string;
        scope(value: string): any;
        selected(): boolean;
        selected(value: boolean): any;
        shape(): string;
        shape(value: string): any;
        size(): null | number;
        size(value: number): any;
        sizes(): string;
        sizes(value: string | number): any;
        span(): null | number;
        span(value: number): any;
        spell_check(): boolean;
        spell_check(value: boolean): any;
        src(): string;
        src(value: string): any;
        src_doc(): string;
        src_doc(value: string): any;
        src_lang(): string;
        src_lang(value: string): any;
        rrsrc_set(): string;
        rrsrc_set(value: string): any;
        start(): null | number;
        start(value: number): any;
        step(): null | number;
        step(value: number): any;
        tab_index(): null | number;
        tab_index(value: number): any;
        target(): string;
        target(value: string): any;
        title(): string;
        title(value: string): any;
        type(): string;
        type(value: string): any;
        use_map(): string;
        use_map(value: string): any;
        value(): string;
        value(value: string | number): any;
        on_blur(): Function | null;
        on_blur(callback: (element: any, event: Event) => void): any;
        on_change(): Function | null;
        on_change(callback: (element: any, event: Event) => void): any;
        on_focus(): Function | null;
        on_focus(callback: (element: any, event: Event) => void): any;
        on_input(): Function | null;
        on_input(callback: (element: any, event: Event) => void): any;
        on_before_input(): Function | null;
        on_before_input(callback: (element: any, event: Event) => void): any;
        on_invalid(): Function | null;
        on_invalid(callback: (element: any, event: Event) => void): any;
        on_reset(): Function | null;
        on_reset(callback: (element: any, event: Event) => void): any;
        on_select(): Function | null;
        on_select(callback: (element: any, event: Event) => void): any;
        on_submit(): Function | null;
        on_submit(callback: (element: any, event: Event) => void): any;
        on_key_down(): Function | null;
        on_key_down(callback: (element: any, event: KeyboardEvent) => void): any;
        on_key_press(): Function | null;
        on_key_press(callback: (element: any, event: KeyboardEvent) => void): any;
        on_key_up(): Function | null;
        on_key_up(callback: (element: any, event: KeyboardEvent) => void): any;
        on_dbl_click(): Function | null;
        on_dbl_click(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_down(): Function | null;
        on_mouse_down(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_move(): Function | null;
        on_mouse_move(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_out(): Function | null;
        on_mouse_out(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_over(): Function | null;
        on_mouse_over(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_up(): Function | null;
        on_mouse_up(callback: (element: any, event: MouseEvent) => void): any;
        on_wheel(): Function | null;
        on_wheel(callback: (element: any, event: WheelEvent) => void): any;
        on_drag(): Function | null;
        on_drag(callback: (element: any, event: DragEvent) => void): any;
        on_drag_end(): Function | null;
        on_drag_end(callback: (element: any, event: DragEvent) => void): any;
        on_drag_enter(): Function | null;
        on_drag_enter(callback: (element: any, event: DragEvent) => void): any;
        on_drag_leave(): Function | null;
        on_drag_leave(callback: (element: any, event: DragEvent) => void): any;
        on_drag_over(): Function | null;
        on_drag_over(callback: (element: any, event: DragEvent) => void): any;
        on_drag_start(): Function | null;
        on_drag_start(callback: (element: any, event: DragEvent) => void): any;
        on_drop(): Function | null;
        on_drop(callback: (element: any, event: Event) => void): any;
        on_copy(): Function | null;
        on_copy(callback: (element: any, event: Event) => void): any;
        on_cut(): Function | null;
        on_cut(callback: (element: any, event: Event) => void): any;
        on_paste(): Function | null;
        on_paste(callback: (element: any, event: Event) => void): any;
        on_abort(): Function | null;
        on_abort(callback: (element: any, event: Event) => void): any;
        on_canplay(): Function | null;
        on_canplay(callback: (element: any, event: Event) => void): any;
        on_canplay_through(): Function | null;
        on_canplay_through(callback: (element: any, event: Event) => void): any;
        on_cue_change(): Function | null;
        on_cue_change(callback: (element: any, event: Event) => void): any;
        on_duration_change(): Function | null;
        on_duration_change(callback: (element: any, event: Event) => void): any;
        on_emptied(): Function | null;
        on_emptied(callback: (element: any, event: Event) => void): any;
        on_ended(): Function | null;
        on_ended(callback: (element: any, event: Event) => void): any;
        on_error(): Function | null;
        on_error(callback: (element: any, error: string | Event) => void): any;
        on_loaded_data(): Function | null;
        on_loaded_data(callback: (element: any, event: Event) => void): any;
        on_loaded_metadata(): Function | null;
        on_loaded_metadata(callback: (element: any, event: Event) => void): any;
        on_load_start(): Function | null;
        on_load_start(callback: (element: any, event: Event) => void): any;
        on_pause(): Function | null;
        on_pause(callback: (element: any, event: Event) => void): any;
        on_play(): Function | null;
        on_play(callback: (element: any, event: Event) => void): any;
        on_playing(): Function | null;
        on_playing(callback: (element: any, time: any) => void): any;
        on_progress(): Function | null;
        on_progress(callback: ((element: any, event: Event) => void) | null): any;
        on_rate_change(): Function | null;
        on_rate_change(callback: (element: any, event: Event) => void): any;
        on_seeked(): Function | null;
        on_seeked(callback: (element: any, time: any) => void): any;
        on_seeking(): Function | null;
        on_seeking(callback: (element: any, time: any) => void): any;
        on_stalled(): Function | null;
        on_stalled(callback: (element: any, event: Event) => void): any;
        on_suspend(): Function | null;
        on_suspend(callback: Function): any;
        on_time_update(): Function | null;
        on_time_update(callback: (element: any, event: Event) => void): any;
        on_volume_change(): Function | null;
        on_volume_change(callback: (element: any, event: Event) => void): any;
        on_waiting(): Function | null;
        on_waiting(callback: (element: any, time: any) => void): any;
        on_toggle(): Function | null;
        on_toggle(callback: (element: any, event: Event) => void): any;
    };
    [x: string]: any;
    element_tag: string;
    default_style: Record<string, any>;
    default_attributes: Record<string, any>;
    default_events: Record<string, any>;
};
export declare class HStackElement extends HStackElement_base {
    constructor(...children: any[]);
}
export declare const HStack: (...args: any[]) => any;
declare const AnchorHStackElement_base: {
    new (): {
        [x: string]: any;
        __is_velement: boolean;
        rendered: boolean;
        element_type: string;
        base_element_type: string;
        remove_focus: any;
        _v_children: any[];
        _element_display: string;
        _is_connected: boolean;
        _on_append_callback?: Function;
        _assign_to_parent_as?: string;
        _parent?: any;
        _side_by_side_basis?: number;
        _animate_timeout?: ReturnType<typeof setTimeout>;
        _disabled: boolean;
        _timeouts: Record<string, any>;
        _on_window_resize_timer: any;
        _abs_parent: any;
        _pseudo_stylesheets: Record<string, any>;
        _on_resize_rule_evals: Record<string, any>;
        _observing_on_resize: boolean;
        _observing_on_render: boolean;
        _on_resize_callbacks: ((element: any) => void)[];
        _on_render_callbacks: ((element: any) => void)[];
        _on_theme_updates: ((element: any) => void)[];
        _on_mouse_leave_callback: (element: any, event: MouseEvent) => void;
        _on_mouse_enter_callback: (element: any, event: MouseEvent) => void;
        _on_shortcut_time: number;
        _on_shortcut_key: string;
        _on_shortcut_keycode: number;
        _on_keypress_set: boolean;
        _on_enter_callback?: ((element: any, event: KeyboardEvent) => void) | undefined;
        _on_escape_callback?: ((element: any, event: KeyboardEvent) => void) | undefined;
        _on_appear_callbacks: Record<string, any>[];
        _context_menu?: import("./context_menu").ContextMenuElement;
        _media_queries: {
            [key: string]: {
                list: MediaQueryList;
                callback: (query: MediaQueryList) => void;
            };
        };
        connectedCallback(): void;
        clone(clone_children?: boolean): any;
        pad_numeric(value: number | string | null, padding?: string): string;
        pad_percentage(value: number, padding?: string): string;
        edit_filter_wrapper(filter: string | null, type: string, to?: string | null): string;
        toggle_filter_wrapper(filter: string | null, type: string, to?: string | null): string;
        _convert_px_to_number_type(value: any, def?: number | null): any;
        _try_parse_float(value: any, def?: number | null): any;
        append(...children: any[]): any;
        zstack_append(...children: any[]): any;
        append_to(parent: any): any;
        append_children_to(parent: any, on_append_callback?: Function): any;
        remove_child(child: any): any;
        remove_children(): any;
        child(index: number): any;
        get(index: number): any | undefined;
        text(): string;
        text(value: string): any;
        width(): string | number;
        width(value: string | number, check_attribute?: boolean): any;
        fixed_width(): string | number;
        fixed_width(value: string | number): any;
        height(): string | number;
        height(value: string | number, check_attribute?: boolean): any;
        fixed_height(): string | number;
        fixed_height(value: string | number): any;
        min_height(): string | number;
        min_height(value: string | number): any;
        min_width(): string | number;
        min_width(value: string | number): any;
        width_by_columns(columns: number): any;
        offset_width(): number;
        offset_height(): number;
        client_width(): number;
        client_height(): number;
        x(): number;
        y(): number;
        frame(width: string | number, height: string | number): any;
        min_frame(width: string | number, height: string | number): any;
        max_frame(width: string | number, height: string | number): any;
        fixed_frame(width: string | number, height: string | number): any;
        get_frame_while_hidden(): {
            width: number;
            height: number;
        };
        padding(): string;
        padding(value: string | number): any;
        padding(top_bottom: string | number, left_right: string | number): any;
        padding(top: string | number, right: string | number, bottom: string | number, left: string | number): any;
        padding_bottom(): number;
        padding_bottom(value: string | number): any;
        padding_left(): number;
        padding_left(value: string | number): any;
        padding_right(): number;
        padding_right(value: string | number): any;
        padding_top(): number;
        padding_top(value: string | number): any;
        margin(): string | undefined;
        margin(value: string | number): any;
        margin(value: string | number, value2: string | number): any;
        margin(value: string | number, value2: string | number, value3: string | number, value4: string | number): any;
        margin_bottom(): number;
        margin_bottom(value: string | number): any;
        margin_left(): number;
        margin_left(value: string | number): any;
        margin_right(): number;
        margin_right(value: string | number): any;
        margin_top(): number;
        margin_top(value: string | number): any;
        position(): string | undefined;
        position(value: number | string): any;
        position(top?: number | string, right?: number | string, bottom?: number | string, left?: number | string): any;
        stretch(value: boolean): any;
        wrap(value: boolean | string): any;
        z_index(value: number): any;
        side_by_side(options: {
            columns?: number;
            hspacing?: number;
            vspacing?: number;
            stretch?: boolean;
            hide_dividers?: boolean;
        }): any;
        side_by_side_basis(): number | undefined;
        side_by_side_basis(basis: number | false): any;
        ellipsis_overflow(): boolean;
        ellipsis_overflow(to: boolean, after_lines?: number | null): any;
        align(): string;
        align(value: string): any;
        leading(): any;
        center(): any;
        trailing(): any;
        align_vertical(): string;
        align_vertical(value: string): any;
        leading_vertical(): any;
        center_vertical(only_on_no_overflow?: boolean): any;
        trailing_vertical(): any;
        align_text(value: string): any;
        text_leading(): any;
        text_center(): any;
        text_trailing(): any;
        align_height(): any;
        text_wrap(): string;
        text_wrap(value: string): any;
        line_clamp(): string;
        line_clamp(value: string): any;
        box_orient(): string;
        box_orient(value: string): any;
        color(): string;
        color(value: string | import("./gradient").GradientType): any;
        border(): string;
        border(value: string): any;
        border(width: string | number, color: string): any;
        border(width: string | number, style: string, color: string): any;
        border_top(): string;
        border_top(value: string | number): any;
        border_top(width: string | number, color: string): any;
        border_top(width: string | number, style: string, color: string): any;
        border_bottom(): string;
        border_bottom(value: string): any;
        border_bottom(width: string | number, color: string): any;
        border_bottom(width: string | number, style: string, color: string): any;
        border_right(): string;
        border_right(value: string): any;
        border_right(width: string | number, color: string): any;
        border_right(width: string | number, style: string, color: string): any;
        border_left(): string;
        border_left(value: string): any;
        border_left(width: string | number, color: string): any;
        border_left(width: string | number, style: string, color: string): any;
        shadow(): string;
        shadow(value: number): any;
        shadow(value1: number, value2: number, value3: number, value4: string): any;
        drop_shadow(): string;
        drop_shadow(value: number): any;
        drop_shadow(value1: number, value2: number, value3: number, value4: string): any;
        greyscale(): string;
        greyscale(value: number): any;
        opacity(): number;
        opacity(value: number): any;
        toggle_opacity(value: number): any;
        blur(): string;
        blur(value: number): any;
        toggle_blur(value?: number): any;
        background_blur(): string;
        background_blur(value: number | null): any;
        toggle_background_blur(value?: number): any;
        brightness(): string;
        brightness(value: number): any;
        toggle_brightness(value?: number): any;
        background_brightness(): string;
        background_brightness(value: number): any;
        toggle_background_brightness(value?: number): any;
        rotate(): string;
        rotate(value: number | string): any;
        delay(value: string | number): any;
        duration(value: string | number): any;
        background(): string;
        background(value: string): any;
        scale_font_size(scale?: number): any;
        display(): string;
        display(value: string): any;
        hide(): any;
        show(): any;
        is_hidden(): boolean;
        is_visible(): boolean;
        toggle_visibility(): any;
        inner_html(): string;
        inner_html(value: string): any;
        outer_html(): string;
        outer_html(value: string): any;
        styles(): Record<string, string>;
        styles(css_attr: Record<string, any>): any;
        attr(key: string): null | string;
        attr(key: string, value: string | number | null): any;
        attrs(html_attr: Record<string, string | number | boolean>): any;
        event(key: string): any;
        event(key: string, value: any): any;
        events(html_events: {
            [key: string]: EventListener;
        }): any;
        class(): string;
        class(value: string): any;
        toggle_class(name: string): any;
        remove_class(name: string): any;
        remove_classes(): any;
        hover_brightness(): boolean;
        hover_brightness(mouse_down_brightness: boolean | number, mouse_over_brightness: number): any;
        text_width(): number;
        text_width(text: string): number;
        frame_mode(frame_mode: import("./frame_modes").FrameNodesType): any;
        frame_mode(frame_modes: import("./frame_modes").FrameModesType, frame_mode: import("./frame_modes").FrameNodesType): any;
        media(media_query: string, true_handler?: (element: any) => void, false_handler?: ((element: any) => void)): any;
        remove_media(media_query: string): any;
        remove_medias(): any;
        remove_all_media(): any;
        default_animate(...args: any[]): any;
        animate(options: {
            keyframes: Array<any>;
            delay: number;
            duration: number;
            repeat?: boolean;
            persistent?: boolean;
            on_finish?: ((element: any) => void) | null;
            easing?: string;
        }): any;
        stop_animation(): any;
        slide_out(options: {
            direction: string;
            distance: number;
            duration: number;
            opacity?: boolean;
            easing?: string;
            hide?: boolean;
            remove?: boolean;
            display?: string;
            _slide_in?: boolean;
        }): Promise<void>;
        slide_in({ direction, distance, duration, opacity, easing, display, }: {
            direction?: string;
            distance?: number;
            duration?: number;
            opacity?: boolean;
            easing?: string;
            display?: string;
        }): Promise<any>;
        dropdown_animation({ distance, duration, opacity_duration, total_duration, delay, start_delay, easing, }?: {
            distance?: string;
            duration?: number;
            opacity_duration?: number;
            total_duration?: number;
            delay?: number;
            start_delay?: number;
            easing?: string;
        }): Promise<void>;
        increment_number_animation({ start, end, duration, total_duration, delay, prefix, suffix, }?: {
            start?: number;
            end?: number;
            duration?: number;
            total_duration?: number;
            delay?: number;
            prefix?: string;
            suffix?: string;
        }): Promise<void>;
        on_event(id: string, callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_event(id: string, callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_events(id: string): any;
        timeout(delay: number, callback: (instance: any) => void, options?: {
            id?: string;
            debounce?: boolean;
        } | null): any;
        clear_timeout(id: string | number): any;
        disable(): any;
        enable(): any;
        on_click(): null | Function;
        on_click(simulate_href: string | null, callback: Function): any;
        on_click(callback?: Function): any;
        on_click_redirect(url: string): any;
        on_scroll(): (EventListener | null);
        on_scroll(opts_or_callback: Function | {
            callback: (element: any, event: Event) => void;
            delay?: number;
        }): any;
        on_window_resize(): null | Function;
        on_window_resize(opts: Function | {
            callback?: Function;
            once?: boolean;
            delay?: number;
        }): any;
        on_attachment_drop(options: {
            callback: (args: {
                name: string;
                path: string;
                is_dir: boolean;
                data: any;
                compressed: boolean;
                file: File;
                size: number;
            }) => void;
            read?: boolean;
            compress?: boolean;
            on_start?: (event: DragEvent) => void;
        }): any;
        on_appear(callback: (element: any, options: {
            scroll_direction: string;
        }) => void): any;
        on_appear(options: {
            callback: (element: any, options: {
                scroll_direction: string;
            }) => void;
            repeat?: boolean;
            threshold?: number | null;
        }): any;
        on_disappear(callback_or_opts?: {
            callback?: (element: any) => void;
            repeat?: boolean;
        } | ((element: any) => void) | undefined): any;
        on_enter(callback: (element: any, event: KeyboardEvent) => void): any;
        on_escape(callback: (element: any, event: KeyboardEvent) => void): any;
        on_theme_update(): ((element: any) => void)[];
        on_theme_update(callback: (element: any) => void): any;
        remove_on_theme_update(callback: (element: any) => void): any;
        remove_on_theme_updates(): any;
        on_render(): ((element: any) => void)[];
        on_render(callback: (element: any) => void): any;
        remove_on_render(callback: (element: any) => void): any;
        remove_on_renders(): any;
        is_rendered(): boolean;
        on_load(callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_load(callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_loads(): any;
        on_resize(): ((element: any) => void)[];
        on_resize(callback: (element: any) => void): any;
        remove_on_resize(callback: (element: any) => void): any;
        remove_on_resizes(): any;
        on_resize_rule(evaluation: (element: any) => boolean, on_true?: ((element: any) => void) | undefined, on_false?: ((element: any) => void) | undefined): any;
        on_shortcut(shortcuts?: {
            match?: (event: KeyboardEvent, key: string, shortcut: any) => boolean;
            key?: string;
            keys?: string[];
            keycode?: number;
            keycodes?: number[];
            or?: boolean;
            duration?: number;
            shift?: boolean;
            alt?: boolean;
            ctrl?: boolean;
            allow_other_modifiers?: boolean;
            callback: (element: any, event: KeyboardEvent) => void;
        }[]): any;
        on_context_menu(): import("./context_menu").ContextMenuElement | Function | undefined;
        on_context_menu(callback: Function | import("./context_menu").ContextMenuElement | any[]): any;
        on_mouse_enter(): (element: any, event: MouseEvent) => void;
        on_mouse_enter(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_leave(): (element: any, event: MouseEvent) => void;
        on_mouse_leave(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_over_out(mouse_over: (element: any, event: MouseEvent) => void, mouse_out: (element: any, event: MouseEvent) => void): any;
        first_child(): Node | null;
        last_child(): ChildNode | null;
        iterate(start: number | ((child: any, index: number) => any), end?: number, handler?: (child: any, index: number) => any): any;
        iterate_nodes(start: number | ((node: any, index: number) => any), end?: number, handler?: (node: any, index: number) => any): any;
        set_default(Type?: any): any;
        assign(name: string, value: any): any;
        extend(obj: object): any;
        select(overwrite?: boolean): any;
        is_scrollable(): boolean;
        is_scrollable_x(): boolean;
        is_scrollable_y(): boolean;
        wait_till_children_rendered(timeout?: number): Promise<void>;
        pseudo(type: string, node: any): any;
        remove_pseudo(node: any): any;
        remove_pseudos(): any;
        pseudo_on_hover(type: string, node: any, set_defaults?: boolean): any;
        parent(): HTMLElement | any | null;
        parent(value: any): any;
        abs_parent(): any;
        abs_parent(value: any): any;
        assign_to_parent_as(name: string): any;
        get_y_offset_from_parent(parent: HTMLElement): number | null;
        absolute_y_offset(): number;
        absolute_x_offset(): number;
        exec(callback: (element: any) => void): any;
        is_child(target: any): boolean;
        is_nested_child(target: any, stop_node?: any): boolean;
        toString(): string;
        accent_color(): string;
        accent_color(value: string): any;
        align_content(): string;
        align_content(value: string): any;
        align_items(): string;
        align_items(value: string): any;
        align_self(): string;
        align_self(value: string): any;
        all(): string;
        all(value: string): any;
        animation(): string;
        animation(value: string): any;
        animation_delay(): string;
        animation_delay(value: string | number): any;
        animation_direction(): string;
        animation_direction(value: string): any;
        animation_duration(): string;
        animation_duration(value: string | number): any;
        animation_fill_mode(): string;
        animation_fill_mode(value: string): any;
        animation_iteration_count(): string;
        animation_iteration_count(value: string | number): any;
        animation_name(): string;
        animation_name(value: string): any;
        animation_play_state(): string;
        animation_play_state(value: string): any;
        animation_timing_function(): string;
        animation_timing_function(value: string): any;
        aspect_ratio(): string;
        aspect_ratio(value: string): any;
        backdrop_filter(): string;
        backdrop_filter(value: string): any;
        backface_visibility(): string;
        backface_visibility(value: string): any;
        background_attachment(): string;
        background_attachment(value: string): any;
        background_blend_mode(): string;
        background_blend_mode(value: string): any;
        background_clip(): string;
        background_clip(value: string): any;
        background_color(): string;
        background_color(value: string): any;
        background_image(): string;
        background_image(value: string): any;
        background_origin(): string;
        background_origin(value: string): any;
        background_position(): string;
        background_position(value: string): any;
        background_position_x(): string;
        background_position_x(value: string | number): any;
        background_position_y(): string;
        background_position_y(value: string | number): any;
        background_repeat(): string;
        background_repeat(value: string): any;
        background_size(): string;
        background_size(value: string | number): any;
        block_size(): string;
        block_size(value: string | number): any;
        border_block(): string;
        border_block(value: string): string | any;
        border_block_color(): string;
        border_block_color(value: string): any;
        border_block_end_color(): string;
        border_block_end_color(value: string): any;
        border_block_end_style(): string;
        border_block_end_style(value: string): any;
        border_block_end_width(): string;
        border_block_end_width(value: string | number): any;
        border_block_start_color(): string;
        border_block_start_color(value: string): any;
        border_block_start_style(): string;
        border_block_start_style(value: string): any;
        border_block_start_width(): string;
        border_block_start_width(value: string | number): any;
        border_block_style(): string;
        border_block_style(value: string): any;
        border_block_width(): string;
        border_block_width(value: string | number): any;
        border_bottom_color(): string;
        border_bottom_color(value: string): any;
        border_bottom_left_radius(): string;
        border_bottom_left_radius(value: string | number): any;
        border_bottom_right_radius(): string;
        border_bottom_right_radius(value: string | number): any;
        border_bottom_style(): string;
        border_bottom_style(value: string): any;
        border_bottom_width(): string;
        border_bottom_width(value: string | number): any;
        border_collapse(): string;
        border_collapse(value: string): any;
        border_color(): string;
        border_color(value: string): any;
        border_image(): string;
        border_image(value: string): any;
        border_image_outset(): string;
        border_image_outset(value: string | number): any;
        border_image_repeat(): string;
        border_image_repeat(value: string): any;
        border_image_slice(): string;
        border_image_slice(value: string | number): any;
        border_image_source(): string;
        border_image_source(value: string): any;
        border_image_width(): string;
        border_image_width(value: string | number): any;
        border_inline(): string;
        border_inline(value: string | number): any;
        border_inline_color(): string;
        border_inline_color(value: string): any;
        border_inline_end_color(): string;
        border_inline_end_color(value: string): any;
        border_inline_end_style(): string;
        border_inline_end_style(value: string): any;
        border_inline_end_width(): string;
        border_inline_end_width(value: string | number): any;
        border_inline_start_color(): string;
        border_inline_start_color(value: string): any;
        border_inline_start_style(): string;
        border_inline_start_style(value: string): any;
        border_inline_start_width(): string;
        border_inline_start_width(value: string | number): any;
        border_inline_style(): string;
        border_inline_style(value: string): any;
        border_inline_width(): string;
        border_inline_width(value: string | number): any;
        border_left_color(): string;
        border_left_color(value: string): any;
        border_left_style(): string;
        border_left_style(value: string): any;
        border_left_width(): string;
        border_left_width(value: string | number): any;
        border_radius(): string;
        border_radius(value: string | number): any;
        border_right_color(): string;
        border_right_color(value: string): any;
        border_right_style(): string;
        border_right_style(value: string): any;
        border_right_width(): string;
        border_right_width(value: string | number): any;
        border_spacing(): string;
        border_spacing(value: string | number): any;
        border_style(): string;
        border_style(value: string): any;
        border_top_color(): string;
        border_top_color(value: string): any;
        border_top_left_radius(): string;
        border_top_left_radius(value: string | number): any;
        border_top_right_radius(): string;
        border_top_right_radius(value: string | number): any;
        border_top_style(): string;
        border_top_style(value: string): any;
        border_top_width(): string;
        border_top_width(value: string | number): any;
        border_width(): string;
        border_width(value: string | number): any;
        bottom(): string;
        bottom(value: string | number): any;
        box_decoration_break(): string;
        box_decoration_break(value: string): any;
        box_reflect(): string;
        box_reflect(value: string): any;
        box_shadow(): string;
        box_shadow(value: string): any;
        box_sizing(): string;
        box_sizing(value: string): any;
        break_after(): string | any;
        break_after(value: string): any;
        break_before(): string;
        break_before(value: string): any;
        break_inside(): string;
        break_inside(value: string): any;
        caption_side(): string;
        caption_side(value: string): any;
        caret_color(): string;
        caret_color(value: string): any;
        clear(): string;
        clear(value: string): any;
        clip(): string;
        clip(value: string): any;
        column_count(): null | number;
        column_count(value: string | number): any;
        column_fill(): string;
        column_fill(value: string): any;
        column_gap(): string;
        column_gap(value: string | number): any;
        column_rule(): string;
        column_rule(value: string): any;
        column_rule_color(): string;
        column_rule_color(value: string): any;
        column_rule_style(): string;
        column_rule_style(value: string): any;
        column_rule_width(): string;
        column_rule_width(value: string | number): any;
        column_span(): null | number;
        column_span(value: number): any;
        column_width(): string;
        column_width(value: string | number): any;
        columns(): string;
        columns(value: string | number): any;
        content(): string;
        content(value: string | number): any;
        counter_increment(): string;
        counter_increment(value: string | number): any;
        counter_reset(): string;
        counter_reset(value: string): any;
        cursor(): string;
        cursor(value: string): any;
        direction(): string;
        direction(value: string): any;
        empty_cells(): string;
        empty_cells(value: string): any;
        filter(): string;
        filter(value: string): any;
        flex(): string;
        flex(value: string): any;
        flex_basis(): string;
        flex_basis(value: string | number): any;
        flex_direction(): string;
        flex_direction(value: string): any;
        flex_flow(): string;
        flex_flow(value: string): any;
        flex_grow(): null | number;
        flex_grow(value: string | number): any;
        flex_shrink(): null | number;
        flex_shrink(value: string | number): any;
        flex_wrap(): string;
        flex_wrap(value: string): any;
        float(): string;
        float(value: string): any;
        font(): string;
        font(value: string): any;
        font_family(): string;
        font_family(value: string): string | any;
        font_feature_settings(): string;
        font_feature_settings(value: string): any;
        font_kerning(): string;
        font_kerning(value: string): any;
        font_language_override(): string;
        font_language_override(value: string): any;
        font_size(): string;
        font_size(value: string | number): any;
        font_size_adjust(): string;
        font_size_adjust(value: string): any;
        font_stretch(): string;
        font_stretch(value: string): any;
        font_style(): string;
        font_style(value: string): any;
        font_synthesis(): string;
        font_synthesis(value: string): any;
        font_variant(): string;
        font_variant(value: string): any;
        font_variant_alternates(): string;
        font_variant_alternates(value: string): any;
        font_variant_caps(): string;
        font_variant_caps(value: string): any;
        font_variant_east_asian(): string;
        font_variant_east_asian(value: string): any;
        font_variant_ligatures(): string;
        font_variant_ligatures(value: string): any;
        font_variant_numeric(): string;
        font_variant_numeric(value: string): any;
        font_variant_position(): string;
        font_variant_position(value: string): any;
        font_weight(): string;
        font_weight(value: string | number): any;
        gap(): string;
        gap(value: string | number): any;
        grid(): string;
        grid(value: string): any;
        grid_area(): string;
        grid_area(value: string): any;
        grid_auto_columns(): string;
        grid_auto_columns(value: string | number): any;
        grid_auto_flow(): string;
        grid_auto_flow(value: string): any;
        grid_auto_rows(): string;
        grid_auto_rows(value: string | number): any;
        grid_column(): string;
        grid_column(value: string): any;
        grid_column_end(): string;
        grid_column_end(value: string | number): any;
        grid_column_gap(): string;
        grid_column_gap(value: string | number): any;
        grid_column_start(): string;
        grid_column_start(value: string | number): any;
        grid_gap(): string;
        grid_gap(value: string | number): any;
        grid_row(): string;
        grid_row(value: string): any;
        grid_row_end(): string;
        grid_row_end(value: string): any;
        grid_row_gap(): string;
        grid_row_gap(value: string | number): any;
        grid_row_start(): string;
        grid_row_start(value: string | number): any;
        grid_template(): string;
        grid_template(value: string): any;
        grid_template_areas(): string;
        grid_template_areas(value: string): any;
        grid_template_columns(): string;
        grid_template_columns(value: string): any;
        grid_template_rows(): string;
        grid_template_rows(value: string | number): any;
        hanging_punctuation(): string;
        hanging_punctuation(value: string): any;
        hyphens(): string;
        hyphens(value: string): string | any;
        image_rendering(): string;
        image_rendering(value: string): any;
        inline_size(): string;
        inline_size(value: string | number): any;
        inset(): string;
        inset(value: string | number): any;
        inset_block(): string | undefined;
        inset_block(value: string | number): any;
        inset_block_end(): string;
        inset_block_end(value: string | number): any;
        inset_block_start(): string;
        inset_block_start(value: string | number): any;
        inset_inline(): string;
        inset_inline(value: string | number): any;
        inset_inline_end(): string;
        inset_inline_end(value: string | number): any;
        inset_inline_start(): string;
        inset_inline_start(value: string | number): any;
        isolation(): string;
        isolation(value: string): any;
        justify_content(): string;
        justify_content(value: string): any;
        justify_items(): string;
        justify_items(value: string): any;
        justify_self(): string;
        justify_self(value: string): any;
        left(): string;
        left(value: string | number): any;
        letter_spacing(): string;
        letter_spacing(value: string | number): any;
        line_break(): string;
        line_break(value: string): any;
        line_height(): string;
        line_height(value: string | number): any;
        list_style(): string;
        list_style(value: string): any;
        list_style_image(): string;
        list_style_image(value: string): any;
        list_style_position(): string;
        list_style_position(value: string): any;
        list_style_type(): string;
        list_style_type(value: string): any;
        margin_block(): string;
        margin_block(value: string | number): any;
        margin_block_end(): string;
        margin_block_end(value: string | number): any;
        margin_block_start(): string;
        margin_block_start(value: string | number): any;
        margin_inline(): string;
        margin_inline(value: string | number): any;
        margin_inline_end(): string;
        margin_inline_end(value: string | number): any;
        margin_inline_start(): string;
        margin_inline_start(value: string | number): any;
        mask(): string;
        mask(value: string): any;
        mask_clip(): string;
        mask_clip(value: string): any;
        mask_composite(): string;
        mask_composite(value: string): any;
        mask_image(): string;
        mask_image(value: string): any;
        mask_mode(): string;
        mask_mode(value: string): any;
        mask_origin(): string;
        mask_origin(value: string): any;
        mask_position(): string;
        mask_position(value: string): any;
        mask_repeat(): string;
        mask_repeat(value: string): any;
        mask_size(): string;
        mask_size(value: string | number): any;
        mask_type(): string;
        mask_type(value: string): any;
        max_height(): number | string;
        max_height(value: string | number): any;
        max_width(): number | string;
        max_width(value: string | number): any;
        max_block_size(): string;
        max_block_size(value: string | number): any;
        max_inline_size(): string | number;
        max_inline_size(value: string | number): any;
        min_block_size(): null | number;
        min_block_size(value: number): any;
        min_inline_size(): string;
        min_inline_size(value: string | number): any;
        mix_blend_mode(): string;
        mix_blend_mode(value: string): any;
        object_fit(): string;
        object_fit(value: string): any;
        object_position(): string;
        object_position(value: string): any;
        offset(): string;
        offset(value: string | number): any;
        offset_anchor(): string;
        offset_anchor(value: string): any;
        offset_distance(): string;
        offset_distance(value: string | number): any;
        offset_path(): string;
        offset_path(value: string): any;
        offset_rotate(): string;
        offset_rotate(value: string | number): any;
        order(): string;
        order(value: string | number): any;
        orphans(): null | number;
        orphans(value: number): any;
        outline(): string;
        outline(value: string): any;
        outline_color(): string;
        outline_color(value: string): any;
        outline_offset(): string;
        outline_offset(value: string | number): any;
        outline_style(): string;
        outline_style(value: string): any;
        outline_width(): string;
        outline_width(value: string | number): any;
        overflow(): string;
        overflow(value: string): any;
        overflow_anchor(): string;
        overflow_anchor(value: string): any;
        overflow_wrap(): string;
        overflow_wrap(value: string): any;
        overflow_x(): string;
        overflow_x(value: string): any;
        overflow_y(): string;
        overflow_y(value: string): any;
        overscroll_behavior(): string;
        overscroll_behavior(value: string): any;
        overscroll_behavior_block(): string;
        overscroll_behavior_block(value: string): any;
        overscroll_behavior_inline(): string;
        overscroll_behavior_inline(value: string): any;
        overscroll_behavior_x(): string;
        overscroll_behavior_x(value: string): any;
        overscroll_behavior_y(): string;
        overscroll_behavior_y(value: string): any;
        padding_block(): string | undefined;
        padding_block(value: string | number): any;
        padding_block_end(): string;
        padding_block_end(value: string | number): any;
        padding_block_start(): string;
        padding_block_start(value: string | number): any;
        padding_inline(): string;
        padding_inline(value: string | number): any;
        padding_inline_end(): string;
        padding_inline_end(value: string | number): any;
        padding_inline_start(): string;
        padding_inline_start(value: string | number): any;
        page_break_after(): string;
        page_break_after(value: string): any;
        page_break_before(): string;
        page_break_before(value: string): any;
        page_break_inside(): string;
        page_break_inside(value: string): any;
        paint_order(): string;
        paint_order(value: string): any;
        perspective(): string;
        perspective(value: string | number): any;
        perspective_origin(): string;
        perspective_origin(value: string): any;
        place_content(): string;
        place_content(value: string): any;
        place_items(): string;
        place_items(value: string): any;
        place_self(): string;
        place_self(value: string): any;
        pointer_events(): string;
        pointer_events(value: string): any;
        quotes(): string;
        quotes(value: string): any;
        resize(): string;
        resize(value: string): any;
        right(): string;
        right(value: number | string): any;
        row_gap(): string;
        row_gap(value: string | number): any;
        scale(): null | number;
        scale(value: number): any;
        scroll_behavior(): string;
        scroll_behavior(value: string): any;
        scroll_margin(): string;
        scroll_margin(value: string | number): any;
        scroll_margin_block(): string;
        scroll_margin_block(value: string | number): any;
        scroll_margin_block_end(): string;
        scroll_margin_block_end(value: string | number): any;
        scroll_margin_block_start(): string;
        scroll_margin_block_start(value: string | number): any;
        scroll_margin_bottom(): string;
        scroll_margin_bottom(value: string | number): any;
        scroll_margin_inline(): string;
        scroll_margin_inline(value: string | number): any;
        scroll_margin_inline_end(): string;
        scroll_margin_inline_end(value: string | number): any;
        scroll_margin_inline_start(): string;
        scroll_margin_inline_start(value: string): any;
        scroll_margin_left(): string;
        scroll_margin_left(value: string | number): any;
        scroll_margin_right(): string;
        scroll_margin_right(value: string | number): any;
        scroll_margin_top(): string;
        scroll_margin_top(value: string | number): any;
        scroll_padding(): string;
        scroll_padding(value: string | number): any;
        scroll_padding_block(): string;
        scroll_padding_block(value: string | number): any;
        scroll_padding_block_end(): string;
        scroll_padding_block_end(value: string | number): any;
        scroll_padding_block_start(): string;
        scroll_padding_block_start(value: string | number): any;
        scroll_padding_bottom(): string;
        scroll_padding_bottom(value: string | number): any;
        scroll_padding_inline(): string;
        scroll_padding_inline(value: string | number): any;
        scroll_padding_inline_end(): string;
        scroll_padding_inline_end(value: string | number): any;
        scroll_padding_inline_start(): string;
        scroll_padding_inline_start(value: string | number): any;
        scroll_padding_left(): string;
        scroll_padding_left(value: string | number): any;
        scroll_padding_right(): string;
        scroll_padding_right(value: string | number): any;
        scroll_padding_top(): string;
        scroll_padding_top(value: string | number): any;
        scroll_snap_align(): string;
        scroll_snap_align(value: string): any;
        scroll_snap_stop(): string;
        scroll_snap_stop(value: string): any;
        scroll_snap_type(): string;
        scroll_snap_type(value: string): any;
        scrollbar_color(): string;
        scrollbar_color(value: string): any;
        tab_size(): string;
        tab_size(value: string | number): any;
        table_layout(): string;
        table_layout(value: string): any;
        text_align(): string;
        text_align(value: string): any;
        text_align_last(): string;
        text_align_last(value: string): any;
        text_combine_upright(): string;
        text_combine_upright(value: string): any;
        text_decoration(): string;
        text_decoration(value: string): any;
        text_decoration_color(): string;
        text_decoration_color(value: string): any;
        text_decoration_line(): string;
        text_decoration_line(value: string): any;
        text_decoration_style(): string;
        text_decoration_style(value: string): any;
        text_decoration_thickness(): string;
        text_decoration_thickness(value: string | number): any;
        text_emphasis(): string;
        text_emphasis(value: string): any;
        text_indent(): string;
        text_indent(value: string | number): any;
        text_justify(): string;
        text_justify(value: string): any;
        text_orientation(): string;
        text_orientation(value: string): any;
        text_overflow(): string;
        text_overflow(value: string): any;
        text_shadow(): string;
        text_shadow(value: string): any;
        text_transform(): string;
        text_transform(value: string): any;
        text_underline_position(): string;
        text_underline_position(value: string): any;
        top(): string;
        top(value: string | number): any;
        transform(): string;
        transform(value: string): any;
        transform_origin(): string;
        transform_origin(value: string): any;
        transform_style(): string;
        transform_style(value: string): any;
        transition(): string;
        transition(value: string): any;
        transition_delay(): string;
        transition_delay(value: string | number): any;
        transition_duration(): string | undefined;
        transition_duration(value: string | number): any;
        transition_property(): string;
        transition_property(value: string): any;
        transition_timing_function(): string;
        transition_timing_function(value: string): any;
        translate(): string;
        translate(value: string | number): any;
        unicode_bidi(): string;
        unicode_bidi(value: string): any;
        user_select(): string;
        user_select(value: string): any;
        visibility(): string;
        visibility(value: string): any;
        white_space(): string;
        white_space(value: string): any;
        widows(): string;
        widows(value: string | number): any;
        word_break(): string;
        word_break(value: string): any;
        word_spacing(): string;
        word_spacing(value: string | number): any;
        word_wrap(): string;
        word_wrap(value: string): any;
        writing_mode(): string;
        writing_mode(value: string): any;
        focusable(): boolean;
        focusable(value: boolean): any;
        alt(): string;
        alt(value: string): any;
        readonly(): boolean;
        readonly(value: boolean): any;
        download(): string;
        download(value: string): any;
        accept(): string;
        accept(value: string): any;
        accept_charset(): string;
        accept_charset(value: string): any;
        action(): string;
        action(value: string): any;
        async(): boolean;
        async(value: boolean): any;
        auto_complete(): string;
        auto_complete(value: string): any;
        auto_focus(): string;
        auto_focus(value: string): any;
        auto_play(): boolean;
        auto_play(value: boolean): any;
        charset(): string;
        charset(value: string): any;
        checked(): boolean;
        checked(value: boolean): any;
        cite(): string;
        cite(value: string): any;
        cols(): null | number;
        cols(value: number): any;
        colspan(): null | number;
        colspan(value: number): any;
        content_editable(): boolean;
        content_editable(value: boolean): any;
        controls(): boolean;
        controls(value: boolean): any;
        coords(): string;
        coords(value: string): any;
        data(): string;
        data(value: string | number): any;
        datetime(): string;
        datetime(value: string | number): any;
        default(): string;
        default(value: string | number): any;
        defer(): string;
        defer(value: string): any;
        dir(): string;
        dir(value: string): any;
        dirname(): string;
        dirname(value: string): any;
        disabled(): boolean;
        disabled(value: boolean): any;
        draggable(): boolean;
        draggable(value: boolean): any;
        enctype(): string;
        enctype(value: string): any;
        for(): string;
        for(value: string): any;
        form(): string;
        form(value: string): any;
        form_action(): string;
        form_action(value: string): any;
        headers(): string;
        headers(value: string): any;
        high(): string;
        high(value: string | number): any;
        href(): string;
        href(value: string): any;
        href_lang(): string;
        href_lang(value: string): any;
        http_equiv(): string;
        http_equiv(value: string | number): any;
        id(): string;
        id(value: string): any;
        is_map(): boolean;
        is_map(value: boolean): any;
        kind(): string;
        kind(value: string): any;
        label(): string;
        label(value: string): any;
        lang(): string;
        lang(value: string): any;
        list(): string;
        list(value: string): any;
        loop(): boolean;
        loop(value: boolean): any;
        low(): string;
        low(value: string | number): any;
        max(): string;
        max(value: string | number): any;
        max_length(): null | number;
        max_length(value: number): any;
        method(): string;
        method(value: string): any;
        min(): string;
        min(value: string | number): any;
        multiple(): string;
        multiple(value: string | boolean): any;
        muted(): boolean;
        muted(value: boolean): any;
        no_validate(): boolean;
        no_validate(value: boolean): any;
        open(): boolean;
        open(value: boolean): any;
        optimum(): null | number;
        optimum(value: number): any;
        pattern(): string;
        pattern(value: string): any;
        placeholder(): string;
        placeholder(value: string): any;
        poster(): string;
        poster(value: string): any;
        preload(): string;
        preload(value: string): any;
        rel(): string;
        rel(value: string): any;
        required(): boolean;
        required(value: boolean): any;
        reversed(): boolean;
        reversed(value: boolean): any;
        rows(): null | number;
        rows(value: number): any;
        row_span(): null | number;
        row_span(value: number): any;
        sandbox(): string;
        sandbox(value: string): any;
        scope(): string;
        scope(value: string): any;
        selected(): boolean;
        selected(value: boolean): any;
        shape(): string;
        shape(value: string): any;
        size(): null | number;
        size(value: number): any;
        sizes(): string;
        sizes(value: string | number): any;
        span(): null | number;
        span(value: number): any;
        spell_check(): boolean;
        spell_check(value: boolean): any;
        src(): string;
        src(value: string): any;
        src_doc(): string;
        src_doc(value: string): any;
        src_lang(): string;
        src_lang(value: string): any;
        rrsrc_set(): string;
        rrsrc_set(value: string): any;
        start(): null | number;
        start(value: number): any;
        step(): null | number;
        step(value: number): any;
        tab_index(): null | number;
        tab_index(value: number): any;
        target(): string;
        target(value: string): any;
        title(): string;
        title(value: string): any;
        type(): string;
        type(value: string): any;
        use_map(): string;
        use_map(value: string): any;
        value(): string;
        value(value: string | number): any;
        on_blur(): Function | null;
        on_blur(callback: (element: any, event: Event) => void): any;
        on_change(): Function | null;
        on_change(callback: (element: any, event: Event) => void): any;
        on_focus(): Function | null;
        on_focus(callback: (element: any, event: Event) => void): any;
        on_input(): Function | null;
        on_input(callback: (element: any, event: Event) => void): any;
        on_before_input(): Function | null;
        on_before_input(callback: (element: any, event: Event) => void): any;
        on_invalid(): Function | null;
        on_invalid(callback: (element: any, event: Event) => void): any;
        on_reset(): Function | null;
        on_reset(callback: (element: any, event: Event) => void): any;
        on_select(): Function | null;
        on_select(callback: (element: any, event: Event) => void): any;
        on_submit(): Function | null;
        on_submit(callback: (element: any, event: Event) => void): any;
        on_key_down(): Function | null;
        on_key_down(callback: (element: any, event: KeyboardEvent) => void): any;
        on_key_press(): Function | null;
        on_key_press(callback: (element: any, event: KeyboardEvent) => void): any;
        on_key_up(): Function | null;
        on_key_up(callback: (element: any, event: KeyboardEvent) => void): any;
        on_dbl_click(): Function | null;
        on_dbl_click(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_down(): Function | null;
        on_mouse_down(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_move(): Function | null;
        on_mouse_move(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_out(): Function | null;
        on_mouse_out(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_over(): Function | null;
        on_mouse_over(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_up(): Function | null;
        on_mouse_up(callback: (element: any, event: MouseEvent) => void): any;
        on_wheel(): Function | null;
        on_wheel(callback: (element: any, event: WheelEvent) => void): any;
        on_drag(): Function | null;
        on_drag(callback: (element: any, event: DragEvent) => void): any;
        on_drag_end(): Function | null;
        on_drag_end(callback: (element: any, event: DragEvent) => void): any;
        on_drag_enter(): Function | null;
        on_drag_enter(callback: (element: any, event: DragEvent) => void): any;
        on_drag_leave(): Function | null;
        on_drag_leave(callback: (element: any, event: DragEvent) => void): any;
        on_drag_over(): Function | null;
        on_drag_over(callback: (element: any, event: DragEvent) => void): any;
        on_drag_start(): Function | null;
        on_drag_start(callback: (element: any, event: DragEvent) => void): any;
        on_drop(): Function | null;
        on_drop(callback: (element: any, event: Event) => void): any;
        on_copy(): Function | null;
        on_copy(callback: (element: any, event: Event) => void): any;
        on_cut(): Function | null;
        on_cut(callback: (element: any, event: Event) => void): any;
        on_paste(): Function | null;
        on_paste(callback: (element: any, event: Event) => void): any;
        on_abort(): Function | null;
        on_abort(callback: (element: any, event: Event) => void): any;
        on_canplay(): Function | null;
        on_canplay(callback: (element: any, event: Event) => void): any;
        on_canplay_through(): Function | null;
        on_canplay_through(callback: (element: any, event: Event) => void): any;
        on_cue_change(): Function | null;
        on_cue_change(callback: (element: any, event: Event) => void): any;
        on_duration_change(): Function | null;
        on_duration_change(callback: (element: any, event: Event) => void): any;
        on_emptied(): Function | null;
        on_emptied(callback: (element: any, event: Event) => void): any;
        on_ended(): Function | null;
        on_ended(callback: (element: any, event: Event) => void): any;
        on_error(): Function | null;
        on_error(callback: (element: any, error: string | Event) => void): any;
        on_loaded_data(): Function | null;
        on_loaded_data(callback: (element: any, event: Event) => void): any;
        on_loaded_metadata(): Function | null;
        on_loaded_metadata(callback: (element: any, event: Event) => void): any;
        on_load_start(): Function | null;
        on_load_start(callback: (element: any, event: Event) => void): any;
        on_pause(): Function | null;
        on_pause(callback: (element: any, event: Event) => void): any;
        on_play(): Function | null;
        on_play(callback: (element: any, event: Event) => void): any;
        on_playing(): Function | null;
        on_playing(callback: (element: any, time: any) => void): any;
        on_progress(): Function | null;
        on_progress(callback: ((element: any, event: Event) => void) | null): any;
        on_rate_change(): Function | null;
        on_rate_change(callback: (element: any, event: Event) => void): any;
        on_seeked(): Function | null;
        on_seeked(callback: (element: any, time: any) => void): any;
        on_seeking(): Function | null;
        on_seeking(callback: (element: any, time: any) => void): any;
        on_stalled(): Function | null;
        on_stalled(callback: (element: any, event: Event) => void): any;
        on_suspend(): Function | null;
        on_suspend(callback: Function): any;
        on_time_update(): Function | null;
        on_time_update(callback: (element: any, event: Event) => void): any;
        on_volume_change(): Function | null;
        on_volume_change(callback: (element: any, event: Event) => void): any;
        on_waiting(): Function | null;
        on_waiting(callback: (element: any, time: any) => void): any;
        on_toggle(): Function | null;
        on_toggle(callback: (element: any, event: Event) => void): any;
    };
    [x: string]: any;
    element_tag: string;
    default_style: Record<string, any>;
    default_attributes: Record<string, any>;
    default_events: Record<string, any>;
};
export declare class AnchorHStackElement extends AnchorHStackElement_base {
    constructor(...children: any[]);
}
export declare const AnchorHStack: (...args: any[]) => any;
declare const ZStackElement_base: {
    new (): {
        [x: string]: any;
        __is_velement: boolean;
        rendered: boolean;
        element_type: string;
        base_element_type: string;
        remove_focus: any;
        _v_children: any[];
        _element_display: string;
        _is_connected: boolean;
        _on_append_callback?: Function;
        _assign_to_parent_as?: string;
        _parent?: any;
        _side_by_side_basis?: number;
        _animate_timeout?: ReturnType<typeof setTimeout>;
        _disabled: boolean;
        _timeouts: Record<string, any>;
        _on_window_resize_timer: any;
        _abs_parent: any;
        _pseudo_stylesheets: Record<string, any>;
        _on_resize_rule_evals: Record<string, any>;
        _observing_on_resize: boolean;
        _observing_on_render: boolean;
        _on_resize_callbacks: ((element: any) => void)[];
        _on_render_callbacks: ((element: any) => void)[];
        _on_theme_updates: ((element: any) => void)[];
        _on_mouse_leave_callback: (element: any, event: MouseEvent) => void;
        _on_mouse_enter_callback: (element: any, event: MouseEvent) => void;
        _on_shortcut_time: number;
        _on_shortcut_key: string;
        _on_shortcut_keycode: number;
        _on_keypress_set: boolean;
        _on_enter_callback?: ((element: any, event: KeyboardEvent) => void) | undefined;
        _on_escape_callback?: ((element: any, event: KeyboardEvent) => void) | undefined;
        _on_appear_callbacks: Record<string, any>[];
        _context_menu?: import("./context_menu").ContextMenuElement;
        _media_queries: {
            [key: string]: {
                list: MediaQueryList;
                callback: (query: MediaQueryList) => void;
            };
        };
        connectedCallback(): void;
        clone(clone_children?: boolean): any;
        pad_numeric(value: number | string | null, padding?: string): string;
        pad_percentage(value: number, padding?: string): string;
        edit_filter_wrapper(filter: string | null, type: string, to?: string | null): string;
        toggle_filter_wrapper(filter: string | null, type: string, to?: string | null): string;
        _convert_px_to_number_type(value: any, def?: number | null): any;
        _try_parse_float(value: any, def?: number | null): any;
        append(...children: any[]): any;
        zstack_append(...children: any[]): any;
        append_to(parent: any): any;
        append_children_to(parent: any, on_append_callback?: Function): any;
        remove_child(child: any): any;
        remove_children(): any;
        child(index: number): any;
        get(index: number): any | undefined;
        text(): string;
        text(value: string): any;
        width(): string | number;
        width(value: string | number, check_attribute?: boolean): any;
        fixed_width(): string | number;
        fixed_width(value: string | number): any;
        height(): string | number;
        height(value: string | number, check_attribute?: boolean): any;
        fixed_height(): string | number;
        fixed_height(value: string | number): any;
        min_height(): string | number;
        min_height(value: string | number): any;
        min_width(): string | number;
        min_width(value: string | number): any;
        width_by_columns(columns: number): any;
        offset_width(): number;
        offset_height(): number;
        client_width(): number;
        client_height(): number;
        x(): number;
        y(): number;
        frame(width: string | number, height: string | number): any;
        min_frame(width: string | number, height: string | number): any;
        max_frame(width: string | number, height: string | number): any;
        fixed_frame(width: string | number, height: string | number): any;
        get_frame_while_hidden(): {
            width: number;
            height: number;
        };
        padding(): string;
        padding(value: string | number): any;
        padding(top_bottom: string | number, left_right: string | number): any;
        padding(top: string | number, right: string | number, bottom: string | number, left: string | number): any;
        padding_bottom(): number;
        padding_bottom(value: string | number): any;
        padding_left(): number;
        padding_left(value: string | number): any;
        padding_right(): number;
        padding_right(value: string | number): any;
        padding_top(): number;
        padding_top(value: string | number): any;
        margin(): string | undefined;
        margin(value: string | number): any;
        margin(value: string | number, value2: string | number): any;
        margin(value: string | number, value2: string | number, value3: string | number, value4: string | number): any;
        margin_bottom(): number;
        margin_bottom(value: string | number): any;
        margin_left(): number;
        margin_left(value: string | number): any;
        margin_right(): number;
        margin_right(value: string | number): any;
        margin_top(): number;
        margin_top(value: string | number): any;
        position(): string | undefined;
        position(value: number | string): any;
        position(top?: number | string, right?: number | string, bottom?: number | string, left?: number | string): any;
        stretch(value: boolean): any;
        wrap(value: boolean | string): any;
        z_index(value: number): any;
        side_by_side(options: {
            columns?: number;
            hspacing?: number;
            vspacing?: number;
            stretch?: boolean;
            hide_dividers?: boolean;
        }): any;
        side_by_side_basis(): number | undefined;
        side_by_side_basis(basis: number | false): any;
        ellipsis_overflow(): boolean;
        ellipsis_overflow(to: boolean, after_lines?: number | null): any;
        align(): string;
        align(value: string): any;
        leading(): any;
        center(): any;
        trailing(): any;
        align_vertical(): string;
        align_vertical(value: string): any;
        leading_vertical(): any;
        center_vertical(only_on_no_overflow?: boolean): any;
        trailing_vertical(): any;
        align_text(value: string): any;
        text_leading(): any;
        text_center(): any;
        text_trailing(): any;
        align_height(): any;
        text_wrap(): string;
        text_wrap(value: string): any;
        line_clamp(): string;
        line_clamp(value: string): any;
        box_orient(): string;
        box_orient(value: string): any;
        color(): string;
        color(value: string | import("./gradient").GradientType): any;
        border(): string;
        border(value: string): any;
        border(width: string | number, color: string): any;
        border(width: string | number, style: string, color: string): any;
        border_top(): string;
        border_top(value: string | number): any;
        border_top(width: string | number, color: string): any;
        border_top(width: string | number, style: string, color: string): any;
        border_bottom(): string;
        border_bottom(value: string): any;
        border_bottom(width: string | number, color: string): any;
        border_bottom(width: string | number, style: string, color: string): any;
        border_right(): string;
        border_right(value: string): any;
        border_right(width: string | number, color: string): any;
        border_right(width: string | number, style: string, color: string): any;
        border_left(): string;
        border_left(value: string): any;
        border_left(width: string | number, color: string): any;
        border_left(width: string | number, style: string, color: string): any;
        shadow(): string;
        shadow(value: number): any;
        shadow(value1: number, value2: number, value3: number, value4: string): any;
        drop_shadow(): string;
        drop_shadow(value: number): any;
        drop_shadow(value1: number, value2: number, value3: number, value4: string): any;
        greyscale(): string;
        greyscale(value: number): any;
        opacity(): number;
        opacity(value: number): any;
        toggle_opacity(value: number): any;
        blur(): string;
        blur(value: number): any;
        toggle_blur(value?: number): any;
        background_blur(): string;
        background_blur(value: number | null): any;
        toggle_background_blur(value?: number): any;
        brightness(): string;
        brightness(value: number): any;
        toggle_brightness(value?: number): any;
        background_brightness(): string;
        background_brightness(value: number): any;
        toggle_background_brightness(value?: number): any;
        rotate(): string;
        rotate(value: number | string): any;
        delay(value: string | number): any;
        duration(value: string | number): any;
        background(): string;
        background(value: string): any;
        scale_font_size(scale?: number): any;
        display(): string;
        display(value: string): any;
        hide(): any;
        show(): any;
        is_hidden(): boolean;
        is_visible(): boolean;
        toggle_visibility(): any;
        inner_html(): string;
        inner_html(value: string): any;
        outer_html(): string;
        outer_html(value: string): any;
        styles(): Record<string, string>;
        styles(css_attr: Record<string, any>): any;
        attr(key: string): null | string;
        attr(key: string, value: string | number | null): any;
        attrs(html_attr: Record<string, string | number | boolean>): any;
        event(key: string): any;
        event(key: string, value: any): any;
        events(html_events: {
            [key: string]: EventListener;
        }): any;
        class(): string;
        class(value: string): any;
        toggle_class(name: string): any;
        remove_class(name: string): any;
        remove_classes(): any;
        hover_brightness(): boolean;
        hover_brightness(mouse_down_brightness: boolean | number, mouse_over_brightness: number): any;
        text_width(): number;
        text_width(text: string): number;
        frame_mode(frame_mode: import("./frame_modes").FrameNodesType): any;
        frame_mode(frame_modes: import("./frame_modes").FrameModesType, frame_mode: import("./frame_modes").FrameNodesType): any;
        media(media_query: string, true_handler?: (element: any) => void, false_handler?: ((element: any) => void)): any;
        remove_media(media_query: string): any;
        remove_medias(): any;
        remove_all_media(): any;
        default_animate(...args: any[]): any;
        animate(options: {
            keyframes: Array<any>;
            delay: number;
            duration: number;
            repeat?: boolean;
            persistent?: boolean;
            on_finish?: ((element: any) => void) | null;
            easing?: string;
        }): any;
        stop_animation(): any;
        slide_out(options: {
            direction: string;
            distance: number;
            duration: number;
            opacity?: boolean;
            easing?: string;
            hide?: boolean;
            remove?: boolean;
            display?: string;
            _slide_in?: boolean;
        }): Promise<void>;
        slide_in({ direction, distance, duration, opacity, easing, display, }: {
            direction?: string;
            distance?: number;
            duration?: number;
            opacity?: boolean;
            easing?: string;
            display?: string;
        }): Promise<any>;
        dropdown_animation({ distance, duration, opacity_duration, total_duration, delay, start_delay, easing, }?: {
            distance?: string;
            duration?: number;
            opacity_duration?: number;
            total_duration?: number;
            delay?: number;
            start_delay?: number;
            easing?: string;
        }): Promise<void>;
        increment_number_animation({ start, end, duration, total_duration, delay, prefix, suffix, }?: {
            start?: number;
            end?: number;
            duration?: number;
            total_duration?: number;
            delay?: number;
            prefix?: string;
            suffix?: string;
        }): Promise<void>;
        on_event(id: string, callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_event(id: string, callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_events(id: string): any;
        timeout(delay: number, callback: (instance: any) => void, options?: {
            id?: string;
            debounce?: boolean;
        } | null): any;
        clear_timeout(id: string | number): any;
        disable(): any;
        enable(): any;
        on_click(): null | Function;
        on_click(simulate_href: string | null, callback: Function): any;
        on_click(callback?: Function): any;
        on_click_redirect(url: string): any;
        on_scroll(): (EventListener | null);
        on_scroll(opts_or_callback: Function | {
            callback: (element: any, event: Event) => void;
            delay?: number;
        }): any;
        on_window_resize(): null | Function;
        on_window_resize(opts: Function | {
            callback?: Function;
            once?: boolean;
            delay?: number;
        }): any;
        on_attachment_drop(options: {
            callback: (args: {
                name: string;
                path: string;
                is_dir: boolean;
                data: any;
                compressed: boolean;
                file: File;
                size: number;
            }) => void;
            read?: boolean;
            compress?: boolean;
            on_start?: (event: DragEvent) => void;
        }): any;
        on_appear(callback: (element: any, options: {
            scroll_direction: string;
        }) => void): any;
        on_appear(options: {
            callback: (element: any, options: {
                scroll_direction: string;
            }) => void;
            repeat?: boolean;
            threshold?: number | null;
        }): any;
        on_disappear(callback_or_opts?: {
            callback?: (element: any) => void;
            repeat?: boolean;
        } | ((element: any) => void) | undefined): any;
        on_enter(callback: (element: any, event: KeyboardEvent) => void): any;
        on_escape(callback: (element: any, event: KeyboardEvent) => void): any;
        on_theme_update(): ((element: any) => void)[];
        on_theme_update(callback: (element: any) => void): any;
        remove_on_theme_update(callback: (element: any) => void): any;
        remove_on_theme_updates(): any;
        on_render(): ((element: any) => void)[];
        on_render(callback: (element: any) => void): any;
        remove_on_render(callback: (element: any) => void): any;
        remove_on_renders(): any;
        is_rendered(): boolean;
        on_load(callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_load(callback: (element: any, args: Record<string, any>) => void): any;
        remove_on_loads(): any;
        on_resize(): ((element: any) => void)[];
        on_resize(callback: (element: any) => void): any;
        remove_on_resize(callback: (element: any) => void): any;
        remove_on_resizes(): any;
        on_resize_rule(evaluation: (element: any) => boolean, on_true?: ((element: any) => void) | undefined, on_false?: ((element: any) => void) | undefined): any;
        on_shortcut(shortcuts?: {
            match?: (event: KeyboardEvent, key: string, shortcut: any) => boolean;
            key?: string;
            keys?: string[];
            keycode?: number;
            keycodes?: number[];
            or?: boolean;
            duration?: number;
            shift?: boolean;
            alt?: boolean;
            ctrl?: boolean;
            allow_other_modifiers?: boolean;
            callback: (element: any, event: KeyboardEvent) => void;
        }[]): any;
        on_context_menu(): import("./context_menu").ContextMenuElement | Function | undefined;
        on_context_menu(callback: Function | import("./context_menu").ContextMenuElement | any[]): any;
        on_mouse_enter(): (element: any, event: MouseEvent) => void;
        on_mouse_enter(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_leave(): (element: any, event: MouseEvent) => void;
        on_mouse_leave(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_over_out(mouse_over: (element: any, event: MouseEvent) => void, mouse_out: (element: any, event: MouseEvent) => void): any;
        first_child(): Node | null;
        last_child(): ChildNode | null;
        iterate(start: number | ((child: any, index: number) => any), end?: number, handler?: (child: any, index: number) => any): any;
        iterate_nodes(start: number | ((node: any, index: number) => any), end?: number, handler?: (node: any, index: number) => any): any;
        set_default(Type?: any): any;
        assign(name: string, value: any): any;
        extend(obj: object): any;
        select(overwrite?: boolean): any;
        is_scrollable(): boolean;
        is_scrollable_x(): boolean;
        is_scrollable_y(): boolean;
        wait_till_children_rendered(timeout?: number): Promise<void>;
        pseudo(type: string, node: any): any;
        remove_pseudo(node: any): any;
        remove_pseudos(): any;
        pseudo_on_hover(type: string, node: any, set_defaults?: boolean): any;
        parent(): HTMLElement | any | null;
        parent(value: any): any;
        abs_parent(): any;
        abs_parent(value: any): any;
        assign_to_parent_as(name: string): any;
        get_y_offset_from_parent(parent: HTMLElement): number | null;
        absolute_y_offset(): number;
        absolute_x_offset(): number;
        exec(callback: (element: any) => void): any;
        is_child(target: any): boolean;
        is_nested_child(target: any, stop_node?: any): boolean;
        toString(): string;
        accent_color(): string;
        accent_color(value: string): any;
        align_content(): string;
        align_content(value: string): any;
        align_items(): string;
        align_items(value: string): any;
        align_self(): string;
        align_self(value: string): any;
        all(): string;
        all(value: string): any;
        animation(): string;
        animation(value: string): any;
        animation_delay(): string;
        animation_delay(value: string | number): any;
        animation_direction(): string;
        animation_direction(value: string): any;
        animation_duration(): string;
        animation_duration(value: string | number): any;
        animation_fill_mode(): string;
        animation_fill_mode(value: string): any;
        animation_iteration_count(): string;
        animation_iteration_count(value: string | number): any;
        animation_name(): string;
        animation_name(value: string): any;
        animation_play_state(): string;
        animation_play_state(value: string): any;
        animation_timing_function(): string;
        animation_timing_function(value: string): any;
        aspect_ratio(): string;
        aspect_ratio(value: string): any;
        backdrop_filter(): string;
        backdrop_filter(value: string): any;
        backface_visibility(): string;
        backface_visibility(value: string): any;
        background_attachment(): string;
        background_attachment(value: string): any;
        background_blend_mode(): string;
        background_blend_mode(value: string): any;
        background_clip(): string;
        background_clip(value: string): any;
        background_color(): string;
        background_color(value: string): any;
        background_image(): string;
        background_image(value: string): any;
        background_origin(): string;
        background_origin(value: string): any;
        background_position(): string;
        background_position(value: string): any;
        background_position_x(): string;
        background_position_x(value: string | number): any;
        background_position_y(): string;
        background_position_y(value: string | number): any;
        background_repeat(): string;
        background_repeat(value: string): any;
        background_size(): string;
        background_size(value: string | number): any;
        block_size(): string;
        block_size(value: string | number): any;
        border_block(): string;
        border_block(value: string): string | any;
        border_block_color(): string;
        border_block_color(value: string): any;
        border_block_end_color(): string;
        border_block_end_color(value: string): any;
        border_block_end_style(): string;
        border_block_end_style(value: string): any;
        border_block_end_width(): string;
        border_block_end_width(value: string | number): any;
        border_block_start_color(): string;
        border_block_start_color(value: string): any;
        border_block_start_style(): string;
        border_block_start_style(value: string): any;
        border_block_start_width(): string;
        border_block_start_width(value: string | number): any;
        border_block_style(): string;
        border_block_style(value: string): any;
        border_block_width(): string;
        border_block_width(value: string | number): any;
        border_bottom_color(): string;
        border_bottom_color(value: string): any;
        border_bottom_left_radius(): string;
        border_bottom_left_radius(value: string | number): any;
        border_bottom_right_radius(): string;
        border_bottom_right_radius(value: string | number): any;
        border_bottom_style(): string;
        border_bottom_style(value: string): any;
        border_bottom_width(): string;
        border_bottom_width(value: string | number): any;
        border_collapse(): string;
        border_collapse(value: string): any;
        border_color(): string;
        border_color(value: string): any;
        border_image(): string;
        border_image(value: string): any;
        border_image_outset(): string;
        border_image_outset(value: string | number): any;
        border_image_repeat(): string;
        border_image_repeat(value: string): any;
        border_image_slice(): string;
        border_image_slice(value: string | number): any;
        border_image_source(): string;
        border_image_source(value: string): any;
        border_image_width(): string;
        border_image_width(value: string | number): any;
        border_inline(): string;
        border_inline(value: string | number): any;
        border_inline_color(): string;
        border_inline_color(value: string): any;
        border_inline_end_color(): string;
        border_inline_end_color(value: string): any;
        border_inline_end_style(): string;
        border_inline_end_style(value: string): any;
        border_inline_end_width(): string;
        border_inline_end_width(value: string | number): any;
        border_inline_start_color(): string;
        border_inline_start_color(value: string): any;
        border_inline_start_style(): string;
        border_inline_start_style(value: string): any;
        border_inline_start_width(): string;
        border_inline_start_width(value: string | number): any;
        border_inline_style(): string;
        border_inline_style(value: string): any;
        border_inline_width(): string;
        border_inline_width(value: string | number): any;
        border_left_color(): string;
        border_left_color(value: string): any;
        border_left_style(): string;
        border_left_style(value: string): any;
        border_left_width(): string;
        border_left_width(value: string | number): any;
        border_radius(): string;
        border_radius(value: string | number): any;
        border_right_color(): string;
        border_right_color(value: string): any;
        border_right_style(): string;
        border_right_style(value: string): any;
        border_right_width(): string;
        border_right_width(value: string | number): any;
        border_spacing(): string;
        border_spacing(value: string | number): any;
        border_style(): string;
        border_style(value: string): any;
        border_top_color(): string;
        border_top_color(value: string): any;
        border_top_left_radius(): string;
        border_top_left_radius(value: string | number): any;
        border_top_right_radius(): string;
        border_top_right_radius(value: string | number): any;
        border_top_style(): string;
        border_top_style(value: string): any;
        border_top_width(): string;
        border_top_width(value: string | number): any;
        border_width(): string;
        border_width(value: string | number): any;
        bottom(): string;
        bottom(value: string | number): any;
        box_decoration_break(): string;
        box_decoration_break(value: string): any;
        box_reflect(): string;
        box_reflect(value: string): any;
        box_shadow(): string;
        box_shadow(value: string): any;
        box_sizing(): string;
        box_sizing(value: string): any;
        break_after(): string | any;
        break_after(value: string): any;
        break_before(): string;
        break_before(value: string): any;
        break_inside(): string;
        break_inside(value: string): any;
        caption_side(): string;
        caption_side(value: string): any;
        caret_color(): string;
        caret_color(value: string): any;
        clear(): string;
        clear(value: string): any;
        clip(): string;
        clip(value: string): any;
        column_count(): null | number;
        column_count(value: string | number): any;
        column_fill(): string;
        column_fill(value: string): any;
        column_gap(): string;
        column_gap(value: string | number): any;
        column_rule(): string;
        column_rule(value: string): any;
        column_rule_color(): string;
        column_rule_color(value: string): any;
        column_rule_style(): string;
        column_rule_style(value: string): any;
        column_rule_width(): string;
        column_rule_width(value: string | number): any;
        column_span(): null | number;
        column_span(value: number): any;
        column_width(): string;
        column_width(value: string | number): any;
        columns(): string;
        columns(value: string | number): any;
        content(): string;
        content(value: string | number): any;
        counter_increment(): string;
        counter_increment(value: string | number): any;
        counter_reset(): string;
        counter_reset(value: string): any;
        cursor(): string;
        cursor(value: string): any;
        direction(): string;
        direction(value: string): any;
        empty_cells(): string;
        empty_cells(value: string): any;
        filter(): string;
        filter(value: string): any;
        flex(): string;
        flex(value: string): any;
        flex_basis(): string;
        flex_basis(value: string | number): any;
        flex_direction(): string;
        flex_direction(value: string): any;
        flex_flow(): string;
        flex_flow(value: string): any;
        flex_grow(): null | number;
        flex_grow(value: string | number): any;
        flex_shrink(): null | number;
        flex_shrink(value: string | number): any;
        flex_wrap(): string;
        flex_wrap(value: string): any;
        float(): string;
        float(value: string): any;
        font(): string;
        font(value: string): any;
        font_family(): string;
        font_family(value: string): string | any;
        font_feature_settings(): string;
        font_feature_settings(value: string): any;
        font_kerning(): string;
        font_kerning(value: string): any;
        font_language_override(): string;
        font_language_override(value: string): any;
        font_size(): string;
        font_size(value: string | number): any;
        font_size_adjust(): string;
        font_size_adjust(value: string): any;
        font_stretch(): string;
        font_stretch(value: string): any;
        font_style(): string;
        font_style(value: string): any;
        font_synthesis(): string;
        font_synthesis(value: string): any;
        font_variant(): string;
        font_variant(value: string): any;
        font_variant_alternates(): string;
        font_variant_alternates(value: string): any;
        font_variant_caps(): string;
        font_variant_caps(value: string): any;
        font_variant_east_asian(): string;
        font_variant_east_asian(value: string): any;
        font_variant_ligatures(): string;
        font_variant_ligatures(value: string): any;
        font_variant_numeric(): string;
        font_variant_numeric(value: string): any;
        font_variant_position(): string;
        font_variant_position(value: string): any;
        font_weight(): string;
        font_weight(value: string | number): any;
        gap(): string;
        gap(value: string | number): any;
        grid(): string;
        grid(value: string): any;
        grid_area(): string;
        grid_area(value: string): any;
        grid_auto_columns(): string;
        grid_auto_columns(value: string | number): any;
        grid_auto_flow(): string;
        grid_auto_flow(value: string): any;
        grid_auto_rows(): string;
        grid_auto_rows(value: string | number): any;
        grid_column(): string;
        grid_column(value: string): any;
        grid_column_end(): string;
        grid_column_end(value: string | number): any;
        grid_column_gap(): string;
        grid_column_gap(value: string | number): any;
        grid_column_start(): string;
        grid_column_start(value: string | number): any;
        grid_gap(): string;
        grid_gap(value: string | number): any;
        grid_row(): string;
        grid_row(value: string): any;
        grid_row_end(): string;
        grid_row_end(value: string): any;
        grid_row_gap(): string;
        grid_row_gap(value: string | number): any;
        grid_row_start(): string;
        grid_row_start(value: string | number): any;
        grid_template(): string;
        grid_template(value: string): any;
        grid_template_areas(): string;
        grid_template_areas(value: string): any;
        grid_template_columns(): string;
        grid_template_columns(value: string): any;
        grid_template_rows(): string;
        grid_template_rows(value: string | number): any;
        hanging_punctuation(): string;
        hanging_punctuation(value: string): any;
        hyphens(): string;
        hyphens(value: string): string | any;
        image_rendering(): string;
        image_rendering(value: string): any;
        inline_size(): string;
        inline_size(value: string | number): any;
        inset(): string;
        inset(value: string | number): any;
        inset_block(): string | undefined;
        inset_block(value: string | number): any;
        inset_block_end(): string;
        inset_block_end(value: string | number): any;
        inset_block_start(): string;
        inset_block_start(value: string | number): any;
        inset_inline(): string;
        inset_inline(value: string | number): any;
        inset_inline_end(): string;
        inset_inline_end(value: string | number): any;
        inset_inline_start(): string;
        inset_inline_start(value: string | number): any;
        isolation(): string;
        isolation(value: string): any;
        justify_content(): string;
        justify_content(value: string): any;
        justify_items(): string;
        justify_items(value: string): any;
        justify_self(): string;
        justify_self(value: string): any;
        left(): string;
        left(value: string | number): any;
        letter_spacing(): string;
        letter_spacing(value: string | number): any;
        line_break(): string;
        line_break(value: string): any;
        line_height(): string;
        line_height(value: string | number): any;
        list_style(): string;
        list_style(value: string): any;
        list_style_image(): string;
        list_style_image(value: string): any;
        list_style_position(): string;
        list_style_position(value: string): any;
        list_style_type(): string;
        list_style_type(value: string): any;
        margin_block(): string;
        margin_block(value: string | number): any;
        margin_block_end(): string;
        margin_block_end(value: string | number): any;
        margin_block_start(): string;
        margin_block_start(value: string | number): any;
        margin_inline(): string;
        margin_inline(value: string | number): any;
        margin_inline_end(): string;
        margin_inline_end(value: string | number): any;
        margin_inline_start(): string;
        margin_inline_start(value: string | number): any;
        mask(): string;
        mask(value: string): any;
        mask_clip(): string;
        mask_clip(value: string): any;
        mask_composite(): string;
        mask_composite(value: string): any;
        mask_image(): string;
        mask_image(value: string): any;
        mask_mode(): string;
        mask_mode(value: string): any;
        mask_origin(): string;
        mask_origin(value: string): any;
        mask_position(): string;
        mask_position(value: string): any;
        mask_repeat(): string;
        mask_repeat(value: string): any;
        mask_size(): string;
        mask_size(value: string | number): any;
        mask_type(): string;
        mask_type(value: string): any;
        max_height(): number | string;
        max_height(value: string | number): any;
        max_width(): number | string;
        max_width(value: string | number): any;
        max_block_size(): string;
        max_block_size(value: string | number): any;
        max_inline_size(): string | number;
        max_inline_size(value: string | number): any;
        min_block_size(): null | number;
        min_block_size(value: number): any;
        min_inline_size(): string;
        min_inline_size(value: string | number): any;
        mix_blend_mode(): string;
        mix_blend_mode(value: string): any;
        object_fit(): string;
        object_fit(value: string): any;
        object_position(): string;
        object_position(value: string): any;
        offset(): string;
        offset(value: string | number): any;
        offset_anchor(): string;
        offset_anchor(value: string): any;
        offset_distance(): string;
        offset_distance(value: string | number): any;
        offset_path(): string;
        offset_path(value: string): any;
        offset_rotate(): string;
        offset_rotate(value: string | number): any;
        order(): string;
        order(value: string | number): any;
        orphans(): null | number;
        orphans(value: number): any;
        outline(): string;
        outline(value: string): any;
        outline_color(): string;
        outline_color(value: string): any;
        outline_offset(): string;
        outline_offset(value: string | number): any;
        outline_style(): string;
        outline_style(value: string): any;
        outline_width(): string;
        outline_width(value: string | number): any;
        overflow(): string;
        overflow(value: string): any;
        overflow_anchor(): string;
        overflow_anchor(value: string): any;
        overflow_wrap(): string;
        overflow_wrap(value: string): any;
        overflow_x(): string;
        overflow_x(value: string): any;
        overflow_y(): string;
        overflow_y(value: string): any;
        overscroll_behavior(): string;
        overscroll_behavior(value: string): any;
        overscroll_behavior_block(): string;
        overscroll_behavior_block(value: string): any;
        overscroll_behavior_inline(): string;
        overscroll_behavior_inline(value: string): any;
        overscroll_behavior_x(): string;
        overscroll_behavior_x(value: string): any;
        overscroll_behavior_y(): string;
        overscroll_behavior_y(value: string): any;
        padding_block(): string | undefined;
        padding_block(value: string | number): any;
        padding_block_end(): string;
        padding_block_end(value: string | number): any;
        padding_block_start(): string;
        padding_block_start(value: string | number): any;
        padding_inline(): string;
        padding_inline(value: string | number): any;
        padding_inline_end(): string;
        padding_inline_end(value: string | number): any;
        padding_inline_start(): string;
        padding_inline_start(value: string | number): any;
        page_break_after(): string;
        page_break_after(value: string): any;
        page_break_before(): string;
        page_break_before(value: string): any;
        page_break_inside(): string;
        page_break_inside(value: string): any;
        paint_order(): string;
        paint_order(value: string): any;
        perspective(): string;
        perspective(value: string | number): any;
        perspective_origin(): string;
        perspective_origin(value: string): any;
        place_content(): string;
        place_content(value: string): any;
        place_items(): string;
        place_items(value: string): any;
        place_self(): string;
        place_self(value: string): any;
        pointer_events(): string;
        pointer_events(value: string): any;
        quotes(): string;
        quotes(value: string): any;
        resize(): string;
        resize(value: string): any;
        right(): string;
        right(value: number | string): any;
        row_gap(): string;
        row_gap(value: string | number): any;
        scale(): null | number;
        scale(value: number): any;
        scroll_behavior(): string;
        scroll_behavior(value: string): any;
        scroll_margin(): string;
        scroll_margin(value: string | number): any;
        scroll_margin_block(): string;
        scroll_margin_block(value: string | number): any;
        scroll_margin_block_end(): string;
        scroll_margin_block_end(value: string | number): any;
        scroll_margin_block_start(): string;
        scroll_margin_block_start(value: string | number): any;
        scroll_margin_bottom(): string;
        scroll_margin_bottom(value: string | number): any;
        scroll_margin_inline(): string;
        scroll_margin_inline(value: string | number): any;
        scroll_margin_inline_end(): string;
        scroll_margin_inline_end(value: string | number): any;
        scroll_margin_inline_start(): string;
        scroll_margin_inline_start(value: string): any;
        scroll_margin_left(): string;
        scroll_margin_left(value: string | number): any;
        scroll_margin_right(): string;
        scroll_margin_right(value: string | number): any;
        scroll_margin_top(): string;
        scroll_margin_top(value: string | number): any;
        scroll_padding(): string;
        scroll_padding(value: string | number): any;
        scroll_padding_block(): string;
        scroll_padding_block(value: string | number): any;
        scroll_padding_block_end(): string;
        scroll_padding_block_end(value: string | number): any;
        scroll_padding_block_start(): string;
        scroll_padding_block_start(value: string | number): any;
        scroll_padding_bottom(): string;
        scroll_padding_bottom(value: string | number): any;
        scroll_padding_inline(): string;
        scroll_padding_inline(value: string | number): any;
        scroll_padding_inline_end(): string;
        scroll_padding_inline_end(value: string | number): any;
        scroll_padding_inline_start(): string;
        scroll_padding_inline_start(value: string | number): any;
        scroll_padding_left(): string;
        scroll_padding_left(value: string | number): any;
        scroll_padding_right(): string;
        scroll_padding_right(value: string | number): any;
        scroll_padding_top(): string;
        scroll_padding_top(value: string | number): any;
        scroll_snap_align(): string;
        scroll_snap_align(value: string): any;
        scroll_snap_stop(): string;
        scroll_snap_stop(value: string): any;
        scroll_snap_type(): string;
        scroll_snap_type(value: string): any;
        scrollbar_color(): string;
        scrollbar_color(value: string): any;
        tab_size(): string;
        tab_size(value: string | number): any;
        table_layout(): string;
        table_layout(value: string): any;
        text_align(): string;
        text_align(value: string): any;
        text_align_last(): string;
        text_align_last(value: string): any;
        text_combine_upright(): string;
        text_combine_upright(value: string): any;
        text_decoration(): string;
        text_decoration(value: string): any;
        text_decoration_color(): string;
        text_decoration_color(value: string): any;
        text_decoration_line(): string;
        text_decoration_line(value: string): any;
        text_decoration_style(): string;
        text_decoration_style(value: string): any;
        text_decoration_thickness(): string;
        text_decoration_thickness(value: string | number): any;
        text_emphasis(): string;
        text_emphasis(value: string): any;
        text_indent(): string;
        text_indent(value: string | number): any;
        text_justify(): string;
        text_justify(value: string): any;
        text_orientation(): string;
        text_orientation(value: string): any;
        text_overflow(): string;
        text_overflow(value: string): any;
        text_shadow(): string;
        text_shadow(value: string): any;
        text_transform(): string;
        text_transform(value: string): any;
        text_underline_position(): string;
        text_underline_position(value: string): any;
        top(): string;
        top(value: string | number): any;
        transform(): string;
        transform(value: string): any;
        transform_origin(): string;
        transform_origin(value: string): any;
        transform_style(): string;
        transform_style(value: string): any;
        transition(): string;
        transition(value: string): any;
        transition_delay(): string;
        transition_delay(value: string | number): any;
        transition_duration(): string | undefined;
        transition_duration(value: string | number): any;
        transition_property(): string;
        transition_property(value: string): any;
        transition_timing_function(): string;
        transition_timing_function(value: string): any;
        translate(): string;
        translate(value: string | number): any;
        unicode_bidi(): string;
        unicode_bidi(value: string): any;
        user_select(): string;
        user_select(value: string): any;
        visibility(): string;
        visibility(value: string): any;
        white_space(): string;
        white_space(value: string): any;
        widows(): string;
        widows(value: string | number): any;
        word_break(): string;
        word_break(value: string): any;
        word_spacing(): string;
        word_spacing(value: string | number): any;
        word_wrap(): string;
        word_wrap(value: string): any;
        writing_mode(): string;
        writing_mode(value: string): any;
        focusable(): boolean;
        focusable(value: boolean): any;
        alt(): string;
        alt(value: string): any;
        readonly(): boolean;
        readonly(value: boolean): any;
        download(): string;
        download(value: string): any;
        accept(): string;
        accept(value: string): any;
        accept_charset(): string;
        accept_charset(value: string): any;
        action(): string;
        action(value: string): any;
        async(): boolean;
        async(value: boolean): any;
        auto_complete(): string;
        auto_complete(value: string): any;
        auto_focus(): string;
        auto_focus(value: string): any;
        auto_play(): boolean;
        auto_play(value: boolean): any;
        charset(): string;
        charset(value: string): any;
        checked(): boolean;
        checked(value: boolean): any;
        cite(): string;
        cite(value: string): any;
        cols(): null | number;
        cols(value: number): any;
        colspan(): null | number;
        colspan(value: number): any;
        content_editable(): boolean;
        content_editable(value: boolean): any;
        controls(): boolean;
        controls(value: boolean): any;
        coords(): string;
        coords(value: string): any;
        data(): string;
        data(value: string | number): any;
        datetime(): string;
        datetime(value: string | number): any;
        default(): string;
        default(value: string | number): any;
        defer(): string;
        defer(value: string): any;
        dir(): string;
        dir(value: string): any;
        dirname(): string;
        dirname(value: string): any;
        disabled(): boolean;
        disabled(value: boolean): any;
        draggable(): boolean;
        draggable(value: boolean): any;
        enctype(): string;
        enctype(value: string): any;
        for(): string;
        for(value: string): any;
        form(): string;
        form(value: string): any;
        form_action(): string;
        form_action(value: string): any;
        headers(): string;
        headers(value: string): any;
        high(): string;
        high(value: string | number): any;
        href(): string;
        href(value: string): any;
        href_lang(): string;
        href_lang(value: string): any;
        http_equiv(): string;
        http_equiv(value: string | number): any;
        id(): string;
        id(value: string): any;
        is_map(): boolean;
        is_map(value: boolean): any;
        kind(): string;
        kind(value: string): any;
        label(): string;
        label(value: string): any;
        lang(): string;
        lang(value: string): any;
        list(): string;
        list(value: string): any;
        loop(): boolean;
        loop(value: boolean): any;
        low(): string;
        low(value: string | number): any;
        max(): string;
        max(value: string | number): any;
        max_length(): null | number;
        max_length(value: number): any;
        method(): string;
        method(value: string): any;
        min(): string;
        min(value: string | number): any;
        multiple(): string;
        multiple(value: string | boolean): any;
        muted(): boolean;
        muted(value: boolean): any;
        no_validate(): boolean;
        no_validate(value: boolean): any;
        open(): boolean;
        open(value: boolean): any;
        optimum(): null | number;
        optimum(value: number): any;
        pattern(): string;
        pattern(value: string): any;
        placeholder(): string;
        placeholder(value: string): any;
        poster(): string;
        poster(value: string): any;
        preload(): string;
        preload(value: string): any;
        rel(): string;
        rel(value: string): any;
        required(): boolean;
        required(value: boolean): any;
        reversed(): boolean;
        reversed(value: boolean): any;
        rows(): null | number;
        rows(value: number): any;
        row_span(): null | number;
        row_span(value: number): any;
        sandbox(): string;
        sandbox(value: string): any;
        scope(): string;
        scope(value: string): any;
        selected(): boolean;
        selected(value: boolean): any;
        shape(): string;
        shape(value: string): any;
        size(): null | number;
        size(value: number): any;
        sizes(): string;
        sizes(value: string | number): any;
        span(): null | number;
        span(value: number): any;
        spell_check(): boolean;
        spell_check(value: boolean): any;
        src(): string;
        src(value: string): any;
        src_doc(): string;
        src_doc(value: string): any;
        src_lang(): string;
        src_lang(value: string): any;
        rrsrc_set(): string;
        rrsrc_set(value: string): any;
        start(): null | number;
        start(value: number): any;
        step(): null | number;
        step(value: number): any;
        tab_index(): null | number;
        tab_index(value: number): any;
        target(): string;
        target(value: string): any;
        title(): string;
        title(value: string): any;
        type(): string;
        type(value: string): any;
        use_map(): string;
        use_map(value: string): any;
        value(): string;
        value(value: string | number): any;
        on_blur(): Function | null;
        on_blur(callback: (element: any, event: Event) => void): any;
        on_change(): Function | null;
        on_change(callback: (element: any, event: Event) => void): any;
        on_focus(): Function | null;
        on_focus(callback: (element: any, event: Event) => void): any;
        on_input(): Function | null;
        on_input(callback: (element: any, event: Event) => void): any;
        on_before_input(): Function | null;
        on_before_input(callback: (element: any, event: Event) => void): any;
        on_invalid(): Function | null;
        on_invalid(callback: (element: any, event: Event) => void): any;
        on_reset(): Function | null;
        on_reset(callback: (element: any, event: Event) => void): any;
        on_select(): Function | null;
        on_select(callback: (element: any, event: Event) => void): any;
        on_submit(): Function | null;
        on_submit(callback: (element: any, event: Event) => void): any;
        on_key_down(): Function | null;
        on_key_down(callback: (element: any, event: KeyboardEvent) => void): any;
        on_key_press(): Function | null;
        on_key_press(callback: (element: any, event: KeyboardEvent) => void): any;
        on_key_up(): Function | null;
        on_key_up(callback: (element: any, event: KeyboardEvent) => void): any;
        on_dbl_click(): Function | null;
        on_dbl_click(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_down(): Function | null;
        on_mouse_down(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_move(): Function | null;
        on_mouse_move(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_out(): Function | null;
        on_mouse_out(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_over(): Function | null;
        on_mouse_over(callback: (element: any, event: MouseEvent) => void): any;
        on_mouse_up(): Function | null;
        on_mouse_up(callback: (element: any, event: MouseEvent) => void): any;
        on_wheel(): Function | null;
        on_wheel(callback: (element: any, event: WheelEvent) => void): any;
        on_drag(): Function | null;
        on_drag(callback: (element: any, event: DragEvent) => void): any;
        on_drag_end(): Function | null;
        on_drag_end(callback: (element: any, event: DragEvent) => void): any;
        on_drag_enter(): Function | null;
        on_drag_enter(callback: (element: any, event: DragEvent) => void): any;
        on_drag_leave(): Function | null;
        on_drag_leave(callback: (element: any, event: DragEvent) => void): any;
        on_drag_over(): Function | null;
        on_drag_over(callback: (element: any, event: DragEvent) => void): any;
        on_drag_start(): Function | null;
        on_drag_start(callback: (element: any, event: DragEvent) => void): any;
        on_drop(): Function | null;
        on_drop(callback: (element: any, event: Event) => void): any;
        on_copy(): Function | null;
        on_copy(callback: (element: any, event: Event) => void): any;
        on_cut(): Function | null;
        on_cut(callback: (element: any, event: Event) => void): any;
        on_paste(): Function | null;
        on_paste(callback: (element: any, event: Event) => void): any;
        on_abort(): Function | null;
        on_abort(callback: (element: any, event: Event) => void): any;
        on_canplay(): Function | null;
        on_canplay(callback: (element: any, event: Event) => void): any;
        on_canplay_through(): Function | null;
        on_canplay_through(callback: (element: any, event: Event) => void): any;
        on_cue_change(): Function | null;
        on_cue_change(callback: (element: any, event: Event) => void): any;
        on_duration_change(): Function | null;
        on_duration_change(callback: (element: any, event: Event) => void): any;
        on_emptied(): Function | null;
        on_emptied(callback: (element: any, event: Event) => void): any;
        on_ended(): Function | null;
        on_ended(callback: (element: any, event: Event) => void): any;
        on_error(): Function | null;
        on_error(callback: (element: any, error: string | Event) => void): any;
        on_loaded_data(): Function | null;
        on_loaded_data(callback: (element: any, event: Event) => void): any;
        on_loaded_metadata(): Function | null;
        on_loaded_metadata(callback: (element: any, event: Event) => void): any;
        on_load_start(): Function | null;
        on_load_start(callback: (element: any, event: Event) => void): any;
        on_pause(): Function | null;
        on_pause(callback: (element: any, event: Event) => void): any;
        on_play(): Function | null;
        on_play(callback: (element: any, event: Event) => void): any;
        on_playing(): Function | null;
        on_playing(callback: (element: any, time: any) => void): any;
        on_progress(): Function | null;
        on_progress(callback: ((element: any, event: Event) => void) | null): any;
        on_rate_change(): Function | null;
        on_rate_change(callback: (element: any, event: Event) => void): any;
        on_seeked(): Function | null;
        on_seeked(callback: (element: any, time: any) => void): any;
        on_seeking(): Function | null;
        on_seeking(callback: (element: any, time: any) => void): any;
        on_stalled(): Function | null;
        on_stalled(callback: (element: any, event: Event) => void): any;
        on_suspend(): Function | null;
        on_suspend(callback: Function): any;
        on_time_update(): Function | null;
        on_time_update(callback: (element: any, event: Event) => void): any;
        on_volume_change(): Function | null;
        on_volume_change(callback: (element: any, event: Event) => void): any;
        on_waiting(): Function | null;
        on_waiting(callback: (element: any, time: any) => void): any;
        on_toggle(): Function | null;
        on_toggle(callback: (element: any, event: Event) => void): any;
    };
    [x: string]: any;
    element_tag: string;
    default_style: Record<string, any>;
    default_attributes: Record<string, any>;
    default_events: Record<string, any>;
};
export declare class ZStackElement extends ZStackElement_base {
    constructor(...children: any[]);
    append(...children: any[]): this;
}
export declare const ZStack: (...args: any[]) => any;
export {};
