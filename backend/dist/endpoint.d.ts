export = Endpoint;
declare class Endpoint {
    static rate_limits: Map<any, any>;
    constructor({ method, endpoint, authenticated, rate_limit, params, callback, view, data, content_type, compress, cache, ip_whitelist, sitemap, robots, _templates, _path, _is_static, }: {
        method?: string | undefined;
        endpoint?: string | undefined;
        authenticated?: boolean | undefined;
        rate_limit?: null | undefined;
        params?: null | undefined;
        callback?: null | undefined;
        view?: null | undefined;
        data?: null | undefined;
        content_type?: string | undefined;
        compress?: boolean | undefined;
        cache?: boolean | undefined;
        ip_whitelist?: null | undefined;
        sitemap?: null | undefined;
        robots?: null | undefined;
        _templates?: {} | undefined;
        _path?: null | undefined;
        _is_static?: boolean | undefined;
    });
    method: string;
    endpoint: any;
    authenticated: boolean;
    params: any;
    callback: any;
    data: any;
    content_type: string;
    compress: boolean;
    cache: boolean;
    sitemap: boolean;
    robots: boolean;
    _templates: {};
    _path: any;
    ip_whitelist: any;
    is_static: boolean;
    headers: any[];
    view: any;
    rate_limits: any[];
    _verify_params_parent: string;
    _load_data_by_path(server: any): this;
    _set_headers(stream: any): void;
    _refresh(server: any): Promise<void>;
    _initialize(server: any): Promise<void>;
    _is_compressed: boolean | undefined;
    raw_data: any;
    _serve(stream: any, status_code?: number): Promise<void>;
}
